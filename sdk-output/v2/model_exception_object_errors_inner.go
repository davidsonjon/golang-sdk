/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// ExceptionObjectErrorsInner struct for ExceptionObjectErrorsInner
type ExceptionObjectErrorsInner struct {
	Codes []string `json:"codes,omitempty"`
	Properties []map[string]interface{} `json:"properties,omitempty"`
	Object *string `json:"object,omitempty"`
	Message *string `json:"message,omitempty"`
	Field *string `json:"field,omitempty"`
	RejectedValue map[string]interface{} `json:"rejectedValue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExceptionObjectErrorsInner ExceptionObjectErrorsInner

// NewExceptionObjectErrorsInner instantiates a new ExceptionObjectErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExceptionObjectErrorsInner() *ExceptionObjectErrorsInner {
	this := ExceptionObjectErrorsInner{}
	return &this
}

// NewExceptionObjectErrorsInnerWithDefaults instantiates a new ExceptionObjectErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExceptionObjectErrorsInnerWithDefaults() *ExceptionObjectErrorsInner {
	this := ExceptionObjectErrorsInner{}
	return &this
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *ExceptionObjectErrorsInner) GetCodes() []string {
	if o == nil || isNil(o.Codes) {
		var ret []string
		return ret
	}
	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionObjectErrorsInner) GetCodesOk() ([]string, bool) {
	if o == nil || isNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *ExceptionObjectErrorsInner) HasCodes() bool {
	if o != nil && !isNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given []string and assigns it to the Codes field.
func (o *ExceptionObjectErrorsInner) SetCodes(v []string) {
	o.Codes = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ExceptionObjectErrorsInner) GetProperties() []map[string]interface{} {
	if o == nil || isNil(o.Properties) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionObjectErrorsInner) GetPropertiesOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ExceptionObjectErrorsInner) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []map[string]interface{} and assigns it to the Properties field.
func (o *ExceptionObjectErrorsInner) SetProperties(v []map[string]interface{}) {
	o.Properties = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ExceptionObjectErrorsInner) GetObject() string {
	if o == nil || isNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionObjectErrorsInner) GetObjectOk() (*string, bool) {
	if o == nil || isNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ExceptionObjectErrorsInner) HasObject() bool {
	if o != nil && !isNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ExceptionObjectErrorsInner) SetObject(v string) {
	o.Object = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ExceptionObjectErrorsInner) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionObjectErrorsInner) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ExceptionObjectErrorsInner) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ExceptionObjectErrorsInner) SetMessage(v string) {
	o.Message = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ExceptionObjectErrorsInner) GetField() string {
	if o == nil || isNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionObjectErrorsInner) GetFieldOk() (*string, bool) {
	if o == nil || isNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ExceptionObjectErrorsInner) HasField() bool {
	if o != nil && !isNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *ExceptionObjectErrorsInner) SetField(v string) {
	o.Field = &v
}

// GetRejectedValue returns the RejectedValue field value if set, zero value otherwise.
func (o *ExceptionObjectErrorsInner) GetRejectedValue() map[string]interface{} {
	if o == nil || isNil(o.RejectedValue) {
		var ret map[string]interface{}
		return ret
	}
	return o.RejectedValue
}

// GetRejectedValueOk returns a tuple with the RejectedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionObjectErrorsInner) GetRejectedValueOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.RejectedValue) {
		return map[string]interface{}{}, false
	}
	return o.RejectedValue, true
}

// HasRejectedValue returns a boolean if a field has been set.
func (o *ExceptionObjectErrorsInner) HasRejectedValue() bool {
	if o != nil && !isNil(o.RejectedValue) {
		return true
	}

	return false
}

// SetRejectedValue gets a reference to the given map[string]interface{} and assigns it to the RejectedValue field.
func (o *ExceptionObjectErrorsInner) SetRejectedValue(v map[string]interface{}) {
	o.RejectedValue = v
}

func (o ExceptionObjectErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	if !isNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !isNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !isNil(o.RejectedValue) {
		toSerialize["rejectedValue"] = o.RejectedValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ExceptionObjectErrorsInner) UnmarshalJSON(bytes []byte) (err error) {
	varExceptionObjectErrorsInner := _ExceptionObjectErrorsInner{}

	if err = json.Unmarshal(bytes, &varExceptionObjectErrorsInner); err == nil {
		*o = ExceptionObjectErrorsInner(varExceptionObjectErrorsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "codes")
		delete(additionalProperties, "properties")
		delete(additionalProperties, "object")
		delete(additionalProperties, "message")
		delete(additionalProperties, "field")
		delete(additionalProperties, "rejectedValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExceptionObjectErrorsInner struct {
	value *ExceptionObjectErrorsInner
	isSet bool
}

func (v NullableExceptionObjectErrorsInner) Get() *ExceptionObjectErrorsInner {
	return v.value
}

func (v *NullableExceptionObjectErrorsInner) Set(val *ExceptionObjectErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableExceptionObjectErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableExceptionObjectErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExceptionObjectErrorsInner(val *ExceptionObjectErrorsInner) *NullableExceptionObjectErrorsInner {
	return &NullableExceptionObjectErrorsInner{value: val, isSet: true}
}

func (v NullableExceptionObjectErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExceptionObjectErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


