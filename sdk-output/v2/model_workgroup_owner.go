/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// WorkgroupOwner struct for WorkgroupOwner
type WorkgroupOwner struct {
	DisplayName *string `json:"displayName,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkgroupOwner WorkgroupOwner

// NewWorkgroupOwner instantiates a new WorkgroupOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkgroupOwner() *WorkgroupOwner {
	this := WorkgroupOwner{}
	return &this
}

// NewWorkgroupOwnerWithDefaults instantiates a new WorkgroupOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkgroupOwnerWithDefaults() *WorkgroupOwner {
	this := WorkgroupOwner{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *WorkgroupOwner) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkgroupOwner) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *WorkgroupOwner) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *WorkgroupOwner) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *WorkgroupOwner) GetEmailAddress() string {
	if o == nil || isNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkgroupOwner) GetEmailAddressOk() (*string, bool) {
	if o == nil || isNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *WorkgroupOwner) HasEmailAddress() bool {
	if o != nil && !isNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *WorkgroupOwner) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkgroupOwner) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkgroupOwner) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkgroupOwner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkgroupOwner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkgroupOwner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkgroupOwner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkgroupOwner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkgroupOwner) SetName(v string) {
	o.Name = &v
}

func (o WorkgroupOwner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.EmailAddress) {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *WorkgroupOwner) UnmarshalJSON(bytes []byte) (err error) {
	varWorkgroupOwner := _WorkgroupOwner{}

	if err = json.Unmarshal(bytes, &varWorkgroupOwner); err == nil {
		*o = WorkgroupOwner(varWorkgroupOwner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "emailAddress")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkgroupOwner struct {
	value *WorkgroupOwner
	isSet bool
}

func (v NullableWorkgroupOwner) Get() *WorkgroupOwner {
	return v.value
}

func (v *NullableWorkgroupOwner) Set(val *WorkgroupOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkgroupOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkgroupOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkgroupOwner(val *WorkgroupOwner) *NullableWorkgroupOwner {
	return &NullableWorkgroupOwner{value: val, isSet: true}
}

func (v NullableWorkgroupOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkgroupOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


