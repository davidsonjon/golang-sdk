/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// LauncherEto struct for LauncherEto
type LauncherEto struct {
	UsageCertAttested *bool `json:"usageCertAttested,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LauncherEto LauncherEto

// NewLauncherEto instantiates a new LauncherEto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLauncherEto() *LauncherEto {
	this := LauncherEto{}
	return &this
}

// NewLauncherEtoWithDefaults instantiates a new LauncherEto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLauncherEtoWithDefaults() *LauncherEto {
	this := LauncherEto{}
	return &this
}

// GetUsageCertAttested returns the UsageCertAttested field value if set, zero value otherwise.
func (o *LauncherEto) GetUsageCertAttested() bool {
	if o == nil || isNil(o.UsageCertAttested) {
		var ret bool
		return ret
	}
	return *o.UsageCertAttested
}

// GetUsageCertAttestedOk returns a tuple with the UsageCertAttested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LauncherEto) GetUsageCertAttestedOk() (*bool, bool) {
	if o == nil || isNil(o.UsageCertAttested) {
		return nil, false
	}
	return o.UsageCertAttested, true
}

// HasUsageCertAttested returns a boolean if a field has been set.
func (o *LauncherEto) HasUsageCertAttested() bool {
	if o != nil && !isNil(o.UsageCertAttested) {
		return true
	}

	return false
}

// SetUsageCertAttested gets a reference to the given bool and assigns it to the UsageCertAttested field.
func (o *LauncherEto) SetUsageCertAttested(v bool) {
	o.UsageCertAttested = &v
}

func (o LauncherEto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.UsageCertAttested) {
		toSerialize["usageCertAttested"] = o.UsageCertAttested
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *LauncherEto) UnmarshalJSON(bytes []byte) (err error) {
	varLauncherEto := _LauncherEto{}

	if err = json.Unmarshal(bytes, &varLauncherEto); err == nil {
		*o = LauncherEto(varLauncherEto)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "usageCertAttested")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLauncherEto struct {
	value *LauncherEto
	isSet bool
}

func (v NullableLauncherEto) Get() *LauncherEto {
	return v.value
}

func (v *NullableLauncherEto) Set(val *LauncherEto) {
	v.value = val
	v.isSet = true
}

func (v NullableLauncherEto) IsSet() bool {
	return v.isSet
}

func (v *NullableLauncherEto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLauncherEto(val *LauncherEto) *NullableLauncherEto {
	return &NullableLauncherEto{value: val, isSet: true}
}

func (v NullableLauncherEto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLauncherEto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


