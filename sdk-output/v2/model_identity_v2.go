/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
	"time"
)

// IdentityV2 struct for IdentityV2
type IdentityV2 struct {
	Id *string `json:"id,omitempty"`
	Alias *string `json:"alias,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Name *string `json:"name,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Status *string `json:"status,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	EncryptionKey *string `json:"encryptionKey,omitempty"`
	EncryptionCheck *string `json:"encryptionCheck,omitempty"`
	PasswordResetSinceLastLogin *bool `json:"passwordResetSinceLastLogin,omitempty"`
	UsageCertAttested *time.Time `json:"usageCertAttested,omitempty"`
	IdentityFlags map[string]interface{} `json:"identityFlags,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	AltAuthVia *string `json:"altAuthVia,omitempty"`
	AltAuthViaIntegrationData *string `json:"altAuthViaIntegrationData,omitempty"`
	KbaAnswers *int32 `json:"kbaAnswers,omitempty"`
	DisablePasswordReset *bool `json:"disablePasswordReset,omitempty"`
	PtaSourceId *string `json:"ptaSourceId,omitempty"`
	SupportsPasswordPush *bool `json:"supportsPasswordPush,omitempty"`
	Attributes *DynamicSchemaEto `json:"attributes,omitempty"`
	Role []string `json:"role,omitempty"`
	// Work phone.
	Phone *string `json:"phone,omitempty"`
	// Work email.
	Email *string `json:"email,omitempty"`
	AltEmail *string `json:"altEmail,omitempty"`
	AltPhone *string `json:"altPhone,omitempty"`
	EmployeeNumber *string `json:"employeeNumber,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityV2 IdentityV2

// NewIdentityV2 instantiates a new IdentityV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityV2() *IdentityV2 {
	this := IdentityV2{}
	return &this
}

// NewIdentityV2WithDefaults instantiates a new IdentityV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityV2WithDefaults() *IdentityV2 {
	this := IdentityV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityV2) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityV2) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityV2) SetId(v string) {
	o.Id = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *IdentityV2) GetAlias() string {
	if o == nil || isNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetAliasOk() (*string, bool) {
	if o == nil || isNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *IdentityV2) HasAlias() bool {
	if o != nil && !isNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *IdentityV2) SetAlias(v string) {
	o.Alias = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *IdentityV2) GetUid() string {
	if o == nil || isNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetUidOk() (*string, bool) {
	if o == nil || isNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *IdentityV2) HasUid() bool {
	if o != nil && !isNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *IdentityV2) SetUid(v string) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityV2) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityV2) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityV2) SetName(v string) {
	o.Name = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *IdentityV2) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *IdentityV2) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *IdentityV2) SetUuid(v string) {
	o.Uuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IdentityV2) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IdentityV2) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *IdentityV2) SetStatus(v string) {
	o.Status = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *IdentityV2) GetDateCreated() time.Time {
	if o == nil || isNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *IdentityV2) HasDateCreated() bool {
	if o != nil && !isNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *IdentityV2) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *IdentityV2) GetLastUpdated() time.Time {
	if o == nil || isNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *IdentityV2) HasLastUpdated() bool {
	if o != nil && !isNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *IdentityV2) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *IdentityV2) GetEncryptionKey() string {
	if o == nil || isNil(o.EncryptionKey) {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetEncryptionKeyOk() (*string, bool) {
	if o == nil || isNil(o.EncryptionKey) {
		return nil, false
	}
	return o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *IdentityV2) HasEncryptionKey() bool {
	if o != nil && !isNil(o.EncryptionKey) {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *IdentityV2) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

// GetEncryptionCheck returns the EncryptionCheck field value if set, zero value otherwise.
func (o *IdentityV2) GetEncryptionCheck() string {
	if o == nil || isNil(o.EncryptionCheck) {
		var ret string
		return ret
	}
	return *o.EncryptionCheck
}

// GetEncryptionCheckOk returns a tuple with the EncryptionCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetEncryptionCheckOk() (*string, bool) {
	if o == nil || isNil(o.EncryptionCheck) {
		return nil, false
	}
	return o.EncryptionCheck, true
}

// HasEncryptionCheck returns a boolean if a field has been set.
func (o *IdentityV2) HasEncryptionCheck() bool {
	if o != nil && !isNil(o.EncryptionCheck) {
		return true
	}

	return false
}

// SetEncryptionCheck gets a reference to the given string and assigns it to the EncryptionCheck field.
func (o *IdentityV2) SetEncryptionCheck(v string) {
	o.EncryptionCheck = &v
}

// GetPasswordResetSinceLastLogin returns the PasswordResetSinceLastLogin field value if set, zero value otherwise.
func (o *IdentityV2) GetPasswordResetSinceLastLogin() bool {
	if o == nil || isNil(o.PasswordResetSinceLastLogin) {
		var ret bool
		return ret
	}
	return *o.PasswordResetSinceLastLogin
}

// GetPasswordResetSinceLastLoginOk returns a tuple with the PasswordResetSinceLastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetPasswordResetSinceLastLoginOk() (*bool, bool) {
	if o == nil || isNil(o.PasswordResetSinceLastLogin) {
		return nil, false
	}
	return o.PasswordResetSinceLastLogin, true
}

// HasPasswordResetSinceLastLogin returns a boolean if a field has been set.
func (o *IdentityV2) HasPasswordResetSinceLastLogin() bool {
	if o != nil && !isNil(o.PasswordResetSinceLastLogin) {
		return true
	}

	return false
}

// SetPasswordResetSinceLastLogin gets a reference to the given bool and assigns it to the PasswordResetSinceLastLogin field.
func (o *IdentityV2) SetPasswordResetSinceLastLogin(v bool) {
	o.PasswordResetSinceLastLogin = &v
}

// GetUsageCertAttested returns the UsageCertAttested field value if set, zero value otherwise.
func (o *IdentityV2) GetUsageCertAttested() time.Time {
	if o == nil || isNil(o.UsageCertAttested) {
		var ret time.Time
		return ret
	}
	return *o.UsageCertAttested
}

// GetUsageCertAttestedOk returns a tuple with the UsageCertAttested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetUsageCertAttestedOk() (*time.Time, bool) {
	if o == nil || isNil(o.UsageCertAttested) {
		return nil, false
	}
	return o.UsageCertAttested, true
}

// HasUsageCertAttested returns a boolean if a field has been set.
func (o *IdentityV2) HasUsageCertAttested() bool {
	if o != nil && !isNil(o.UsageCertAttested) {
		return true
	}

	return false
}

// SetUsageCertAttested gets a reference to the given time.Time and assigns it to the UsageCertAttested field.
func (o *IdentityV2) SetUsageCertAttested(v time.Time) {
	o.UsageCertAttested = &v
}

// GetIdentityFlags returns the IdentityFlags field value if set, zero value otherwise.
func (o *IdentityV2) GetIdentityFlags() map[string]interface{} {
	if o == nil || isNil(o.IdentityFlags) {
		var ret map[string]interface{}
		return ret
	}
	return o.IdentityFlags
}

// GetIdentityFlagsOk returns a tuple with the IdentityFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetIdentityFlagsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.IdentityFlags) {
		return map[string]interface{}{}, false
	}
	return o.IdentityFlags, true
}

// HasIdentityFlags returns a boolean if a field has been set.
func (o *IdentityV2) HasIdentityFlags() bool {
	if o != nil && !isNil(o.IdentityFlags) {
		return true
	}

	return false
}

// SetIdentityFlags gets a reference to the given map[string]interface{} and assigns it to the IdentityFlags field.
func (o *IdentityV2) SetIdentityFlags(v map[string]interface{}) {
	o.IdentityFlags = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *IdentityV2) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *IdentityV2) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *IdentityV2) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAltAuthVia returns the AltAuthVia field value if set, zero value otherwise.
func (o *IdentityV2) GetAltAuthVia() string {
	if o == nil || isNil(o.AltAuthVia) {
		var ret string
		return ret
	}
	return *o.AltAuthVia
}

// GetAltAuthViaOk returns a tuple with the AltAuthVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetAltAuthViaOk() (*string, bool) {
	if o == nil || isNil(o.AltAuthVia) {
		return nil, false
	}
	return o.AltAuthVia, true
}

// HasAltAuthVia returns a boolean if a field has been set.
func (o *IdentityV2) HasAltAuthVia() bool {
	if o != nil && !isNil(o.AltAuthVia) {
		return true
	}

	return false
}

// SetAltAuthVia gets a reference to the given string and assigns it to the AltAuthVia field.
func (o *IdentityV2) SetAltAuthVia(v string) {
	o.AltAuthVia = &v
}

// GetAltAuthViaIntegrationData returns the AltAuthViaIntegrationData field value if set, zero value otherwise.
func (o *IdentityV2) GetAltAuthViaIntegrationData() string {
	if o == nil || isNil(o.AltAuthViaIntegrationData) {
		var ret string
		return ret
	}
	return *o.AltAuthViaIntegrationData
}

// GetAltAuthViaIntegrationDataOk returns a tuple with the AltAuthViaIntegrationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetAltAuthViaIntegrationDataOk() (*string, bool) {
	if o == nil || isNil(o.AltAuthViaIntegrationData) {
		return nil, false
	}
	return o.AltAuthViaIntegrationData, true
}

// HasAltAuthViaIntegrationData returns a boolean if a field has been set.
func (o *IdentityV2) HasAltAuthViaIntegrationData() bool {
	if o != nil && !isNil(o.AltAuthViaIntegrationData) {
		return true
	}

	return false
}

// SetAltAuthViaIntegrationData gets a reference to the given string and assigns it to the AltAuthViaIntegrationData field.
func (o *IdentityV2) SetAltAuthViaIntegrationData(v string) {
	o.AltAuthViaIntegrationData = &v
}

// GetKbaAnswers returns the KbaAnswers field value if set, zero value otherwise.
func (o *IdentityV2) GetKbaAnswers() int32 {
	if o == nil || isNil(o.KbaAnswers) {
		var ret int32
		return ret
	}
	return *o.KbaAnswers
}

// GetKbaAnswersOk returns a tuple with the KbaAnswers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetKbaAnswersOk() (*int32, bool) {
	if o == nil || isNil(o.KbaAnswers) {
		return nil, false
	}
	return o.KbaAnswers, true
}

// HasKbaAnswers returns a boolean if a field has been set.
func (o *IdentityV2) HasKbaAnswers() bool {
	if o != nil && !isNil(o.KbaAnswers) {
		return true
	}

	return false
}

// SetKbaAnswers gets a reference to the given int32 and assigns it to the KbaAnswers field.
func (o *IdentityV2) SetKbaAnswers(v int32) {
	o.KbaAnswers = &v
}

// GetDisablePasswordReset returns the DisablePasswordReset field value if set, zero value otherwise.
func (o *IdentityV2) GetDisablePasswordReset() bool {
	if o == nil || isNil(o.DisablePasswordReset) {
		var ret bool
		return ret
	}
	return *o.DisablePasswordReset
}

// GetDisablePasswordResetOk returns a tuple with the DisablePasswordReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetDisablePasswordResetOk() (*bool, bool) {
	if o == nil || isNil(o.DisablePasswordReset) {
		return nil, false
	}
	return o.DisablePasswordReset, true
}

// HasDisablePasswordReset returns a boolean if a field has been set.
func (o *IdentityV2) HasDisablePasswordReset() bool {
	if o != nil && !isNil(o.DisablePasswordReset) {
		return true
	}

	return false
}

// SetDisablePasswordReset gets a reference to the given bool and assigns it to the DisablePasswordReset field.
func (o *IdentityV2) SetDisablePasswordReset(v bool) {
	o.DisablePasswordReset = &v
}

// GetPtaSourceId returns the PtaSourceId field value if set, zero value otherwise.
func (o *IdentityV2) GetPtaSourceId() string {
	if o == nil || isNil(o.PtaSourceId) {
		var ret string
		return ret
	}
	return *o.PtaSourceId
}

// GetPtaSourceIdOk returns a tuple with the PtaSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetPtaSourceIdOk() (*string, bool) {
	if o == nil || isNil(o.PtaSourceId) {
		return nil, false
	}
	return o.PtaSourceId, true
}

// HasPtaSourceId returns a boolean if a field has been set.
func (o *IdentityV2) HasPtaSourceId() bool {
	if o != nil && !isNil(o.PtaSourceId) {
		return true
	}

	return false
}

// SetPtaSourceId gets a reference to the given string and assigns it to the PtaSourceId field.
func (o *IdentityV2) SetPtaSourceId(v string) {
	o.PtaSourceId = &v
}

// GetSupportsPasswordPush returns the SupportsPasswordPush field value if set, zero value otherwise.
func (o *IdentityV2) GetSupportsPasswordPush() bool {
	if o == nil || isNil(o.SupportsPasswordPush) {
		var ret bool
		return ret
	}
	return *o.SupportsPasswordPush
}

// GetSupportsPasswordPushOk returns a tuple with the SupportsPasswordPush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetSupportsPasswordPushOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsPasswordPush) {
		return nil, false
	}
	return o.SupportsPasswordPush, true
}

// HasSupportsPasswordPush returns a boolean if a field has been set.
func (o *IdentityV2) HasSupportsPasswordPush() bool {
	if o != nil && !isNil(o.SupportsPasswordPush) {
		return true
	}

	return false
}

// SetSupportsPasswordPush gets a reference to the given bool and assigns it to the SupportsPasswordPush field.
func (o *IdentityV2) SetSupportsPasswordPush(v bool) {
	o.SupportsPasswordPush = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *IdentityV2) GetAttributes() DynamicSchemaEto {
	if o == nil || isNil(o.Attributes) {
		var ret DynamicSchemaEto
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetAttributesOk() (*DynamicSchemaEto, bool) {
	if o == nil || isNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *IdentityV2) HasAttributes() bool {
	if o != nil && !isNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given DynamicSchemaEto and assigns it to the Attributes field.
func (o *IdentityV2) SetAttributes(v DynamicSchemaEto) {
	o.Attributes = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *IdentityV2) GetRole() []string {
	if o == nil || isNil(o.Role) {
		var ret []string
		return ret
	}
	return o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetRoleOk() ([]string, bool) {
	if o == nil || isNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *IdentityV2) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given []string and assigns it to the Role field.
func (o *IdentityV2) SetRole(v []string) {
	o.Role = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *IdentityV2) GetPhone() string {
	if o == nil || isNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetPhoneOk() (*string, bool) {
	if o == nil || isNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *IdentityV2) HasPhone() bool {
	if o != nil && !isNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *IdentityV2) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IdentityV2) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IdentityV2) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IdentityV2) SetEmail(v string) {
	o.Email = &v
}

// GetAltEmail returns the AltEmail field value if set, zero value otherwise.
func (o *IdentityV2) GetAltEmail() string {
	if o == nil || isNil(o.AltEmail) {
		var ret string
		return ret
	}
	return *o.AltEmail
}

// GetAltEmailOk returns a tuple with the AltEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetAltEmailOk() (*string, bool) {
	if o == nil || isNil(o.AltEmail) {
		return nil, false
	}
	return o.AltEmail, true
}

// HasAltEmail returns a boolean if a field has been set.
func (o *IdentityV2) HasAltEmail() bool {
	if o != nil && !isNil(o.AltEmail) {
		return true
	}

	return false
}

// SetAltEmail gets a reference to the given string and assigns it to the AltEmail field.
func (o *IdentityV2) SetAltEmail(v string) {
	o.AltEmail = &v
}

// GetAltPhone returns the AltPhone field value if set, zero value otherwise.
func (o *IdentityV2) GetAltPhone() string {
	if o == nil || isNil(o.AltPhone) {
		var ret string
		return ret
	}
	return *o.AltPhone
}

// GetAltPhoneOk returns a tuple with the AltPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetAltPhoneOk() (*string, bool) {
	if o == nil || isNil(o.AltPhone) {
		return nil, false
	}
	return o.AltPhone, true
}

// HasAltPhone returns a boolean if a field has been set.
func (o *IdentityV2) HasAltPhone() bool {
	if o != nil && !isNil(o.AltPhone) {
		return true
	}

	return false
}

// SetAltPhone gets a reference to the given string and assigns it to the AltPhone field.
func (o *IdentityV2) SetAltPhone(v string) {
	o.AltPhone = &v
}

// GetEmployeeNumber returns the EmployeeNumber field value if set, zero value otherwise.
func (o *IdentityV2) GetEmployeeNumber() string {
	if o == nil || isNil(o.EmployeeNumber) {
		var ret string
		return ret
	}
	return *o.EmployeeNumber
}

// GetEmployeeNumberOk returns a tuple with the EmployeeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityV2) GetEmployeeNumberOk() (*string, bool) {
	if o == nil || isNil(o.EmployeeNumber) {
		return nil, false
	}
	return o.EmployeeNumber, true
}

// HasEmployeeNumber returns a boolean if a field has been set.
func (o *IdentityV2) HasEmployeeNumber() bool {
	if o != nil && !isNil(o.EmployeeNumber) {
		return true
	}

	return false
}

// SetEmployeeNumber gets a reference to the given string and assigns it to the EmployeeNumber field.
func (o *IdentityV2) SetEmployeeNumber(v string) {
	o.EmployeeNumber = &v
}

func (o IdentityV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !isNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !isNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !isNil(o.EncryptionKey) {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	if !isNil(o.EncryptionCheck) {
		toSerialize["encryptionCheck"] = o.EncryptionCheck
	}
	if !isNil(o.PasswordResetSinceLastLogin) {
		toSerialize["passwordResetSinceLastLogin"] = o.PasswordResetSinceLastLogin
	}
	if !isNil(o.UsageCertAttested) {
		toSerialize["usageCertAttested"] = o.UsageCertAttested
	}
	if !isNil(o.IdentityFlags) {
		toSerialize["identityFlags"] = o.IdentityFlags
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.AltAuthVia) {
		toSerialize["altAuthVia"] = o.AltAuthVia
	}
	if !isNil(o.AltAuthViaIntegrationData) {
		toSerialize["altAuthViaIntegrationData"] = o.AltAuthViaIntegrationData
	}
	if !isNil(o.KbaAnswers) {
		toSerialize["kbaAnswers"] = o.KbaAnswers
	}
	if !isNil(o.DisablePasswordReset) {
		toSerialize["disablePasswordReset"] = o.DisablePasswordReset
	}
	if !isNil(o.PtaSourceId) {
		toSerialize["ptaSourceId"] = o.PtaSourceId
	}
	if !isNil(o.SupportsPasswordPush) {
		toSerialize["supportsPasswordPush"] = o.SupportsPasswordPush
	}
	if !isNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.AltEmail) {
		toSerialize["altEmail"] = o.AltEmail
	}
	if !isNil(o.AltPhone) {
		toSerialize["altPhone"] = o.AltPhone
	}
	if !isNil(o.EmployeeNumber) {
		toSerialize["employeeNumber"] = o.EmployeeNumber
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *IdentityV2) UnmarshalJSON(bytes []byte) (err error) {
	varIdentityV2 := _IdentityV2{}

	if err = json.Unmarshal(bytes, &varIdentityV2); err == nil {
		*o = IdentityV2(varIdentityV2)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "alias")
		delete(additionalProperties, "uid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "status")
		delete(additionalProperties, "dateCreated")
		delete(additionalProperties, "lastUpdated")
		delete(additionalProperties, "encryptionKey")
		delete(additionalProperties, "encryptionCheck")
		delete(additionalProperties, "passwordResetSinceLastLogin")
		delete(additionalProperties, "usageCertAttested")
		delete(additionalProperties, "identityFlags")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "altAuthVia")
		delete(additionalProperties, "altAuthViaIntegrationData")
		delete(additionalProperties, "kbaAnswers")
		delete(additionalProperties, "disablePasswordReset")
		delete(additionalProperties, "ptaSourceId")
		delete(additionalProperties, "supportsPasswordPush")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "role")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "email")
		delete(additionalProperties, "altEmail")
		delete(additionalProperties, "altPhone")
		delete(additionalProperties, "employeeNumber")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityV2 struct {
	value *IdentityV2
	isSet bool
}

func (v NullableIdentityV2) Get() *IdentityV2 {
	return v.value
}

func (v *NullableIdentityV2) Set(val *IdentityV2) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityV2) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityV2(val *IdentityV2) *NullableIdentityV2 {
	return &NullableIdentityV2{value: val, isSet: true}
}

func (v NullableIdentityV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


