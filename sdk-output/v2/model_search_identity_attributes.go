/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// SearchIdentityAttributes Dynamic schema, with no predefined attributes.
type SearchIdentityAttributes struct {
	Attribute *string `json:"attribute,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SearchIdentityAttributes SearchIdentityAttributes

// NewSearchIdentityAttributes instantiates a new SearchIdentityAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchIdentityAttributes() *SearchIdentityAttributes {
	this := SearchIdentityAttributes{}
	return &this
}

// NewSearchIdentityAttributesWithDefaults instantiates a new SearchIdentityAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchIdentityAttributesWithDefaults() *SearchIdentityAttributes {
	this := SearchIdentityAttributes{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *SearchIdentityAttributes) GetAttribute() string {
	if o == nil || isNil(o.Attribute) {
		var ret string
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIdentityAttributes) GetAttributeOk() (*string, bool) {
	if o == nil || isNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *SearchIdentityAttributes) HasAttribute() bool {
	if o != nil && !isNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given string and assigns it to the Attribute field.
func (o *SearchIdentityAttributes) SetAttribute(v string) {
	o.Attribute = &v
}

func (o SearchIdentityAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SearchIdentityAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varSearchIdentityAttributes := _SearchIdentityAttributes{}

	if err = json.Unmarshal(bytes, &varSearchIdentityAttributes); err == nil {
		*o = SearchIdentityAttributes(varSearchIdentityAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attribute")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchIdentityAttributes struct {
	value *SearchIdentityAttributes
	isSet bool
}

func (v NullableSearchIdentityAttributes) Get() *SearchIdentityAttributes {
	return v.value
}

func (v *NullableSearchIdentityAttributes) Set(val *SearchIdentityAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchIdentityAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchIdentityAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchIdentityAttributes(val *SearchIdentityAttributes) *NullableSearchIdentityAttributes {
	return &NullableSearchIdentityAttributes{value: val, isSet: true}
}

func (v NullableSearchIdentityAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchIdentityAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


