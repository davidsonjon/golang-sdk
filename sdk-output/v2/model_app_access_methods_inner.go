/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// AppAccessMethodsInner struct for AppAccessMethodsInner
type AppAccessMethodsInner struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Href *string `json:"href,omitempty"`
	Method *string `json:"method,omitempty"`
	Rel *string `json:"rel,omitempty"`
	Status *string `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppAccessMethodsInner AppAccessMethodsInner

// NewAppAccessMethodsInner instantiates a new AppAccessMethodsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppAccessMethodsInner() *AppAccessMethodsInner {
	this := AppAccessMethodsInner{}
	return &this
}

// NewAppAccessMethodsInnerWithDefaults instantiates a new AppAccessMethodsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppAccessMethodsInnerWithDefaults() *AppAccessMethodsInner {
	this := AppAccessMethodsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppAccessMethodsInner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccessMethodsInner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppAccessMethodsInner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppAccessMethodsInner) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AppAccessMethodsInner) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccessMethodsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AppAccessMethodsInner) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AppAccessMethodsInner) SetDescription(v string) {
	o.Description = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *AppAccessMethodsInner) GetHref() string {
	if o == nil || isNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccessMethodsInner) GetHrefOk() (*string, bool) {
	if o == nil || isNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *AppAccessMethodsInner) HasHref() bool {
	if o != nil && !isNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *AppAccessMethodsInner) SetHref(v string) {
	o.Href = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *AppAccessMethodsInner) GetMethod() string {
	if o == nil || isNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccessMethodsInner) GetMethodOk() (*string, bool) {
	if o == nil || isNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *AppAccessMethodsInner) HasMethod() bool {
	if o != nil && !isNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *AppAccessMethodsInner) SetMethod(v string) {
	o.Method = &v
}

// GetRel returns the Rel field value if set, zero value otherwise.
func (o *AppAccessMethodsInner) GetRel() string {
	if o == nil || isNil(o.Rel) {
		var ret string
		return ret
	}
	return *o.Rel
}

// GetRelOk returns a tuple with the Rel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccessMethodsInner) GetRelOk() (*string, bool) {
	if o == nil || isNil(o.Rel) {
		return nil, false
	}
	return o.Rel, true
}

// HasRel returns a boolean if a field has been set.
func (o *AppAccessMethodsInner) HasRel() bool {
	if o != nil && !isNil(o.Rel) {
		return true
	}

	return false
}

// SetRel gets a reference to the given string and assigns it to the Rel field.
func (o *AppAccessMethodsInner) SetRel(v string) {
	o.Rel = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AppAccessMethodsInner) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccessMethodsInner) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AppAccessMethodsInner) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AppAccessMethodsInner) SetStatus(v string) {
	o.Status = &v
}

func (o AppAccessMethodsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !isNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !isNil(o.Rel) {
		toSerialize["rel"] = o.Rel
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AppAccessMethodsInner) UnmarshalJSON(bytes []byte) (err error) {
	varAppAccessMethodsInner := _AppAccessMethodsInner{}

	if err = json.Unmarshal(bytes, &varAppAccessMethodsInner); err == nil {
		*o = AppAccessMethodsInner(varAppAccessMethodsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "href")
		delete(additionalProperties, "method")
		delete(additionalProperties, "rel")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppAccessMethodsInner struct {
	value *AppAccessMethodsInner
	isSet bool
}

func (v NullableAppAccessMethodsInner) Get() *AppAccessMethodsInner {
	return v.value
}

func (v *NullableAppAccessMethodsInner) Set(val *AppAccessMethodsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAppAccessMethodsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAppAccessMethodsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppAccessMethodsInner(val *AppAccessMethodsInner) *NullableAppAccessMethodsInner {
	return &NullableAppAccessMethodsInner{value: val, isSet: true}
}

func (v NullableAppAccessMethodsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppAccessMethodsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


