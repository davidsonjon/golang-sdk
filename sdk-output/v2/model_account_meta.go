/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// AccountMeta struct for AccountMeta
type AccountMeta struct {
	Created *string `json:"created,omitempty"`
	Modified *string `json:"modified,omitempty"`
	Type *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountMeta AccountMeta

// NewAccountMeta instantiates a new AccountMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountMeta() *AccountMeta {
	this := AccountMeta{}
	return &this
}

// NewAccountMetaWithDefaults instantiates a new AccountMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountMetaWithDefaults() *AccountMeta {
	this := AccountMeta{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AccountMeta) GetCreated() string {
	if o == nil || isNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMeta) GetCreatedOk() (*string, bool) {
	if o == nil || isNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AccountMeta) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *AccountMeta) SetCreated(v string) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *AccountMeta) GetModified() string {
	if o == nil || isNil(o.Modified) {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMeta) GetModifiedOk() (*string, bool) {
	if o == nil || isNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *AccountMeta) HasModified() bool {
	if o != nil && !isNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *AccountMeta) SetModified(v string) {
	o.Modified = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccountMeta) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountMeta) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccountMeta) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccountMeta) SetType(v string) {
	o.Type = &v
}

func (o AccountMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AccountMeta) UnmarshalJSON(bytes []byte) (err error) {
	varAccountMeta := _AccountMeta{}

	if err = json.Unmarshal(bytes, &varAccountMeta); err == nil {
		*o = AccountMeta(varAccountMeta)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountMeta struct {
	value *AccountMeta
	isSet bool
}

func (v NullableAccountMeta) Get() *AccountMeta {
	return v.value
}

func (v *NullableAccountMeta) Set(val *AccountMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountMeta(val *AccountMeta) *NullableAccountMeta {
	return &NullableAccountMeta{value: val, isSet: true}
}

func (v NullableAccountMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


