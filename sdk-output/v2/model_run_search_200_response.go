/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// RunSearch200Response struct for RunSearch200Response
type RunSearch200Response struct {
	Identity []SearchIdentity `json:"identity,omitempty"`
	Entitlement []SearchEntitlement `json:"entitlement,omitempty"`
	Event []SearchEvent `json:"event,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RunSearch200Response RunSearch200Response

// NewRunSearch200Response instantiates a new RunSearch200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunSearch200Response() *RunSearch200Response {
	this := RunSearch200Response{}
	return &this
}

// NewRunSearch200ResponseWithDefaults instantiates a new RunSearch200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunSearch200ResponseWithDefaults() *RunSearch200Response {
	this := RunSearch200Response{}
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *RunSearch200Response) GetIdentity() []SearchIdentity {
	if o == nil || isNil(o.Identity) {
		var ret []SearchIdentity
		return ret
	}
	return o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunSearch200Response) GetIdentityOk() ([]SearchIdentity, bool) {
	if o == nil || isNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *RunSearch200Response) HasIdentity() bool {
	if o != nil && !isNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given []SearchIdentity and assigns it to the Identity field.
func (o *RunSearch200Response) SetIdentity(v []SearchIdentity) {
	o.Identity = v
}

// GetEntitlement returns the Entitlement field value if set, zero value otherwise.
func (o *RunSearch200Response) GetEntitlement() []SearchEntitlement {
	if o == nil || isNil(o.Entitlement) {
		var ret []SearchEntitlement
		return ret
	}
	return o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunSearch200Response) GetEntitlementOk() ([]SearchEntitlement, bool) {
	if o == nil || isNil(o.Entitlement) {
		return nil, false
	}
	return o.Entitlement, true
}

// HasEntitlement returns a boolean if a field has been set.
func (o *RunSearch200Response) HasEntitlement() bool {
	if o != nil && !isNil(o.Entitlement) {
		return true
	}

	return false
}

// SetEntitlement gets a reference to the given []SearchEntitlement and assigns it to the Entitlement field.
func (o *RunSearch200Response) SetEntitlement(v []SearchEntitlement) {
	o.Entitlement = v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *RunSearch200Response) GetEvent() []SearchEvent {
	if o == nil || isNil(o.Event) {
		var ret []SearchEvent
		return ret
	}
	return o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunSearch200Response) GetEventOk() ([]SearchEvent, bool) {
	if o == nil || isNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *RunSearch200Response) HasEvent() bool {
	if o != nil && !isNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given []SearchEvent and assigns it to the Event field.
func (o *RunSearch200Response) SetEvent(v []SearchEvent) {
	o.Event = v
}

func (o RunSearch200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !isNil(o.Entitlement) {
		toSerialize["entitlement"] = o.Entitlement
	}
	if !isNil(o.Event) {
		toSerialize["event"] = o.Event
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *RunSearch200Response) UnmarshalJSON(bytes []byte) (err error) {
	varRunSearch200Response := _RunSearch200Response{}

	if err = json.Unmarshal(bytes, &varRunSearch200Response); err == nil {
		*o = RunSearch200Response(varRunSearch200Response)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "identity")
		delete(additionalProperties, "entitlement")
		delete(additionalProperties, "event")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRunSearch200Response struct {
	value *RunSearch200Response
	isSet bool
}

func (v NullableRunSearch200Response) Get() *RunSearch200Response {
	return v.value
}

func (v *NullableRunSearch200Response) Set(val *RunSearch200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRunSearch200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRunSearch200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunSearch200Response(val *RunSearch200Response) *NullableRunSearch200Response {
	return &NullableRunSearch200Response{value: val, isSet: true}
}

func (v NullableRunSearch200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunSearch200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


