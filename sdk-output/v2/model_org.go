/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
	"time"
)

// Org struct for Org
type Org struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	ScriptName *string `json:"scriptName,omitempty"`
	SsoDomain *string `json:"ssoDomain,omitempty"`
	Status *string `json:"status,omitempty"`
	MaxRegisteredIdentities *int32 `json:"maxRegisteredIdentities,omitempty"`
	IdentityCount *int32 `json:"identityCount,omitempty"`
	KbaReqForAuthn *int32 `json:"kbaReqForAuthn,omitempty"`
	KbaReqAnswers *int32 `json:"kbaReqAnswers,omitempty"`
	LockoutAttemptThreshold *int32 `json:"lockoutAttemptThreshold,omitempty"`
	LockoutTimeMinutes *int32 `json:"lockoutTimeMinutes,omitempty"`
	UsageCertRequired *bool `json:"usageCertRequired,omitempty"`
	AdminStrongAuthRequired *bool `json:"adminStrongAuthRequired,omitempty"`
	EnableExternalPasswordChange *bool `json:"enableExternalPasswordChange,omitempty"`
	EnablePasswordReplay *bool `json:"enablePasswordReplay,omitempty"`
	EnableAutomaticPasswordReplay *bool `json:"enableAutomaticPasswordReplay,omitempty"`
	Netmasks []string `json:"netmasks,omitempty"`
	CountryCodes []string `json:"countryCodes,omitempty"`
	WhiteList *bool `json:"whiteList,omitempty"`
	EmailTestMode *bool `json:"emailTestMode,omitempty"`
	EmailTestAddress *string `json:"emailTestAddress,omitempty"`
	UsernameEmptyText *string `json:"usernameEmptyText,omitempty"`
	UsernameLabel *string `json:"usernameLabel,omitempty"`
	EnableAutomationGeneration *bool `json:"enableAutomationGeneration,omitempty"`
	PasswordReplayState *string `json:"passwordReplayState,omitempty"`
	SystemNotificationConfig *OrgSystemNotificationConfig `json:"systemNotificationConfig,omitempty"`
	SystemNotificationEmails []string `json:"systemNotificationEmails,omitempty"`
	LoginUrl *string `json:"loginUrl,omitempty"`
	RedirectPatterns []string `json:"redirectPatterns,omitempty"`
	StyleHash *string `json:"styleHash,omitempty"`
	ApprovalConfig *ApprovalConfigEto `json:"approvalConfig,omitempty"`
	SsoPartnerSource *string `json:"ssoPartnerSource,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Org Org

// NewOrg instantiates a new Org object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrg() *Org {
	this := Org{}
	return &this
}

// NewOrgWithDefaults instantiates a new Org object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgWithDefaults() *Org {
	this := Org{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Org) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Org) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Org) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Org) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Org) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Org) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Org) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Org) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Org) SetDescription(v string) {
	o.Description = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Org) GetDateCreated() time.Time {
	if o == nil || isNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Org) HasDateCreated() bool {
	if o != nil && !isNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Org) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Org) GetLastUpdated() time.Time {
	if o == nil || isNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Org) HasLastUpdated() bool {
	if o != nil && !isNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Org) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetScriptName returns the ScriptName field value if set, zero value otherwise.
func (o *Org) GetScriptName() string {
	if o == nil || isNil(o.ScriptName) {
		var ret string
		return ret
	}
	return *o.ScriptName
}

// GetScriptNameOk returns a tuple with the ScriptName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetScriptNameOk() (*string, bool) {
	if o == nil || isNil(o.ScriptName) {
		return nil, false
	}
	return o.ScriptName, true
}

// HasScriptName returns a boolean if a field has been set.
func (o *Org) HasScriptName() bool {
	if o != nil && !isNil(o.ScriptName) {
		return true
	}

	return false
}

// SetScriptName gets a reference to the given string and assigns it to the ScriptName field.
func (o *Org) SetScriptName(v string) {
	o.ScriptName = &v
}

// GetSsoDomain returns the SsoDomain field value if set, zero value otherwise.
func (o *Org) GetSsoDomain() string {
	if o == nil || isNil(o.SsoDomain) {
		var ret string
		return ret
	}
	return *o.SsoDomain
}

// GetSsoDomainOk returns a tuple with the SsoDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetSsoDomainOk() (*string, bool) {
	if o == nil || isNil(o.SsoDomain) {
		return nil, false
	}
	return o.SsoDomain, true
}

// HasSsoDomain returns a boolean if a field has been set.
func (o *Org) HasSsoDomain() bool {
	if o != nil && !isNil(o.SsoDomain) {
		return true
	}

	return false
}

// SetSsoDomain gets a reference to the given string and assigns it to the SsoDomain field.
func (o *Org) SetSsoDomain(v string) {
	o.SsoDomain = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Org) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Org) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Org) SetStatus(v string) {
	o.Status = &v
}

// GetMaxRegisteredIdentities returns the MaxRegisteredIdentities field value if set, zero value otherwise.
func (o *Org) GetMaxRegisteredIdentities() int32 {
	if o == nil || isNil(o.MaxRegisteredIdentities) {
		var ret int32
		return ret
	}
	return *o.MaxRegisteredIdentities
}

// GetMaxRegisteredIdentitiesOk returns a tuple with the MaxRegisteredIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetMaxRegisteredIdentitiesOk() (*int32, bool) {
	if o == nil || isNil(o.MaxRegisteredIdentities) {
		return nil, false
	}
	return o.MaxRegisteredIdentities, true
}

// HasMaxRegisteredIdentities returns a boolean if a field has been set.
func (o *Org) HasMaxRegisteredIdentities() bool {
	if o != nil && !isNil(o.MaxRegisteredIdentities) {
		return true
	}

	return false
}

// SetMaxRegisteredIdentities gets a reference to the given int32 and assigns it to the MaxRegisteredIdentities field.
func (o *Org) SetMaxRegisteredIdentities(v int32) {
	o.MaxRegisteredIdentities = &v
}

// GetIdentityCount returns the IdentityCount field value if set, zero value otherwise.
func (o *Org) GetIdentityCount() int32 {
	if o == nil || isNil(o.IdentityCount) {
		var ret int32
		return ret
	}
	return *o.IdentityCount
}

// GetIdentityCountOk returns a tuple with the IdentityCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetIdentityCountOk() (*int32, bool) {
	if o == nil || isNil(o.IdentityCount) {
		return nil, false
	}
	return o.IdentityCount, true
}

// HasIdentityCount returns a boolean if a field has been set.
func (o *Org) HasIdentityCount() bool {
	if o != nil && !isNil(o.IdentityCount) {
		return true
	}

	return false
}

// SetIdentityCount gets a reference to the given int32 and assigns it to the IdentityCount field.
func (o *Org) SetIdentityCount(v int32) {
	o.IdentityCount = &v
}

// GetKbaReqForAuthn returns the KbaReqForAuthn field value if set, zero value otherwise.
func (o *Org) GetKbaReqForAuthn() int32 {
	if o == nil || isNil(o.KbaReqForAuthn) {
		var ret int32
		return ret
	}
	return *o.KbaReqForAuthn
}

// GetKbaReqForAuthnOk returns a tuple with the KbaReqForAuthn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetKbaReqForAuthnOk() (*int32, bool) {
	if o == nil || isNil(o.KbaReqForAuthn) {
		return nil, false
	}
	return o.KbaReqForAuthn, true
}

// HasKbaReqForAuthn returns a boolean if a field has been set.
func (o *Org) HasKbaReqForAuthn() bool {
	if o != nil && !isNil(o.KbaReqForAuthn) {
		return true
	}

	return false
}

// SetKbaReqForAuthn gets a reference to the given int32 and assigns it to the KbaReqForAuthn field.
func (o *Org) SetKbaReqForAuthn(v int32) {
	o.KbaReqForAuthn = &v
}

// GetKbaReqAnswers returns the KbaReqAnswers field value if set, zero value otherwise.
func (o *Org) GetKbaReqAnswers() int32 {
	if o == nil || isNil(o.KbaReqAnswers) {
		var ret int32
		return ret
	}
	return *o.KbaReqAnswers
}

// GetKbaReqAnswersOk returns a tuple with the KbaReqAnswers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetKbaReqAnswersOk() (*int32, bool) {
	if o == nil || isNil(o.KbaReqAnswers) {
		return nil, false
	}
	return o.KbaReqAnswers, true
}

// HasKbaReqAnswers returns a boolean if a field has been set.
func (o *Org) HasKbaReqAnswers() bool {
	if o != nil && !isNil(o.KbaReqAnswers) {
		return true
	}

	return false
}

// SetKbaReqAnswers gets a reference to the given int32 and assigns it to the KbaReqAnswers field.
func (o *Org) SetKbaReqAnswers(v int32) {
	o.KbaReqAnswers = &v
}

// GetLockoutAttemptThreshold returns the LockoutAttemptThreshold field value if set, zero value otherwise.
func (o *Org) GetLockoutAttemptThreshold() int32 {
	if o == nil || isNil(o.LockoutAttemptThreshold) {
		var ret int32
		return ret
	}
	return *o.LockoutAttemptThreshold
}

// GetLockoutAttemptThresholdOk returns a tuple with the LockoutAttemptThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetLockoutAttemptThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.LockoutAttemptThreshold) {
		return nil, false
	}
	return o.LockoutAttemptThreshold, true
}

// HasLockoutAttemptThreshold returns a boolean if a field has been set.
func (o *Org) HasLockoutAttemptThreshold() bool {
	if o != nil && !isNil(o.LockoutAttemptThreshold) {
		return true
	}

	return false
}

// SetLockoutAttemptThreshold gets a reference to the given int32 and assigns it to the LockoutAttemptThreshold field.
func (o *Org) SetLockoutAttemptThreshold(v int32) {
	o.LockoutAttemptThreshold = &v
}

// GetLockoutTimeMinutes returns the LockoutTimeMinutes field value if set, zero value otherwise.
func (o *Org) GetLockoutTimeMinutes() int32 {
	if o == nil || isNil(o.LockoutTimeMinutes) {
		var ret int32
		return ret
	}
	return *o.LockoutTimeMinutes
}

// GetLockoutTimeMinutesOk returns a tuple with the LockoutTimeMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetLockoutTimeMinutesOk() (*int32, bool) {
	if o == nil || isNil(o.LockoutTimeMinutes) {
		return nil, false
	}
	return o.LockoutTimeMinutes, true
}

// HasLockoutTimeMinutes returns a boolean if a field has been set.
func (o *Org) HasLockoutTimeMinutes() bool {
	if o != nil && !isNil(o.LockoutTimeMinutes) {
		return true
	}

	return false
}

// SetLockoutTimeMinutes gets a reference to the given int32 and assigns it to the LockoutTimeMinutes field.
func (o *Org) SetLockoutTimeMinutes(v int32) {
	o.LockoutTimeMinutes = &v
}

// GetUsageCertRequired returns the UsageCertRequired field value if set, zero value otherwise.
func (o *Org) GetUsageCertRequired() bool {
	if o == nil || isNil(o.UsageCertRequired) {
		var ret bool
		return ret
	}
	return *o.UsageCertRequired
}

// GetUsageCertRequiredOk returns a tuple with the UsageCertRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageCertRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.UsageCertRequired) {
		return nil, false
	}
	return o.UsageCertRequired, true
}

// HasUsageCertRequired returns a boolean if a field has been set.
func (o *Org) HasUsageCertRequired() bool {
	if o != nil && !isNil(o.UsageCertRequired) {
		return true
	}

	return false
}

// SetUsageCertRequired gets a reference to the given bool and assigns it to the UsageCertRequired field.
func (o *Org) SetUsageCertRequired(v bool) {
	o.UsageCertRequired = &v
}

// GetAdminStrongAuthRequired returns the AdminStrongAuthRequired field value if set, zero value otherwise.
func (o *Org) GetAdminStrongAuthRequired() bool {
	if o == nil || isNil(o.AdminStrongAuthRequired) {
		var ret bool
		return ret
	}
	return *o.AdminStrongAuthRequired
}

// GetAdminStrongAuthRequiredOk returns a tuple with the AdminStrongAuthRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetAdminStrongAuthRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.AdminStrongAuthRequired) {
		return nil, false
	}
	return o.AdminStrongAuthRequired, true
}

// HasAdminStrongAuthRequired returns a boolean if a field has been set.
func (o *Org) HasAdminStrongAuthRequired() bool {
	if o != nil && !isNil(o.AdminStrongAuthRequired) {
		return true
	}

	return false
}

// SetAdminStrongAuthRequired gets a reference to the given bool and assigns it to the AdminStrongAuthRequired field.
func (o *Org) SetAdminStrongAuthRequired(v bool) {
	o.AdminStrongAuthRequired = &v
}

// GetEnableExternalPasswordChange returns the EnableExternalPasswordChange field value if set, zero value otherwise.
func (o *Org) GetEnableExternalPasswordChange() bool {
	if o == nil || isNil(o.EnableExternalPasswordChange) {
		var ret bool
		return ret
	}
	return *o.EnableExternalPasswordChange
}

// GetEnableExternalPasswordChangeOk returns a tuple with the EnableExternalPasswordChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetEnableExternalPasswordChangeOk() (*bool, bool) {
	if o == nil || isNil(o.EnableExternalPasswordChange) {
		return nil, false
	}
	return o.EnableExternalPasswordChange, true
}

// HasEnableExternalPasswordChange returns a boolean if a field has been set.
func (o *Org) HasEnableExternalPasswordChange() bool {
	if o != nil && !isNil(o.EnableExternalPasswordChange) {
		return true
	}

	return false
}

// SetEnableExternalPasswordChange gets a reference to the given bool and assigns it to the EnableExternalPasswordChange field.
func (o *Org) SetEnableExternalPasswordChange(v bool) {
	o.EnableExternalPasswordChange = &v
}

// GetEnablePasswordReplay returns the EnablePasswordReplay field value if set, zero value otherwise.
func (o *Org) GetEnablePasswordReplay() bool {
	if o == nil || isNil(o.EnablePasswordReplay) {
		var ret bool
		return ret
	}
	return *o.EnablePasswordReplay
}

// GetEnablePasswordReplayOk returns a tuple with the EnablePasswordReplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetEnablePasswordReplayOk() (*bool, bool) {
	if o == nil || isNil(o.EnablePasswordReplay) {
		return nil, false
	}
	return o.EnablePasswordReplay, true
}

// HasEnablePasswordReplay returns a boolean if a field has been set.
func (o *Org) HasEnablePasswordReplay() bool {
	if o != nil && !isNil(o.EnablePasswordReplay) {
		return true
	}

	return false
}

// SetEnablePasswordReplay gets a reference to the given bool and assigns it to the EnablePasswordReplay field.
func (o *Org) SetEnablePasswordReplay(v bool) {
	o.EnablePasswordReplay = &v
}

// GetEnableAutomaticPasswordReplay returns the EnableAutomaticPasswordReplay field value if set, zero value otherwise.
func (o *Org) GetEnableAutomaticPasswordReplay() bool {
	if o == nil || isNil(o.EnableAutomaticPasswordReplay) {
		var ret bool
		return ret
	}
	return *o.EnableAutomaticPasswordReplay
}

// GetEnableAutomaticPasswordReplayOk returns a tuple with the EnableAutomaticPasswordReplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetEnableAutomaticPasswordReplayOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAutomaticPasswordReplay) {
		return nil, false
	}
	return o.EnableAutomaticPasswordReplay, true
}

// HasEnableAutomaticPasswordReplay returns a boolean if a field has been set.
func (o *Org) HasEnableAutomaticPasswordReplay() bool {
	if o != nil && !isNil(o.EnableAutomaticPasswordReplay) {
		return true
	}

	return false
}

// SetEnableAutomaticPasswordReplay gets a reference to the given bool and assigns it to the EnableAutomaticPasswordReplay field.
func (o *Org) SetEnableAutomaticPasswordReplay(v bool) {
	o.EnableAutomaticPasswordReplay = &v
}

// GetNetmasks returns the Netmasks field value if set, zero value otherwise.
func (o *Org) GetNetmasks() []string {
	if o == nil || isNil(o.Netmasks) {
		var ret []string
		return ret
	}
	return o.Netmasks
}

// GetNetmasksOk returns a tuple with the Netmasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetNetmasksOk() ([]string, bool) {
	if o == nil || isNil(o.Netmasks) {
		return nil, false
	}
	return o.Netmasks, true
}

// HasNetmasks returns a boolean if a field has been set.
func (o *Org) HasNetmasks() bool {
	if o != nil && !isNil(o.Netmasks) {
		return true
	}

	return false
}

// SetNetmasks gets a reference to the given []string and assigns it to the Netmasks field.
func (o *Org) SetNetmasks(v []string) {
	o.Netmasks = v
}

// GetCountryCodes returns the CountryCodes field value if set, zero value otherwise.
func (o *Org) GetCountryCodes() []string {
	if o == nil || isNil(o.CountryCodes) {
		var ret []string
		return ret
	}
	return o.CountryCodes
}

// GetCountryCodesOk returns a tuple with the CountryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetCountryCodesOk() ([]string, bool) {
	if o == nil || isNil(o.CountryCodes) {
		return nil, false
	}
	return o.CountryCodes, true
}

// HasCountryCodes returns a boolean if a field has been set.
func (o *Org) HasCountryCodes() bool {
	if o != nil && !isNil(o.CountryCodes) {
		return true
	}

	return false
}

// SetCountryCodes gets a reference to the given []string and assigns it to the CountryCodes field.
func (o *Org) SetCountryCodes(v []string) {
	o.CountryCodes = v
}

// GetWhiteList returns the WhiteList field value if set, zero value otherwise.
func (o *Org) GetWhiteList() bool {
	if o == nil || isNil(o.WhiteList) {
		var ret bool
		return ret
	}
	return *o.WhiteList
}

// GetWhiteListOk returns a tuple with the WhiteList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetWhiteListOk() (*bool, bool) {
	if o == nil || isNil(o.WhiteList) {
		return nil, false
	}
	return o.WhiteList, true
}

// HasWhiteList returns a boolean if a field has been set.
func (o *Org) HasWhiteList() bool {
	if o != nil && !isNil(o.WhiteList) {
		return true
	}

	return false
}

// SetWhiteList gets a reference to the given bool and assigns it to the WhiteList field.
func (o *Org) SetWhiteList(v bool) {
	o.WhiteList = &v
}

// GetEmailTestMode returns the EmailTestMode field value if set, zero value otherwise.
func (o *Org) GetEmailTestMode() bool {
	if o == nil || isNil(o.EmailTestMode) {
		var ret bool
		return ret
	}
	return *o.EmailTestMode
}

// GetEmailTestModeOk returns a tuple with the EmailTestMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetEmailTestModeOk() (*bool, bool) {
	if o == nil || isNil(o.EmailTestMode) {
		return nil, false
	}
	return o.EmailTestMode, true
}

// HasEmailTestMode returns a boolean if a field has been set.
func (o *Org) HasEmailTestMode() bool {
	if o != nil && !isNil(o.EmailTestMode) {
		return true
	}

	return false
}

// SetEmailTestMode gets a reference to the given bool and assigns it to the EmailTestMode field.
func (o *Org) SetEmailTestMode(v bool) {
	o.EmailTestMode = &v
}

// GetEmailTestAddress returns the EmailTestAddress field value if set, zero value otherwise.
func (o *Org) GetEmailTestAddress() string {
	if o == nil || isNil(o.EmailTestAddress) {
		var ret string
		return ret
	}
	return *o.EmailTestAddress
}

// GetEmailTestAddressOk returns a tuple with the EmailTestAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetEmailTestAddressOk() (*string, bool) {
	if o == nil || isNil(o.EmailTestAddress) {
		return nil, false
	}
	return o.EmailTestAddress, true
}

// HasEmailTestAddress returns a boolean if a field has been set.
func (o *Org) HasEmailTestAddress() bool {
	if o != nil && !isNil(o.EmailTestAddress) {
		return true
	}

	return false
}

// SetEmailTestAddress gets a reference to the given string and assigns it to the EmailTestAddress field.
func (o *Org) SetEmailTestAddress(v string) {
	o.EmailTestAddress = &v
}

// GetUsernameEmptyText returns the UsernameEmptyText field value if set, zero value otherwise.
func (o *Org) GetUsernameEmptyText() string {
	if o == nil || isNil(o.UsernameEmptyText) {
		var ret string
		return ret
	}
	return *o.UsernameEmptyText
}

// GetUsernameEmptyTextOk returns a tuple with the UsernameEmptyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsernameEmptyTextOk() (*string, bool) {
	if o == nil || isNil(o.UsernameEmptyText) {
		return nil, false
	}
	return o.UsernameEmptyText, true
}

// HasUsernameEmptyText returns a boolean if a field has been set.
func (o *Org) HasUsernameEmptyText() bool {
	if o != nil && !isNil(o.UsernameEmptyText) {
		return true
	}

	return false
}

// SetUsernameEmptyText gets a reference to the given string and assigns it to the UsernameEmptyText field.
func (o *Org) SetUsernameEmptyText(v string) {
	o.UsernameEmptyText = &v
}

// GetUsernameLabel returns the UsernameLabel field value if set, zero value otherwise.
func (o *Org) GetUsernameLabel() string {
	if o == nil || isNil(o.UsernameLabel) {
		var ret string
		return ret
	}
	return *o.UsernameLabel
}

// GetUsernameLabelOk returns a tuple with the UsernameLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsernameLabelOk() (*string, bool) {
	if o == nil || isNil(o.UsernameLabel) {
		return nil, false
	}
	return o.UsernameLabel, true
}

// HasUsernameLabel returns a boolean if a field has been set.
func (o *Org) HasUsernameLabel() bool {
	if o != nil && !isNil(o.UsernameLabel) {
		return true
	}

	return false
}

// SetUsernameLabel gets a reference to the given string and assigns it to the UsernameLabel field.
func (o *Org) SetUsernameLabel(v string) {
	o.UsernameLabel = &v
}

// GetEnableAutomationGeneration returns the EnableAutomationGeneration field value if set, zero value otherwise.
func (o *Org) GetEnableAutomationGeneration() bool {
	if o == nil || isNil(o.EnableAutomationGeneration) {
		var ret bool
		return ret
	}
	return *o.EnableAutomationGeneration
}

// GetEnableAutomationGenerationOk returns a tuple with the EnableAutomationGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetEnableAutomationGenerationOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAutomationGeneration) {
		return nil, false
	}
	return o.EnableAutomationGeneration, true
}

// HasEnableAutomationGeneration returns a boolean if a field has been set.
func (o *Org) HasEnableAutomationGeneration() bool {
	if o != nil && !isNil(o.EnableAutomationGeneration) {
		return true
	}

	return false
}

// SetEnableAutomationGeneration gets a reference to the given bool and assigns it to the EnableAutomationGeneration field.
func (o *Org) SetEnableAutomationGeneration(v bool) {
	o.EnableAutomationGeneration = &v
}

// GetPasswordReplayState returns the PasswordReplayState field value if set, zero value otherwise.
func (o *Org) GetPasswordReplayState() string {
	if o == nil || isNil(o.PasswordReplayState) {
		var ret string
		return ret
	}
	return *o.PasswordReplayState
}

// GetPasswordReplayStateOk returns a tuple with the PasswordReplayState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetPasswordReplayStateOk() (*string, bool) {
	if o == nil || isNil(o.PasswordReplayState) {
		return nil, false
	}
	return o.PasswordReplayState, true
}

// HasPasswordReplayState returns a boolean if a field has been set.
func (o *Org) HasPasswordReplayState() bool {
	if o != nil && !isNil(o.PasswordReplayState) {
		return true
	}

	return false
}

// SetPasswordReplayState gets a reference to the given string and assigns it to the PasswordReplayState field.
func (o *Org) SetPasswordReplayState(v string) {
	o.PasswordReplayState = &v
}

// GetSystemNotificationConfig returns the SystemNotificationConfig field value if set, zero value otherwise.
func (o *Org) GetSystemNotificationConfig() OrgSystemNotificationConfig {
	if o == nil || isNil(o.SystemNotificationConfig) {
		var ret OrgSystemNotificationConfig
		return ret
	}
	return *o.SystemNotificationConfig
}

// GetSystemNotificationConfigOk returns a tuple with the SystemNotificationConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetSystemNotificationConfigOk() (*OrgSystemNotificationConfig, bool) {
	if o == nil || isNil(o.SystemNotificationConfig) {
		return nil, false
	}
	return o.SystemNotificationConfig, true
}

// HasSystemNotificationConfig returns a boolean if a field has been set.
func (o *Org) HasSystemNotificationConfig() bool {
	if o != nil && !isNil(o.SystemNotificationConfig) {
		return true
	}

	return false
}

// SetSystemNotificationConfig gets a reference to the given OrgSystemNotificationConfig and assigns it to the SystemNotificationConfig field.
func (o *Org) SetSystemNotificationConfig(v OrgSystemNotificationConfig) {
	o.SystemNotificationConfig = &v
}

// GetSystemNotificationEmails returns the SystemNotificationEmails field value if set, zero value otherwise.
func (o *Org) GetSystemNotificationEmails() []string {
	if o == nil || isNil(o.SystemNotificationEmails) {
		var ret []string
		return ret
	}
	return o.SystemNotificationEmails
}

// GetSystemNotificationEmailsOk returns a tuple with the SystemNotificationEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetSystemNotificationEmailsOk() ([]string, bool) {
	if o == nil || isNil(o.SystemNotificationEmails) {
		return nil, false
	}
	return o.SystemNotificationEmails, true
}

// HasSystemNotificationEmails returns a boolean if a field has been set.
func (o *Org) HasSystemNotificationEmails() bool {
	if o != nil && !isNil(o.SystemNotificationEmails) {
		return true
	}

	return false
}

// SetSystemNotificationEmails gets a reference to the given []string and assigns it to the SystemNotificationEmails field.
func (o *Org) SetSystemNotificationEmails(v []string) {
	o.SystemNotificationEmails = v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *Org) GetLoginUrl() string {
	if o == nil || isNil(o.LoginUrl) {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetLoginUrlOk() (*string, bool) {
	if o == nil || isNil(o.LoginUrl) {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *Org) HasLoginUrl() bool {
	if o != nil && !isNil(o.LoginUrl) {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *Org) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetRedirectPatterns returns the RedirectPatterns field value if set, zero value otherwise.
func (o *Org) GetRedirectPatterns() []string {
	if o == nil || isNil(o.RedirectPatterns) {
		var ret []string
		return ret
	}
	return o.RedirectPatterns
}

// GetRedirectPatternsOk returns a tuple with the RedirectPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetRedirectPatternsOk() ([]string, bool) {
	if o == nil || isNil(o.RedirectPatterns) {
		return nil, false
	}
	return o.RedirectPatterns, true
}

// HasRedirectPatterns returns a boolean if a field has been set.
func (o *Org) HasRedirectPatterns() bool {
	if o != nil && !isNil(o.RedirectPatterns) {
		return true
	}

	return false
}

// SetRedirectPatterns gets a reference to the given []string and assigns it to the RedirectPatterns field.
func (o *Org) SetRedirectPatterns(v []string) {
	o.RedirectPatterns = v
}

// GetStyleHash returns the StyleHash field value if set, zero value otherwise.
func (o *Org) GetStyleHash() string {
	if o == nil || isNil(o.StyleHash) {
		var ret string
		return ret
	}
	return *o.StyleHash
}

// GetStyleHashOk returns a tuple with the StyleHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetStyleHashOk() (*string, bool) {
	if o == nil || isNil(o.StyleHash) {
		return nil, false
	}
	return o.StyleHash, true
}

// HasStyleHash returns a boolean if a field has been set.
func (o *Org) HasStyleHash() bool {
	if o != nil && !isNil(o.StyleHash) {
		return true
	}

	return false
}

// SetStyleHash gets a reference to the given string and assigns it to the StyleHash field.
func (o *Org) SetStyleHash(v string) {
	o.StyleHash = &v
}

// GetApprovalConfig returns the ApprovalConfig field value if set, zero value otherwise.
func (o *Org) GetApprovalConfig() ApprovalConfigEto {
	if o == nil || isNil(o.ApprovalConfig) {
		var ret ApprovalConfigEto
		return ret
	}
	return *o.ApprovalConfig
}

// GetApprovalConfigOk returns a tuple with the ApprovalConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetApprovalConfigOk() (*ApprovalConfigEto, bool) {
	if o == nil || isNil(o.ApprovalConfig) {
		return nil, false
	}
	return o.ApprovalConfig, true
}

// HasApprovalConfig returns a boolean if a field has been set.
func (o *Org) HasApprovalConfig() bool {
	if o != nil && !isNil(o.ApprovalConfig) {
		return true
	}

	return false
}

// SetApprovalConfig gets a reference to the given ApprovalConfigEto and assigns it to the ApprovalConfig field.
func (o *Org) SetApprovalConfig(v ApprovalConfigEto) {
	o.ApprovalConfig = &v
}

// GetSsoPartnerSource returns the SsoPartnerSource field value if set, zero value otherwise.
func (o *Org) GetSsoPartnerSource() string {
	if o == nil || isNil(o.SsoPartnerSource) {
		var ret string
		return ret
	}
	return *o.SsoPartnerSource
}

// GetSsoPartnerSourceOk returns a tuple with the SsoPartnerSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetSsoPartnerSourceOk() (*string, bool) {
	if o == nil || isNil(o.SsoPartnerSource) {
		return nil, false
	}
	return o.SsoPartnerSource, true
}

// HasSsoPartnerSource returns a boolean if a field has been set.
func (o *Org) HasSsoPartnerSource() bool {
	if o != nil && !isNil(o.SsoPartnerSource) {
		return true
	}

	return false
}

// SetSsoPartnerSource gets a reference to the given string and assigns it to the SsoPartnerSource field.
func (o *Org) SetSsoPartnerSource(v string) {
	o.SsoPartnerSource = &v
}

func (o Org) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !isNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !isNil(o.ScriptName) {
		toSerialize["scriptName"] = o.ScriptName
	}
	if !isNil(o.SsoDomain) {
		toSerialize["ssoDomain"] = o.SsoDomain
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.MaxRegisteredIdentities) {
		toSerialize["maxRegisteredIdentities"] = o.MaxRegisteredIdentities
	}
	if !isNil(o.IdentityCount) {
		toSerialize["identityCount"] = o.IdentityCount
	}
	if !isNil(o.KbaReqForAuthn) {
		toSerialize["kbaReqForAuthn"] = o.KbaReqForAuthn
	}
	if !isNil(o.KbaReqAnswers) {
		toSerialize["kbaReqAnswers"] = o.KbaReqAnswers
	}
	if !isNil(o.LockoutAttemptThreshold) {
		toSerialize["lockoutAttemptThreshold"] = o.LockoutAttemptThreshold
	}
	if !isNil(o.LockoutTimeMinutes) {
		toSerialize["lockoutTimeMinutes"] = o.LockoutTimeMinutes
	}
	if !isNil(o.UsageCertRequired) {
		toSerialize["usageCertRequired"] = o.UsageCertRequired
	}
	if !isNil(o.AdminStrongAuthRequired) {
		toSerialize["adminStrongAuthRequired"] = o.AdminStrongAuthRequired
	}
	if !isNil(o.EnableExternalPasswordChange) {
		toSerialize["enableExternalPasswordChange"] = o.EnableExternalPasswordChange
	}
	if !isNil(o.EnablePasswordReplay) {
		toSerialize["enablePasswordReplay"] = o.EnablePasswordReplay
	}
	if !isNil(o.EnableAutomaticPasswordReplay) {
		toSerialize["enableAutomaticPasswordReplay"] = o.EnableAutomaticPasswordReplay
	}
	if !isNil(o.Netmasks) {
		toSerialize["netmasks"] = o.Netmasks
	}
	if !isNil(o.CountryCodes) {
		toSerialize["countryCodes"] = o.CountryCodes
	}
	if !isNil(o.WhiteList) {
		toSerialize["whiteList"] = o.WhiteList
	}
	if !isNil(o.EmailTestMode) {
		toSerialize["emailTestMode"] = o.EmailTestMode
	}
	if !isNil(o.EmailTestAddress) {
		toSerialize["emailTestAddress"] = o.EmailTestAddress
	}
	if !isNil(o.UsernameEmptyText) {
		toSerialize["usernameEmptyText"] = o.UsernameEmptyText
	}
	if !isNil(o.UsernameLabel) {
		toSerialize["usernameLabel"] = o.UsernameLabel
	}
	if !isNil(o.EnableAutomationGeneration) {
		toSerialize["enableAutomationGeneration"] = o.EnableAutomationGeneration
	}
	if !isNil(o.PasswordReplayState) {
		toSerialize["passwordReplayState"] = o.PasswordReplayState
	}
	if !isNil(o.SystemNotificationConfig) {
		toSerialize["systemNotificationConfig"] = o.SystemNotificationConfig
	}
	if !isNil(o.SystemNotificationEmails) {
		toSerialize["systemNotificationEmails"] = o.SystemNotificationEmails
	}
	if !isNil(o.LoginUrl) {
		toSerialize["loginUrl"] = o.LoginUrl
	}
	if !isNil(o.RedirectPatterns) {
		toSerialize["redirectPatterns"] = o.RedirectPatterns
	}
	if !isNil(o.StyleHash) {
		toSerialize["styleHash"] = o.StyleHash
	}
	if !isNil(o.ApprovalConfig) {
		toSerialize["approvalConfig"] = o.ApprovalConfig
	}
	if !isNil(o.SsoPartnerSource) {
		toSerialize["ssoPartnerSource"] = o.SsoPartnerSource
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *Org) UnmarshalJSON(bytes []byte) (err error) {
	varOrg := _Org{}

	if err = json.Unmarshal(bytes, &varOrg); err == nil {
		*o = Org(varOrg)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "dateCreated")
		delete(additionalProperties, "lastUpdated")
		delete(additionalProperties, "scriptName")
		delete(additionalProperties, "ssoDomain")
		delete(additionalProperties, "status")
		delete(additionalProperties, "maxRegisteredIdentities")
		delete(additionalProperties, "identityCount")
		delete(additionalProperties, "kbaReqForAuthn")
		delete(additionalProperties, "kbaReqAnswers")
		delete(additionalProperties, "lockoutAttemptThreshold")
		delete(additionalProperties, "lockoutTimeMinutes")
		delete(additionalProperties, "usageCertRequired")
		delete(additionalProperties, "adminStrongAuthRequired")
		delete(additionalProperties, "enableExternalPasswordChange")
		delete(additionalProperties, "enablePasswordReplay")
		delete(additionalProperties, "enableAutomaticPasswordReplay")
		delete(additionalProperties, "netmasks")
		delete(additionalProperties, "countryCodes")
		delete(additionalProperties, "whiteList")
		delete(additionalProperties, "emailTestMode")
		delete(additionalProperties, "emailTestAddress")
		delete(additionalProperties, "usernameEmptyText")
		delete(additionalProperties, "usernameLabel")
		delete(additionalProperties, "enableAutomationGeneration")
		delete(additionalProperties, "passwordReplayState")
		delete(additionalProperties, "systemNotificationConfig")
		delete(additionalProperties, "systemNotificationEmails")
		delete(additionalProperties, "loginUrl")
		delete(additionalProperties, "redirectPatterns")
		delete(additionalProperties, "styleHash")
		delete(additionalProperties, "approvalConfig")
		delete(additionalProperties, "ssoPartnerSource")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrg struct {
	value *Org
	isSet bool
}

func (v NullableOrg) Get() *Org {
	return v.value
}

func (v *NullableOrg) Set(val *Org) {
	v.value = val
	v.isSet = true
}

func (v NullableOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrg(val *Org) *NullableOrg {
	return &NullableOrg{value: val, isSet: true}
}

func (v NullableOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


