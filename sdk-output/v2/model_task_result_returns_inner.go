/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// TaskResultReturnsInner struct for TaskResultReturnsInner
type TaskResultReturnsInner struct {
	AttributeName *string `json:"attributeName,omitempty"`
	DisplayLabel *string `json:"displayLabel,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TaskResultReturnsInner TaskResultReturnsInner

// NewTaskResultReturnsInner instantiates a new TaskResultReturnsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskResultReturnsInner() *TaskResultReturnsInner {
	this := TaskResultReturnsInner{}
	return &this
}

// NewTaskResultReturnsInnerWithDefaults instantiates a new TaskResultReturnsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskResultReturnsInnerWithDefaults() *TaskResultReturnsInner {
	this := TaskResultReturnsInner{}
	return &this
}

// GetAttributeName returns the AttributeName field value if set, zero value otherwise.
func (o *TaskResultReturnsInner) GetAttributeName() string {
	if o == nil || isNil(o.AttributeName) {
		var ret string
		return ret
	}
	return *o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResultReturnsInner) GetAttributeNameOk() (*string, bool) {
	if o == nil || isNil(o.AttributeName) {
		return nil, false
	}
	return o.AttributeName, true
}

// HasAttributeName returns a boolean if a field has been set.
func (o *TaskResultReturnsInner) HasAttributeName() bool {
	if o != nil && !isNil(o.AttributeName) {
		return true
	}

	return false
}

// SetAttributeName gets a reference to the given string and assigns it to the AttributeName field.
func (o *TaskResultReturnsInner) SetAttributeName(v string) {
	o.AttributeName = &v
}

// GetDisplayLabel returns the DisplayLabel field value if set, zero value otherwise.
func (o *TaskResultReturnsInner) GetDisplayLabel() string {
	if o == nil || isNil(o.DisplayLabel) {
		var ret string
		return ret
	}
	return *o.DisplayLabel
}

// GetDisplayLabelOk returns a tuple with the DisplayLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResultReturnsInner) GetDisplayLabelOk() (*string, bool) {
	if o == nil || isNil(o.DisplayLabel) {
		return nil, false
	}
	return o.DisplayLabel, true
}

// HasDisplayLabel returns a boolean if a field has been set.
func (o *TaskResultReturnsInner) HasDisplayLabel() bool {
	if o != nil && !isNil(o.DisplayLabel) {
		return true
	}

	return false
}

// SetDisplayLabel gets a reference to the given string and assigns it to the DisplayLabel field.
func (o *TaskResultReturnsInner) SetDisplayLabel(v string) {
	o.DisplayLabel = &v
}

func (o TaskResultReturnsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AttributeName) {
		toSerialize["attributeName"] = o.AttributeName
	}
	if !isNil(o.DisplayLabel) {
		toSerialize["displayLabel"] = o.DisplayLabel
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TaskResultReturnsInner) UnmarshalJSON(bytes []byte) (err error) {
	varTaskResultReturnsInner := _TaskResultReturnsInner{}

	if err = json.Unmarshal(bytes, &varTaskResultReturnsInner); err == nil {
		*o = TaskResultReturnsInner(varTaskResultReturnsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attributeName")
		delete(additionalProperties, "displayLabel")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTaskResultReturnsInner struct {
	value *TaskResultReturnsInner
	isSet bool
}

func (v NullableTaskResultReturnsInner) Get() *TaskResultReturnsInner {
	return v.value
}

func (v *NullableTaskResultReturnsInner) Set(val *TaskResultReturnsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskResultReturnsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskResultReturnsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskResultReturnsInner(val *TaskResultReturnsInner) *NullableTaskResultReturnsInner {
	return &NullableTaskResultReturnsInner{value: val, isSet: true}
}

func (v NullableTaskResultReturnsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskResultReturnsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


