/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
	"time"
)

// SearchIdentityProcessingDetails struct for SearchIdentityProcessingDetails
type SearchIdentityProcessingDetails struct {
	Date *time.Time `json:"date,omitempty"`
	Stage *string `json:"stage,omitempty"`
	RetryCount *int32 `json:"retryCount,omitempty"`
	StackTrace *string `json:"stackTrace,omitempty"`
	Message *string `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SearchIdentityProcessingDetails SearchIdentityProcessingDetails

// NewSearchIdentityProcessingDetails instantiates a new SearchIdentityProcessingDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchIdentityProcessingDetails() *SearchIdentityProcessingDetails {
	this := SearchIdentityProcessingDetails{}
	return &this
}

// NewSearchIdentityProcessingDetailsWithDefaults instantiates a new SearchIdentityProcessingDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchIdentityProcessingDetailsWithDefaults() *SearchIdentityProcessingDetails {
	this := SearchIdentityProcessingDetails{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *SearchIdentityProcessingDetails) GetDate() time.Time {
	if o == nil || isNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIdentityProcessingDetails) GetDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *SearchIdentityProcessingDetails) HasDate() bool {
	if o != nil && !isNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *SearchIdentityProcessingDetails) SetDate(v time.Time) {
	o.Date = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *SearchIdentityProcessingDetails) GetStage() string {
	if o == nil || isNil(o.Stage) {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIdentityProcessingDetails) GetStageOk() (*string, bool) {
	if o == nil || isNil(o.Stage) {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *SearchIdentityProcessingDetails) HasStage() bool {
	if o != nil && !isNil(o.Stage) {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *SearchIdentityProcessingDetails) SetStage(v string) {
	o.Stage = &v
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise.
func (o *SearchIdentityProcessingDetails) GetRetryCount() int32 {
	if o == nil || isNil(o.RetryCount) {
		var ret int32
		return ret
	}
	return *o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIdentityProcessingDetails) GetRetryCountOk() (*int32, bool) {
	if o == nil || isNil(o.RetryCount) {
		return nil, false
	}
	return o.RetryCount, true
}

// HasRetryCount returns a boolean if a field has been set.
func (o *SearchIdentityProcessingDetails) HasRetryCount() bool {
	if o != nil && !isNil(o.RetryCount) {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given int32 and assigns it to the RetryCount field.
func (o *SearchIdentityProcessingDetails) SetRetryCount(v int32) {
	o.RetryCount = &v
}

// GetStackTrace returns the StackTrace field value if set, zero value otherwise.
func (o *SearchIdentityProcessingDetails) GetStackTrace() string {
	if o == nil || isNil(o.StackTrace) {
		var ret string
		return ret
	}
	return *o.StackTrace
}

// GetStackTraceOk returns a tuple with the StackTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIdentityProcessingDetails) GetStackTraceOk() (*string, bool) {
	if o == nil || isNil(o.StackTrace) {
		return nil, false
	}
	return o.StackTrace, true
}

// HasStackTrace returns a boolean if a field has been set.
func (o *SearchIdentityProcessingDetails) HasStackTrace() bool {
	if o != nil && !isNil(o.StackTrace) {
		return true
	}

	return false
}

// SetStackTrace gets a reference to the given string and assigns it to the StackTrace field.
func (o *SearchIdentityProcessingDetails) SetStackTrace(v string) {
	o.StackTrace = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SearchIdentityProcessingDetails) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchIdentityProcessingDetails) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SearchIdentityProcessingDetails) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SearchIdentityProcessingDetails) SetMessage(v string) {
	o.Message = &v
}

func (o SearchIdentityProcessingDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !isNil(o.Stage) {
		toSerialize["stage"] = o.Stage
	}
	if !isNil(o.RetryCount) {
		toSerialize["retryCount"] = o.RetryCount
	}
	if !isNil(o.StackTrace) {
		toSerialize["stackTrace"] = o.StackTrace
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SearchIdentityProcessingDetails) UnmarshalJSON(bytes []byte) (err error) {
	varSearchIdentityProcessingDetails := _SearchIdentityProcessingDetails{}

	if err = json.Unmarshal(bytes, &varSearchIdentityProcessingDetails); err == nil {
		*o = SearchIdentityProcessingDetails(varSearchIdentityProcessingDetails)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "date")
		delete(additionalProperties, "stage")
		delete(additionalProperties, "retryCount")
		delete(additionalProperties, "stackTrace")
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchIdentityProcessingDetails struct {
	value *SearchIdentityProcessingDetails
	isSet bool
}

func (v NullableSearchIdentityProcessingDetails) Get() *SearchIdentityProcessingDetails {
	return v.value
}

func (v *NullableSearchIdentityProcessingDetails) Set(val *SearchIdentityProcessingDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchIdentityProcessingDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchIdentityProcessingDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchIdentityProcessingDetails(val *SearchIdentityProcessingDetails) *NullableSearchIdentityProcessingDetails {
	return &NullableSearchIdentityProcessingDetails{value: val, isSet: true}
}

func (v NullableSearchIdentityProcessingDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchIdentityProcessingDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


