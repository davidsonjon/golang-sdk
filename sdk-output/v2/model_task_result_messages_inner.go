/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// TaskResultMessagesInner struct for TaskResultMessagesInner
type TaskResultMessagesInner struct {
	LocalizedText *string `json:"localizedText,omitempty"`
	Type *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TaskResultMessagesInner TaskResultMessagesInner

// NewTaskResultMessagesInner instantiates a new TaskResultMessagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskResultMessagesInner() *TaskResultMessagesInner {
	this := TaskResultMessagesInner{}
	return &this
}

// NewTaskResultMessagesInnerWithDefaults instantiates a new TaskResultMessagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskResultMessagesInnerWithDefaults() *TaskResultMessagesInner {
	this := TaskResultMessagesInner{}
	return &this
}

// GetLocalizedText returns the LocalizedText field value if set, zero value otherwise.
func (o *TaskResultMessagesInner) GetLocalizedText() string {
	if o == nil || isNil(o.LocalizedText) {
		var ret string
		return ret
	}
	return *o.LocalizedText
}

// GetLocalizedTextOk returns a tuple with the LocalizedText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResultMessagesInner) GetLocalizedTextOk() (*string, bool) {
	if o == nil || isNil(o.LocalizedText) {
		return nil, false
	}
	return o.LocalizedText, true
}

// HasLocalizedText returns a boolean if a field has been set.
func (o *TaskResultMessagesInner) HasLocalizedText() bool {
	if o != nil && !isNil(o.LocalizedText) {
		return true
	}

	return false
}

// SetLocalizedText gets a reference to the given string and assigns it to the LocalizedText field.
func (o *TaskResultMessagesInner) SetLocalizedText(v string) {
	o.LocalizedText = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TaskResultMessagesInner) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskResultMessagesInner) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TaskResultMessagesInner) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TaskResultMessagesInner) SetType(v string) {
	o.Type = &v
}

func (o TaskResultMessagesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LocalizedText) {
		toSerialize["localizedText"] = o.LocalizedText
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TaskResultMessagesInner) UnmarshalJSON(bytes []byte) (err error) {
	varTaskResultMessagesInner := _TaskResultMessagesInner{}

	if err = json.Unmarshal(bytes, &varTaskResultMessagesInner); err == nil {
		*o = TaskResultMessagesInner(varTaskResultMessagesInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "localizedText")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTaskResultMessagesInner struct {
	value *TaskResultMessagesInner
	isSet bool
}

func (v NullableTaskResultMessagesInner) Get() *TaskResultMessagesInner {
	return v.value
}

func (v *NullableTaskResultMessagesInner) Set(val *TaskResultMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskResultMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskResultMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskResultMessagesInner(val *TaskResultMessagesInner) *NullableTaskResultMessagesInner {
	return &NullableTaskResultMessagesInner{value: val, isSet: true}
}

func (v NullableTaskResultMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskResultMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


