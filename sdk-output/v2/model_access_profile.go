/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// AccessProfile struct for AccessProfile
type AccessProfile struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	SourceId *string `json:"sourceId,omitempty"`
	Entitlements []string `json:"entitlements,omitempty"`
	// Comma-separated list of approval schemes. Each approval scheme is one of - manager - appOwner - sourceOwner - accessProfileOwner - workgroup:\\<workgroupId>
	ApprovalSchemes *string `json:"approvalSchemes,omitempty"`
	// Comma-separated list of revoke request approval schemes. Each approval scheme is one of - manager - sourceOwner - accessProfileOwner - workgroup:\\<workgroupId>
	RevokeRequestApprovalSchemes *string `json:"revokeRequestApprovalSchemes,omitempty"`
	RequestCommentsRequired *bool `json:"requestCommentsRequired,omitempty"`
	DeniedCommentsRequired *bool `json:"deniedCommentsRequired,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessProfile AccessProfile

// NewAccessProfile instantiates a new AccessProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessProfile() *AccessProfile {
	this := AccessProfile{}
	return &this
}

// NewAccessProfileWithDefaults instantiates a new AccessProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessProfileWithDefaults() *AccessProfile {
	this := AccessProfile{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccessProfile) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccessProfile) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccessProfile) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccessProfile) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessProfile) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccessProfile) SetDescription(v string) {
	o.Description = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *AccessProfile) GetOwnerId() string {
	if o == nil || isNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetOwnerIdOk() (*string, bool) {
	if o == nil || isNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AccessProfile) HasOwnerId() bool {
	if o != nil && !isNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *AccessProfile) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *AccessProfile) GetSourceId() string {
	if o == nil || isNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetSourceIdOk() (*string, bool) {
	if o == nil || isNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *AccessProfile) HasSourceId() bool {
	if o != nil && !isNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *AccessProfile) SetSourceId(v string) {
	o.SourceId = &v
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *AccessProfile) GetEntitlements() []string {
	if o == nil || isNil(o.Entitlements) {
		var ret []string
		return ret
	}
	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetEntitlementsOk() ([]string, bool) {
	if o == nil || isNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *AccessProfile) HasEntitlements() bool {
	if o != nil && !isNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given []string and assigns it to the Entitlements field.
func (o *AccessProfile) SetEntitlements(v []string) {
	o.Entitlements = v
}

// GetApprovalSchemes returns the ApprovalSchemes field value if set, zero value otherwise.
func (o *AccessProfile) GetApprovalSchemes() string {
	if o == nil || isNil(o.ApprovalSchemes) {
		var ret string
		return ret
	}
	return *o.ApprovalSchemes
}

// GetApprovalSchemesOk returns a tuple with the ApprovalSchemes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetApprovalSchemesOk() (*string, bool) {
	if o == nil || isNil(o.ApprovalSchemes) {
		return nil, false
	}
	return o.ApprovalSchemes, true
}

// HasApprovalSchemes returns a boolean if a field has been set.
func (o *AccessProfile) HasApprovalSchemes() bool {
	if o != nil && !isNil(o.ApprovalSchemes) {
		return true
	}

	return false
}

// SetApprovalSchemes gets a reference to the given string and assigns it to the ApprovalSchemes field.
func (o *AccessProfile) SetApprovalSchemes(v string) {
	o.ApprovalSchemes = &v
}

// GetRevokeRequestApprovalSchemes returns the RevokeRequestApprovalSchemes field value if set, zero value otherwise.
func (o *AccessProfile) GetRevokeRequestApprovalSchemes() string {
	if o == nil || isNil(o.RevokeRequestApprovalSchemes) {
		var ret string
		return ret
	}
	return *o.RevokeRequestApprovalSchemes
}

// GetRevokeRequestApprovalSchemesOk returns a tuple with the RevokeRequestApprovalSchemes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetRevokeRequestApprovalSchemesOk() (*string, bool) {
	if o == nil || isNil(o.RevokeRequestApprovalSchemes) {
		return nil, false
	}
	return o.RevokeRequestApprovalSchemes, true
}

// HasRevokeRequestApprovalSchemes returns a boolean if a field has been set.
func (o *AccessProfile) HasRevokeRequestApprovalSchemes() bool {
	if o != nil && !isNil(o.RevokeRequestApprovalSchemes) {
		return true
	}

	return false
}

// SetRevokeRequestApprovalSchemes gets a reference to the given string and assigns it to the RevokeRequestApprovalSchemes field.
func (o *AccessProfile) SetRevokeRequestApprovalSchemes(v string) {
	o.RevokeRequestApprovalSchemes = &v
}

// GetRequestCommentsRequired returns the RequestCommentsRequired field value if set, zero value otherwise.
func (o *AccessProfile) GetRequestCommentsRequired() bool {
	if o == nil || isNil(o.RequestCommentsRequired) {
		var ret bool
		return ret
	}
	return *o.RequestCommentsRequired
}

// GetRequestCommentsRequiredOk returns a tuple with the RequestCommentsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetRequestCommentsRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.RequestCommentsRequired) {
		return nil, false
	}
	return o.RequestCommentsRequired, true
}

// HasRequestCommentsRequired returns a boolean if a field has been set.
func (o *AccessProfile) HasRequestCommentsRequired() bool {
	if o != nil && !isNil(o.RequestCommentsRequired) {
		return true
	}

	return false
}

// SetRequestCommentsRequired gets a reference to the given bool and assigns it to the RequestCommentsRequired field.
func (o *AccessProfile) SetRequestCommentsRequired(v bool) {
	o.RequestCommentsRequired = &v
}

// GetDeniedCommentsRequired returns the DeniedCommentsRequired field value if set, zero value otherwise.
func (o *AccessProfile) GetDeniedCommentsRequired() bool {
	if o == nil || isNil(o.DeniedCommentsRequired) {
		var ret bool
		return ret
	}
	return *o.DeniedCommentsRequired
}

// GetDeniedCommentsRequiredOk returns a tuple with the DeniedCommentsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetDeniedCommentsRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.DeniedCommentsRequired) {
		return nil, false
	}
	return o.DeniedCommentsRequired, true
}

// HasDeniedCommentsRequired returns a boolean if a field has been set.
func (o *AccessProfile) HasDeniedCommentsRequired() bool {
	if o != nil && !isNil(o.DeniedCommentsRequired) {
		return true
	}

	return false
}

// SetDeniedCommentsRequired gets a reference to the given bool and assigns it to the DeniedCommentsRequired field.
func (o *AccessProfile) SetDeniedCommentsRequired(v bool) {
	o.DeniedCommentsRequired = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *AccessProfile) GetDisabled() bool {
	if o == nil || isNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfile) GetDisabledOk() (*bool, bool) {
	if o == nil || isNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *AccessProfile) HasDisabled() bool {
	if o != nil && !isNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *AccessProfile) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o AccessProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !isNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !isNil(o.Entitlements) {
		toSerialize["entitlements"] = o.Entitlements
	}
	if !isNil(o.ApprovalSchemes) {
		toSerialize["approvalSchemes"] = o.ApprovalSchemes
	}
	if !isNil(o.RevokeRequestApprovalSchemes) {
		toSerialize["revokeRequestApprovalSchemes"] = o.RevokeRequestApprovalSchemes
	}
	if !isNil(o.RequestCommentsRequired) {
		toSerialize["requestCommentsRequired"] = o.RequestCommentsRequired
	}
	if !isNil(o.DeniedCommentsRequired) {
		toSerialize["deniedCommentsRequired"] = o.DeniedCommentsRequired
	}
	if !isNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AccessProfile) UnmarshalJSON(bytes []byte) (err error) {
	varAccessProfile := _AccessProfile{}

	if err = json.Unmarshal(bytes, &varAccessProfile); err == nil {
		*o = AccessProfile(varAccessProfile)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "ownerId")
		delete(additionalProperties, "sourceId")
		delete(additionalProperties, "entitlements")
		delete(additionalProperties, "approvalSchemes")
		delete(additionalProperties, "revokeRequestApprovalSchemes")
		delete(additionalProperties, "requestCommentsRequired")
		delete(additionalProperties, "deniedCommentsRequired")
		delete(additionalProperties, "disabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessProfile struct {
	value *AccessProfile
	isSet bool
}

func (v NullableAccessProfile) Get() *AccessProfile {
	return v.value
}

func (v *NullableAccessProfile) Set(val *AccessProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessProfile(val *AccessProfile) *NullableAccessProfile {
	return &NullableAccessProfile{value: val, isSet: true}
}

func (v NullableAccessProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


