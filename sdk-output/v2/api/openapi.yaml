openapi: 3.0.1
info:
  title: SailPoint SaaS API
  version: 2.0.0
servers:
- description: This is the V2 API server.
  url: "https://{tenant}.api.identitynow.com/v2"
  variables:
    tenant:
      default: sailpoint
      description: "This is the name of your tenant, typically your company's name."
tags:
- name: access-profiles
- name: access-requests
- name: accounts
- name: approvals
- name: identities
- name: launchers
- name: org
- name: provisioning-activities
- name: search
- name: task-results
paths:
  /access-profiles:
    get:
      description: Lists the access profiles.
      operationId: listAccessProfiles
      parameters:
      - description: "Search filters. Example: 'property EQ \"value\"'"
        in: query
        name: filters
        schema:
          type: string
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessProfile'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Lists the access profiles.
      tags:
      - access-profiles
    post:
      description: Creates a new access profile.
      operationId: createAccessProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfile'
        description: Attribute values for the new access profile.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/201'
          description: Created.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Creates a new access profile.
      tags:
      - access-profiles
  /access-profiles/{accessProfileId}:
    delete:
      description: "Deletes an access profile, found by ID."
      operationId: deleteAccessProfile
      parameters:
      - description: ID of an access profile.
        in: path
        name: accessProfileId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "404":
          description: Not found.
      summary: Deletes an access profile.
      tags:
      - access-profiles
    get:
      description: Retrieves an access profile by ID.
      operationId: getAccessProfile
      parameters:
      - description: ID of an access profile.
        in: path
        name: accessProfileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Retrieves an access profile.
      tags:
      - access-profiles
    patch:
      description: "Updates one or more attributes of access profile, found by ID."
      operationId: patchAccessProfile
      parameters:
      - description: ID of an access profile.
        in: path
        name: accessProfileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfile'
        description: Access profile attributes to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Updates one or more access profile attributes.
      tags:
      - access-profiles
    put:
      description: "Updates an existing access profile, found by ID."
      operationId: putAccessProfile
      parameters:
      - description: ID of an access profile.
        in: path
        name: accessProfileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfileCreateEto'
        description: Access profile attributes to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Updates an existing access profile.
      tags:
      - access-profiles
  /access-profiles/{accessProfileId}/entitlements:
    get:
      description: Lists all entitlements of an access profile.
      operationId: listAccessProfileEntitlements
      parameters:
      - description: ID of an access profile.
        in: path
        name: accessProfileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlement'
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Lists all entitlements of an access profile.
      tags:
      - access-profiles
  /access-requests:
    get:
      description: Lists both the pending and past access requests for an identity.
      operationId: listAccessRequests
      parameters:
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequest'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Lists the access request for an identity.
      tags:
      - access-requests
  /accounts:
    get:
      description: "Retrieves list of Accounts for a given source.  \nA token with\
        \ ORG_ADMIN or API_CLIENT authority is required to call this API"
      operationId: getAccounts
      parameters:
      - description: ID of a source for the Account list
        in: query
        name: sourceId
        required: true
        schema:
          type: integer
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Retrieves list of Accounts for a given source.
      tags:
      - accounts
    post:
      description: "Creates a new account on a flat-file source.  \nA token with ORG_ADMIN\
        \ or API_CLIENT authority is required to call this API"
      operationId: createAccount
      parameters:
      - description: ID of a flat-file source into which the new account will be created.
        in: query
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              businessCategory: Engineering
              carLicense: carLicense
              cn: example
              departmentNumber: Engineering
              description: description
              destinationIndicator: destinationIndicator
              displayName: example
              distinguishedName: DN=example
              employeeNumber: "1781263"
              employeeType: Full Time
              facsimileTelephoneNumber: 512-666-6666
              givenName: exampleName
              homePhone: 512-666-6666
              homePostalAddress: 11305 Four Points Blvd
              initials: KVN1
              internationaliSDNNumber: internationaliSDNNumber
              mail: example@sailpoint.com
              manager: DN=example manager
              mobile: "9018888888"
              o: o
              ou: ou
              pager: pager
              physicalDeliveryOfficeName: physicalDeliveryOfficeName
              postOfficeBox: postOfficeBox
              postalAddress: postalAddress
              postalCode: "78729"
              preferredDeliveryMethod: preferredDeliveryMethod
              preferredLanguage: preferredLanguage
              registeredAddress: registeredAddress
              roomNumber: roomNumber
              secretary: secretary
              seeAlso: seeAlso
              sn: LastName
              st: st
              street: street
              telephoneNumber: "9018888888"
              teletexTerminalIdentifier: teletexTerminalIdentifier
              telexNumber: telexNumber
              title: title
              uid: uid
              objectClass: objectClass
              memberOf: Engineering
              objectSid: objectSid
              sAMAccountName: example
              primaryGroupID: primaryGroupID
              primaryGroupDN: primaryGroupDN
              accountFlags: accountFlags
              department: department
              msNPCallingStationID: msNPCallingStationID
              msRADIUSFramedRoute: msRADIUSFramedRoute
              msNPAllowDialin: msNPAllowDialin
              msRADIUSCallbackNumber: msRADIUSCallbackNumber
              msRADIUSFramedIPAddress: msRADIUSFramedIPAddress
              mailNickname: mailNickname
              homeMDB: homeMDB
              msExchHideFromAddressLists: msExchHideFromAddressLists
            schema:
              $ref: '#/components/schemas/DynamicSchemaEto'
        description: Attribute values for the new account. The schema and required
          attributes are dictated by the source.
        required: true
      responses:
        "202":
          description: Accepted.
          headers:
            Link:
              description: Link to the background task.
              schema:
                type: string
      summary: Creates a new account on a flat-file source.
      tags:
      - accounts
  /accounts/{id}:
    delete:
      description: "Deletes an existing account from a flat-file source.   \nA token\
        \ with ORG_ADMIN or API_CLIENT authority is required to call this API"
      operationId: deleteAccount
      parameters:
      - description: ID of an Account
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Accepted.
          headers:
            Link:
              description: Link to the background task.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Deletes an existing account from a flat-file source.
      tags:
      - accounts
    get:
      description: "Retrieves the Account by Id.   \nA token with ORG_ADMIN or API_CLIENT\
        \ authority is required to call this API"
      operationId: getAccount
      parameters:
      - description: ID of an Account
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Retrieves the Account by Id.
      tags:
      - accounts
    patch:
      description: "Updates an existing account from a flat-file source.  \nA token\
        \ with ORG_ADMIN or API_CLIENT authority is required to call this API"
      operationId: patchAccount
      parameters:
      - description: ID of an Account
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              businessCategory: Engineering
              carLicense: carLicense
              cn: example
              departmentNumber: Engineering
              description: description
              destinationIndicator: destinationIndicator
              displayName: example
              distinguishedName: DN=example
              employeeNumber: "1781263"
              employeeType: Full Time
              facsimileTelephoneNumber: 512-666-6666
              givenName: exampleName
              homePhone: 512-666-6666
              homePostalAddress: 11305 Four Points Blvd
              initials: KVN1
              internationaliSDNNumber: internationaliSDNNumber
              mail: example@sailpoint.com
              manager: DN=example manager
              mobile: "9018888888"
              o: o
              ou: ou
              pager: pager
              physicalDeliveryOfficeName: physicalDeliveryOfficeName
              postOfficeBox: postOfficeBox
              postalAddress: postalAddress
              postalCode: "78729"
              preferredDeliveryMethod: preferredDeliveryMethod
              preferredLanguage: preferredLanguage
              registeredAddress: registeredAddress
              roomNumber: roomNumber
              secretary: secretary
              seeAlso: seeAlso
              sn: LastName
              st: st
              street: street
              telephoneNumber: "9018888888"
              teletexTerminalIdentifier: teletexTerminalIdentifier
              telexNumber: telexNumber
              title: title
              uid: uid
              objectClass: objectClass
              memberOf: Engineering
              objectSid: objectSid
              sAMAccountName: example
              primaryGroupID: primaryGroupID
              primaryGroupDN: primaryGroupDN
              accountFlags: accountFlags
              department: department
              msNPCallingStationID: msNPCallingStationID
              msRADIUSFramedRoute: msRADIUSFramedRoute
              msNPAllowDialin: msNPAllowDialin
              msRADIUSCallbackNumber: msRADIUSCallbackNumber
              msRADIUSFramedIPAddress: msRADIUSFramedIPAddress
              mailNickname: mailNickname
              homeMDB: homeMDB
              msExchHideFromAddressLists: msExchHideFromAddressLists
            schema:
              $ref: '#/components/schemas/DynamicSchemaEto'
        description: Attribute values for the account. The schema and required attributes
          are dictated by the source.
        required: true
      responses:
        "202":
          description: Accepted.
          headers:
            Link:
              description: Link to the background task.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Updates an existing account from a flat-file source.
      tags:
      - accounts
    put:
      description: "Updates an existing account from a flat-file source. The body\
        \ represents all the values to be defined on the account. Attributes that\
        \ are not present in the body will be removed from the account.  \nA token\
        \ with ORG_ADMIN or API_CLIENT authority is required to call this API"
      operationId: putAccount
      parameters:
      - description: ID of an Account
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              businessCategory: Engineering
              carLicense: carLicense
              cn: example
              departmentNumber: Engineering
              description: description
              destinationIndicator: destinationIndicator
              displayName: example
              distinguishedName: DN=example
              employeeNumber: "1781263"
              employeeType: Full Time
              facsimileTelephoneNumber: 512-666-6666
              givenName: exampleName
              homePhone: 512-666-6666
              homePostalAddress: 11305 Four Points Blvd
              initials: KVN1
              internationaliSDNNumber: internationaliSDNNumber
              mail: example@sailpoint.com
              manager: DN=example manager
              mobile: "9018888888"
              o: o
              ou: ou
              pager: pager
              physicalDeliveryOfficeName: physicalDeliveryOfficeName
              postOfficeBox: postOfficeBox
              postalAddress: postalAddress
              postalCode: "78729"
              preferredDeliveryMethod: preferredDeliveryMethod
              preferredLanguage: preferredLanguage
              registeredAddress: registeredAddress
              roomNumber: roomNumber
              secretary: secretary
              seeAlso: seeAlso
              sn: LastName
              st: st
              street: street
              telephoneNumber: "9018888888"
              teletexTerminalIdentifier: teletexTerminalIdentifier
              telexNumber: telexNumber
              title: title
              uid: uid
              objectClass: objectClass
              memberOf: Engineering
              objectSid: objectSid
              sAMAccountName: example
              primaryGroupID: primaryGroupID
              primaryGroupDN: primaryGroupDN
              accountFlags: accountFlags
              department: department
              msNPCallingStationID: msNPCallingStationID
              msRADIUSFramedRoute: msRADIUSFramedRoute
              msNPAllowDialin: msNPAllowDialin
              msRADIUSCallbackNumber: msRADIUSCallbackNumber
              msRADIUSFramedIPAddress: msRADIUSFramedIPAddress
              mailNickname: mailNickname
              homeMDB: homeMDB
              msExchHideFromAddressLists: msExchHideFromAddressLists
            schema:
              $ref: '#/components/schemas/DynamicSchemaEto'
        description: Attribute values for the account. The schema and required attributes
          are dictated by the source.
        required: true
      responses:
        "202":
          description: Accepted.
          headers:
            Link:
              description: Link to the background task.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Updates an existing account from a flat-file source by replacing all
        values.
      tags:
      - accounts
  /approvals:
    get:
      description: Lists the access request approvals.
      operationId: listAccessRequestApproval
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Approval'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Lists the approvals.
      tags:
      - approvals
  /approvals/{approvalId}/approve-request:
    post:
      description: Approves an access request.
      operationId: approveAccessRequest
      parameters:
      - description: ID of an access request approval.
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEto'
        description: Reviewer's comment.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Approves an access request.
      tags:
      - approvals
  /approvals/{approvalId}/forward:
    post:
      description: Forwards an access request approval to a new owner.
      operationId: forwardAccessRequestApproval
      parameters:
      - description: ID of an access request approval.
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardApprovalEto'
        description: Information about the forwarded approval.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Forwards an access request approval.
      tags:
      - approvals
  /approvals/{approvalId}/reject-request:
    post:
      description: Rejects an access request.
      operationId: rejectAccessRequest
      parameters:
      - description: ID of an access request approval.
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEto'
        description: Reason about the approval rejection.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Rejects an access request.
      tags:
      - approvals
  /identities:
    get:
      description: Retrieves the identities.
      operationId: listIdentities
      parameters:
      - description: "Search filters. Supported operator is 'EQ'. Supported attribute\
          \ for filtering is ‘permissions’. Example: 'permissions EQ \"admin\"'."
        in: query
        name: filters
        schema:
          type: string
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityV2'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Retrieves the identities.
      tags:
      - identities
    post:
      description: Creates a new identity.
      operationId: createIdentity
      parameters:
      - description: ID of a flat-file source into which the new account will be created.
        in: query
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              businessCategory: Engineering
              carLicense: carLicense
              cn: example
              departmentNumber: Engineering
              description: description
              destinationIndicator: destinationIndicator
              displayName: example
              distinguishedName: DN=example
              employeeNumber: "1781263"
              employeeType: Full Time
              facsimileTelephoneNumber: 512-666-6666
              givenName: exampleName
              homePhone: 512-666-6666
              homePostalAddress: 11305 Four Points Blvd
              initials: KVN1
              internationaliSDNNumber: internationaliSDNNumber
              mail: example@sailpoint.com
              manager: DN=example manager
              mobile: "9018888888"
              o: o
              ou: ou
              pager: pager
              physicalDeliveryOfficeName: physicalDeliveryOfficeName
              postOfficeBox: postOfficeBox
              postalAddress: postalAddress
              postalCode: "78729"
              preferredDeliveryMethod: preferredDeliveryMethod
              preferredLanguage: preferredLanguage
              registeredAddress: registeredAddress
              roomNumber: roomNumber
              secretary: secretary
              seeAlso: seeAlso
              sn: LastName
              st: st
              street: street
              telephoneNumber: "9018888888"
              teletexTerminalIdentifier: teletexTerminalIdentifier
              telexNumber: telexNumber
              title: title
              uid: uid
              objectClass: objectClass
              memberOf: Engineering
              objectSid: objectSid
              sAMAccountName: example
              primaryGroupID: primaryGroupID
              primaryGroupDN: primaryGroupDN
              accountFlags: accountFlags
              department: department
              msNPCallingStationID: msNPCallingStationID
              msRADIUSFramedRoute: msRADIUSFramedRoute
              msNPAllowDialin: msNPAllowDialin
              msRADIUSCallbackNumber: msRADIUSCallbackNumber
              msRADIUSFramedIPAddress: msRADIUSFramedIPAddress
              mailNickname: mailNickname
              homeMDB: homeMDB
              msExchHideFromAddressLists: msExchHideFromAddressLists
            schema:
              $ref: '#/components/schemas/DynamicSchemaEto'
        description: Attribute values for the new identity. The schema and required
          attributes are dictated by the source.
        required: true
      responses:
        "202":
          description: Accepted.
          headers:
            Link:
              description: Link to the background task.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
        "403":
          description: Forbidden.
      summary: Creates a new identity.
      tags:
      - identities
  /identities/{identityIdOrAlias}:
    delete:
      description: Deletes an existing identity.
      operationId: deleteIdentity
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "404":
          description: Not found.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Service unavailable.
          headers:
            X-Retry-After:
              description: Recommended number of seconds to wait before you retry
                the request.
              schema:
                type: integer
      summary: Deletes an identity.
      tags:
      - identities
    get:
      description: Retrieves the identity by ID or alias.
      operationId: getIdentity
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityV2'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Retrieves the identity by ID or alias.
      tags:
      - identities
    patch:
      description: "Updates one or more attributes of an identity, found by ID or\
        \ alias."
      operationId: updateIdentity
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityEto'
        description: Identity attributes to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityV2'
          description: OK. Identity has been updated.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "202":
          description: Accepted.
          headers:
            Link:
              description: Link to the background task.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
        "404":
          description: Not found.
      summary: Updates one or more identity attributes.
      tags:
      - identities
  /identities/{identityIdOrAlias}/approvals:
    get:
      description: Lists access request approvals owned by the given identity.
      operationId: listApprovals
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Approval'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Lists the approvals.
      tags:
      - identities
  /identities/{identityIdOrAlias}/apps:
    get:
      description: Lists all apps available to the given identity. The list will include
        apps which have launchers created for the identity.
      operationId: listApps
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      - description: "Search filters. Supported operator is 'EQ'. Supported attribute\
          \ for filtering is ‘description’. Example: 'description EQ \"Some description.\"\
          '."
        in: query
        name: filters
        schema:
          type: string
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Lists available apps.
      tags:
      - identities
  /identities/{identityIdOrAlias}/launchers:
    get:
      description: Lists the launchers for the given identity.
      operationId: listLaunchers
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      - description: Context of launcher links to include. Specifying a mobile context
          will provide links to mobile resources for the launcher if available.
        in: query
        name: context
        schema:
          enum:
          - mobile
          type: string
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Launcher'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Lists the launchers.
      tags:
      - identities
    post:
      description: "Creates a new launcher for the given identity. This endpoint is\
        \ found in links within the 'accessMethods' attribute for GET identities/{id}/apps\
        \ response body."
      operationId: createLauncher
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      - description: ID of the app to create a launcher for.
        in: query
        name: appId
        required: true
        schema:
          type: string
      - description: ID of an access profile.
        in: path
        name: accessProfileId
        required: true
        schema:
          type: string
      - description: Context of launcher links to include. Specifying a mobile context
          will provide links to mobile resources for the launcher if available.
        in: query
        name: context
        schema:
          enum:
          - mobile
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Launcher'
          description: Created.
        "404":
          description: Not found.
      summary: Creates a new launcher.
      tags:
      - identities
  /identities/{identityIdOrAlias}/launchers/{launcherId}:
    delete:
      description: Deletes an existing launcher for the given identity.
      operationId: deleteLauncher
      parameters:
      - description: ID or alias of an identity.
        in: path
        name: identityIdOrAlias
        required: true
        schema:
          type: string
      - description: ID of a launcher.
        in: path
        name: launcherId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "404":
          description: Not found.
      summary: Deletes a launcher.
      tags:
      - identities
  /identities/bulk-lock:
    post:
      description: Locks one or more identities. Identities MUST reset their password
        in order to be unlocked.
      operationId: lockIdentities
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Array of one or more IDs.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusObject'
          description: List of locked identities.
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusObject'
          description: "List of Success, Map of Failed with messages"
        "500":
          description: Failed.
      summary: Locks one or more identities.
      tags:
      - identities
  /launchers/{launcherId}:
    get:
      description: Retrieves the details of the launcher.
      operationId: getLauncher
      parameters:
      - description: ID of a launcher.
        in: path
        name: launcherId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Launcher'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Retrieves the details of the launcher.
      tags:
      - launchers
    patch:
      description: Updates one or more attributes of a launcher.
      operationId: updateLauncher
      parameters:
      - description: ID of a launcher.
        in: path
        name: launcherId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LauncherEto'
        description: Launcher attributes to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Launcher'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Updates one or more attributes of a launcher.
      tags:
      - launchers
  /launchers/{launcherId}/click:
    post:
      description: Increments internal 'click' statistics for the launcher.
      operationId: logLauncherClick
      parameters:
      - description: ID of a launcher.
        in: path
        name: launcherId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "404":
          description: Not found.
      summary: Records a launcher click.
      tags:
      - launchers
  /org:
    get:
      description: Retrieves information and operational settings for your org (as
        determined by the URL domain).
      operationId: getOrgSettings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Retrieves your org settings.
      tags:
      - org
    patch:
      description: Updates one or more attributes for your org.
      operationId: updateOrgSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgEto'
        description: Org settings to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Updates one or more org attributes.
      tags:
      - org
  /provisioning-activities:
    get:
      description: Lists the provisioning activities.
      operationId: listProvisioningActivities
      parameters:
      - description: "Search filters. Supported operators are 'co', 'sw', 'eq', 'or',\
          \ 'and', 'gt', 'lt', 'ge', 'le', 'ne', 'not' and 'pr' which are SCIM-compliant.\
          \ Supported attributes for filtering are ‘operation’, ’name’, ‘sourceName’\
          \ and ‘status’. Example: 'property eq \"value\"'."
        in: query
        name: filters
        schema:
          type: string
      - description: "One or more attributes on which to sort each separated by a\
          \ ','. Prefix the attribute name with a minus sign (ex. -dateCreated) for\
          \ descending sort. Supported attributes for sorting are 'operation', 'name',\
          \ 'sourceName' ,'status', 'dateCreated' and 'lastUpdated'."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningActivity'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
      summary: Lists the provisioning activities.
      tags:
      - provisioning-activities
  /provisioning-activities/{provisioningActivityId}:
    get:
      description: Retrieves a provisioning activity by ID.
      operationId: getProvisioningActivity
      parameters:
      - description: ID of a provisioning activity.
        in: path
        name: provisioningActivityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningActivity'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Retrieves a provisioning activity.
      tags:
      - provisioning-activities
  /search:
    get:
      description: |-
        Searches and retrieves the types specified (currently identity, entitlement, and event) using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: runSearch
      parameters:
      - description: "List of types to query (currently identity, entitlement or event)."
        in: query
        name: types
        schema:
          items:
            type: string
          type: array
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runSearch_200_response'
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: "Searches and retrieves the types specified (currently identity, entitlement,\
        \ and event)."
      tags:
      - search
    post:
      description: |-
        Searches and retrieves the types specified (current identity, entitlement, and event) using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: runSearchPost
      parameters:
      - description: "List of types to query (currently identity, entitlement or event)."
        in: query
        name: types
        schema:
          items:
            type: string
          type: array
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runSearch_200_response'
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: "Searches and retrieves the types specified (current identity, entitlement,\
        \ and event)."
      tags:
      - search
  /search/runExport:
    get:
      description: |-
        Runs csv results export job for a given search query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: exportSearchCsv
      parameters:
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: List of query fields that the query should be restricted.
        in: query
        name: queryFields
        schema:
          items:
            type: string
          type: array
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Index to be used (currently identities, entitlements, and events)."
        in: query
        name: index
        required: true
        schema:
          type: string
      - description: "Type to query (currently either identity, entitlement or event)."
        in: query
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Runs csv results export job for a given search query.
      tags:
      - search
    post:
      description: |-
        Runs csv results export job for a given search query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: exportSearchCsvPost
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: List of field columns that should be included in the export.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Index to be used (currently identities, entitlements, and events)."
        in: query
        name: index
        required: true
        schema:
          type: string
      - description: "Type to query (currently either identity, entitlement or event)."
        in: query
        name: type
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              match:
                displayName: Thomas Edison
            schema:
              $ref: '#/components/schemas/exportSearchCsvPost_request'
        description: "Query object using the query portion of the [Elastic Search\
          \ Query DSL JSON object](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl.html)."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Runs csv results export job for a given search query.
      tags:
      - search
  /search/identities:
    get:
      description: |-
        Searches and retrieves the identities using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: searchIdentities
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchIdentity'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Searches and retrieves the identities.
      tags:
      - search
    post:
      description: |-
        Searches and retrieves the identities using the query portion of the [Elastic Search Query DSL JSON object](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl.html) in the body.

        [BETA] This endpoint is in beta phase.
      operationId: searchIdentitiesPost
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchIdentity'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Searches and retrieves the identities.
      tags:
      - search
  /search/identities/runExport:
    get:
      description: |-
        Runs csv results export job for a given search for identities using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: exportIdentitySearch
      parameters:
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: List of query fields that the query should be restricted.
        in: query
        name: queryFields
        schema:
          items:
            type: string
          type: array
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: List of field columns that should be included in the export.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Runs csv results export job for a given search for identities.
      tags:
      - search
    post:
      description: |-
        Runs csv results export job for a given search for identities using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: runIdentitySearch
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: List of field columns that should be included in the export.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            example:
              match:
                displayName: Thomas Edison
            schema:
              $ref: '#/components/schemas/exportSearchCsvPost_request'
        description: "Query object using the query portion of the [Elastic Search\
          \ Query DSL JSON object](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl.html)."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Runs csv results export job for a given search for identities.
      tags:
      - search
  /search/entitlements:
    get:
      description: |-
        Searches and retrieves the entitlements using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: entitlementSearch
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchEntitlement'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Searches and retrieves the entitlements.
      tags:
      - search
    post:
      description: |-
        Searches and retrieves the entitlements using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: entitlementSearchPost
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchEntitlement'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Searches and retrieves the entitlements.
      tags:
      - search
  /search/entitlements/runExport:
    get:
      description: |-
        Runs csv results export job for a given search for entitlements using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: entitlementSearchExport
      parameters:
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: List of query fields that the query should be restricted.
        in: query
        name: queryFields
        schema:
          items:
            type: string
          type: array
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: List of field columns that should be included in the export.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Runs csv results export job for a given search for entitlements.
      tags:
      - search
    post:
      description: |-
        Runs csv results export job for a given search for entitlements using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: entitlementSearchExportPost
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: List of field columns that should be included in the export.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      requestBody:
        content:
          application/json:
            example:
              match:
                displayName: Thomas Edison
            schema:
              $ref: '#/components/schemas/exportSearchCsvPost_request'
        description: "Query object using the query portion of the [Elastic Search\
          \ Query DSL JSON object](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl.html)."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Runs csv results export job for a given search for entitlements.
      tags:
      - search
  /search/events:
    get:
      description: |-
        Searches and retrieves the entitlements using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: runEventSearch
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchEvent'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Searches and retrieves the events.
      tags:
      - search
    post:
      description: |-
        Searches and retrieves the events using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax) from the Query DSL in the query string.

        [BETA] This endpoint is in beta phase.
      operationId: runEventSearchPost
      parameters:
      - description: "One or more attributes on which to sort, each separated by a\
          \ ','. Prefix with a minus sign (ex. -dateCreated) for descending sort."
        in: query
        name: sort
        schema:
          type: string
      - description: Paging offset.
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Paging limit.
        in: query
        name: limit
        schema:
          default: 250
          format: int32
          maximum: 2500
          minimum: 1
          type: integer
      - description: List of fields that the query should be restricted.
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
      - description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
          \ from the Query DSL."
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchEvent'
                type: array
          description: OK.
          headers:
            X-Total-Count:
              description: "Total number of items, regardless of paging limits."
              schema:
                format: int64
                type: integer
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Searches and retrieves the events.
      tags:
      - search
  /search/mappings:
    get:
      description: "Returns a JSON map of all the objects, fields, types and operators\
        \ that are searchable."
      operationId: getSearchMapping
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mapping'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Retrieves the mappings and operators for the search service.
      tags:
      - search
  /search/{index}/mappings:
    get:
      description: "Returns a JSON map of all the objects, fields, types and operators\
        \ that are searchable."
      operationId: getSearchIndexMapping
      parameters:
      - description: "Index to be used (currently identities, entitlements, and events)."
        in: query
        name: index
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mapping'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionObject'
          description: Bad request.
      summary: Retrieves the mappings and operators for the search service for the
        given index path.
      tags:
      - search
  /task-results/{taskResultIdOrName}:
    get:
      description: |-
        This API retrieves the result of the specified background task.
        A token with USER or API_CLIENT authority is required to call this API.
      operationId: getBackgroundTaskResults
      parameters:
      - description: ID or name of a task.
        in: path
        name: taskResultIdOrName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
          description: OK.
          headers:
            ETag:
              description: Entity tag.
              schema:
                type: string
            Last-Modified:
              description: Last modified date.
              schema:
                format: date-time
                type: string
            Link:
              description: Links to alternate or related resources.
              schema:
                type: string
        "404":
          description: Not found.
      summary: Retrieve Result of Background Task
      tags:
      - task-results
  /workgroups:
    get:
      description: This API returns the details for a single account based on the
        ID
      operationId: listWorkgroups
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Workgroup'
                type: array
          description: List of work group objects
      security:
      - oauth2: []
      summary: List Work Groups
      tags:
      - Governance Groups
    post:
      description: This API allows you to create a work group
      operationId: createWorkgroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createWorkgroup_request'
        description: Work group to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Workgroup'
                type: array
          description: List of work group objects
      security:
      - oauth2: []
      summary: Create Work Group
      tags:
      - Governance Groups
  /v2/workgroups/{workgroupId}:
    delete:
      description: This API deletes a single workgroup based on the ID
      operationId: deleteWorkgroup
      responses:
        "204":
          content:
            application/json: {}
          description: Empty response on successful deletion
      security:
      - oauth2: []
      summary: Delete Work Group By Id
      tags:
      - Governance Groups
    get:
      description: This API returns the details for a single workgroup based on the
        ID
      operationId: getWorkgroup
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workgroup'
          description: Workgroup object
      security:
      - oauth2: []
      summary: Get Work Group By Id
      tags:
      - Governance Groups
    patch:
      description: This API updates and returns the details for a single workgroup
        based on the ID
      operationId: updateWorkgroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createWorkgroup_request'
        description: Work group to modify.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workgroup'
          description: Workgroup object
      security:
      - oauth2: []
      summary: Update Work Group By Id
      tags:
      - Governance Groups
  /workgroups/{workgroupId}/members:
    get:
      description: This API returns the members of a work group
      operationId: listWorkgroupMembers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkgroupMember'
                type: array
          description: List of work group member objects
      security:
      - oauth2: []
      summary: List Work Group Members
      tags:
      - Governance Groups
    post:
      description: This API allows you to modify the members of a work group
      operationId: modifyWorkgroupMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyWorkgroupMembers_request'
        description: Add/Remove workgroup member ids.
        required: true
      responses:
        "204":
          content:
            application/json: {}
          description: Empty response on successful deletion
      security:
      - oauth2: []
      summary: Modify Work Group Members
      tags:
      - Governance Groups
  /workgroups/{workgroupId}/connections:
    get:
      description: This API returns the connections of a work group
      operationId: listWorkgroupConnections
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkgroupConnection'
                type: array
          description: List of work group connection objects
      security:
      - oauth2: []
      summary: List Work Group Connections
      tags:
      - Governance Groups
  /workgroups/bulk-delete:
    post:
      description: This API allows you to bulk-delete work groups
      operationId: bulkDeleteWorkGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bulkDeleteWorkGroups_request'
        description: Work group ids to delete
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bulkDeleteWorkGroups_200_response'
          description: List of work group objects
      security:
      - oauth2: []
      summary: Bulk delete work groups
      tags:
      - Governance Groups
components:
  parameters:
    filters:
      description: "Search filters. Example: 'property EQ \"value\"'"
      in: query
      name: filters
      schema:
        type: string
    sort:
      description: "One or more attributes on which to sort, each separated by a ','.\
        \ Prefix with a minus sign (ex. -dateCreated) for descending sort."
      in: query
      name: sort
      schema:
        type: string
    offset:
      description: Paging offset.
      in: query
      name: offset
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
    limit:
      description: Paging limit.
      in: query
      name: limit
      schema:
        default: 250
        format: int32
        maximum: 2500
        minimum: 1
        type: integer
    accessProfileId:
      description: ID of an access profile.
      in: path
      name: accessProfileId
      required: true
      schema:
        type: string
    sourceId-get-list:
      description: ID of a source for the Account list
      in: query
      name: sourceId
      required: true
      schema:
        type: integer
    sourceId:
      description: ID of a flat-file source into which the new account will be created.
      in: query
      name: sourceId
      required: true
      schema:
        type: string
    accountId:
      description: ID of an Account
      in: path
      name: id
      required: true
      schema:
        type: string
    approvalId:
      description: ID of an access request approval.
      in: path
      name: approvalId
      required: true
      schema:
        type: string
    identity-filter:
      description: "Search filters. Supported operator is 'EQ'. Supported attribute\
        \ for filtering is ‘permissions’. Example: 'permissions EQ \"admin\"'."
      in: query
      name: filters
      schema:
        type: string
    identityIdOrAlias:
      description: ID or alias of an identity.
      in: path
      name: identityIdOrAlias
      required: true
      schema:
        type: string
    identity-apps-filters:
      description: "Search filters. Supported operator is 'EQ'. Supported attribute\
        \ for filtering is ‘description’. Example: 'description EQ \"Some description.\"\
        '."
      in: query
      name: filters
      schema:
        type: string
    context:
      description: Context of launcher links to include. Specifying a mobile context
        will provide links to mobile resources for the launcher if available.
      in: query
      name: context
      schema:
        enum:
        - mobile
        type: string
    appId:
      description: ID of the app to create a launcher for.
      in: query
      name: appId
      required: true
      schema:
        type: string
    launcherId:
      description: ID of a launcher.
      in: path
      name: launcherId
      required: true
      schema:
        type: string
    provisioning-activities-filters:
      description: "Search filters. Supported operators are 'co', 'sw', 'eq', 'or',\
        \ 'and', 'gt', 'lt', 'ge', 'le', 'ne', 'not' and 'pr' which are SCIM-compliant.\
        \ Supported attributes for filtering are ‘operation’, ’name’, ‘sourceName’\
        \ and ‘status’. Example: 'property eq \"value\"'."
      in: query
      name: filters
      schema:
        type: string
    provisioning-activities-sort:
      description: "One or more attributes on which to sort each separated by a ','.\
        \ Prefix the attribute name with a minus sign (ex. -dateCreated) for descending\
        \ sort. Supported attributes for sorting are 'operation', 'name', 'sourceName'\
        \ ,'status', 'dateCreated' and 'lastUpdated'."
      in: query
      name: sort
      schema:
        type: string
    provisioningActivityId:
      description: ID of a provisioning activity.
      in: path
      name: provisioningActivityId
      required: true
      schema:
        type: string
    types:
      description: "List of types to query (currently identity, entitlement or event)."
      in: query
      name: types
      schema:
        items:
          type: string
        type: array
    fields:
      description: List of fields that the query should be restricted.
      in: query
      name: fields
      schema:
        items:
          type: string
        type: array
    query:
      description: "Query using the [Elastic Search Query String syntax](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string-syntax)\
        \ from the Query DSL."
      in: query
      name: query
      required: true
      schema:
        type: string
    query-fields:
      description: List of query fields that the query should be restricted.
      in: query
      name: queryFields
      schema:
        items:
          type: string
        type: array
    index:
      description: "Index to be used (currently identities, entitlements, and events)."
      in: query
      name: index
      required: true
      schema:
        type: string
    type:
      description: "Type to query (currently either identity, entitlement or event)."
      in: query
      name: type
      required: true
      schema:
        type: string
    column-fields:
      description: List of field columns that should be included in the export.
      in: query
      name: fields
      schema:
        items:
          type: string
        type: array
    taskResultIdOrName:
      description: ID or name of a task.
      in: path
      name: taskResultIdOrName
      required: true
      schema:
        type: string
  responses:
    "404":
      description: Not found.
    "204":
      description: No content.
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExceptionObject'
      description: Bad request.
    "202":
      description: Accepted.
      headers:
        Link:
          description: Link to the background task.
          schema:
            type: string
    "403":
      description: Forbidden.
    "503":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExceptionObject'
      description: Service unavailable.
      headers:
        X-Retry-After:
          description: Recommended number of seconds to wait before you retry the
            request.
          schema:
            type: integer
  schemas:
    AccessProfile:
      example:
        sourceId: sourceId
        entitlements:
        - entitlements
        - entitlements
        requestCommentsRequired: true
        deniedCommentsRequired: true
        approvalSchemes: approvalSchemes
        revokeRequestApprovalSchemes: revokeRequestApprovalSchemes
        name: name
        description: description
        disabled: true
        ownerId: ownerId
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        description:
          maxLength: 255
          type: string
        ownerId:
          type: string
        sourceId:
          type: string
        entitlements:
          items:
            type: string
          type: array
        approvalSchemes:
          description: Comma-separated list of approval schemes. Each approval scheme
            is one of - manager - appOwner - sourceOwner - accessProfileOwner - workgroup:\<workgroupId>
          type: string
        revokeRequestApprovalSchemes:
          description: Comma-separated list of revoke request approval schemes. Each
            approval scheme is one of - manager - sourceOwner - accessProfileOwner
            - workgroup:\<workgroupId>
          type: string
        requestCommentsRequired:
          type: boolean
        deniedCommentsRequired:
          type: boolean
        disabled:
          type: boolean
      type: object
    "201":
      description: Created.
      type: object
    AccessProfileCreateEto:
      example:
        sourceId: sourceId
        entitlements:
        - entitlements
        - entitlements
        requestCommentsRequired: true
        deniedCommentsRequired: true
        approvalSchemes: approvalSchemes
        revokeRequestApprovalSchemes: revokeRequestApprovalSchemes
        name: name
        description: description
        disabled: true
        ownerId: ownerId
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
        description:
          maxLength: 255
          type: string
        sourceId:
          type: string
        ownerId:
          type: string
        entitlements:
          items:
            type: string
          type: array
        approvalSchemes:
          description: Comma-separated list of approval schemes. Each approval scheme
            is one of - manager - appOwner - sourceOwner - accessProfileOwner - workgroup:\<workgroupId>
          type: string
        revokeRequestApprovalSchemes:
          description: Comma-separated list of revoke request approval schemes. Each
            approval scheme is one of - manager - sourceOwner - accessProfileOwner
            - workgroup:\<workgroupId>
          type: string
        requestCommentsRequired:
          type: boolean
        deniedCommentsRequired:
          type: boolean
        disabled:
          type: boolean
      required:
      - description
      - entitlements
      - name
      - ownerId
      - sourceId
      type: object
    Entitlement:
      example:
        privileged: true
        displayName: displayName
        description: description
        displayableName: displayableName
        id: id
        attribute: attribute
        applicationId: applicationId
        value: value
        applicationName: applicationName
      properties:
        id:
          type: string
        applicationName:
          type: string
        applicationId:
          type: string
        attribute:
          type: string
        value:
          type: string
        displayName:
          type: string
        displayableName:
          type: string
        description:
          type: string
        privileged:
          type: boolean
      type: object
    AccessRequest:
      example:
        requestSummaries:
        - name: name
          description: description
        - name: name
          description: description
        requesterDisplayName: requesterDisplayName
        targetName: targetName
        requesterId: requesterId
        targetId: targetId
        executionStatus: Executing
        warnings:
        - warnings
        - warnings
        workflowStep: workflowStep
        targetDisplayName: targetDisplayName
        source: source
        priority: priority
        type: type
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        approvals:
        - requesteeName: requesteeName
          requesterId: requesterId
          appName: appName
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          completed: true
          ownerId: ownerId
          accessRequestId: accessRequestId
          ownerName: ownerName
          requesterName: requesterName
          accessProfileName: accessProfileName
          appId: appId
          modified: 2000-01-23T04:56:07.000+00:00
          accessProfileDescription: accessProfileDescription
          id: id
          state: Pending
          requesteeId: requesteeId
        - requesteeName: requesteeName
          requesterId: requesterId
          appName: appName
          created: 2000-01-23T04:56:07.000+00:00
          description: description
          completed: true
          ownerId: ownerId
          accessRequestId: accessRequestId
          ownerName: ownerName
          requesterName: requesterName
          accessProfileName: accessProfileName
          appId: appId
          modified: 2000-01-23T04:56:07.000+00:00
          accessProfileDescription: accessProfileDescription
          id: id
          state: Pending
          requesteeId: requesteeId
        name: name
        completionDate: 2000-01-23T04:56:07.000+00:00
        completionStatus: Success
        id: id
        sourceName: sourceName
        errors:
        - errors
        - errors
      properties:
        approvals:
          items:
            $ref: '#/components/schemas/Approval'
          type: array
        completionDate:
          format: date-time
          type: string
        completionStatus:
          enum:
          - Success
          - Failure
          - Incomplete
          - Pending
          type: string
        dateCreated:
          format: date-time
          type: string
        errors:
          items:
            type: string
          type: array
        executionStatus:
          enum:
          - Executing
          - Verifying
          - Terminated
          - Completed
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          type: string
        name:
          type: string
        priority:
          type: string
        requestSummaries:
          items:
            $ref: '#/components/schemas/RequestSummary'
          type: array
        requesterId:
          type: string
        requesterDisplayName:
          type: string
        source:
          type: string
        sourceName:
          type: string
        targetName:
          type: string
        targetDisplayName:
          type: string
        targetId:
          type: string
        type:
          type: string
        warnings:
          items:
            type: string
          type: array
        workflowStep:
          type: string
      type: object
    Account:
      example:
        schema: schema
        authoritative: true
        displayName: displayName
        description: description
        uuid: uuid
        nativeIdentity: nativeIdentity
        supportsPasswordChange: true
        accountId: accountId
        features:
        - features
        - features
        uncorrelated: true
        application:
          name: name
          id: id
          type: type
        identity:
          name: name
          id: id
        meta:
          created: created
          modified: modified
          type: type
        name: name
        attributes:
          passwordLastSet: 0
          mail: mail
          sAMAccountName: sAMAccountName
          displayName: displayName
          msNPAllowDialin: msNPAllowDialin
          givenName: givenName
          objectClass:
          - objectClass
          - objectClass
          distinguishedName: distinguishedName
          cn: cn
          accountFlags:
          - accountFlags
          - accountFlags
          domain: domain
          objectguid: objectguid
          primaryGroupID: primaryGroupID
          objectSid: objectSid
          memberOf:
          - memberOf
          - memberOf
          sn: sn
          msDS-PrincipalName: msDS-PrincipalName
          idNowDescription: idNowDescription
          userPrincipalName: userPrincipalName
          pwdLastSet: pwdLastSet
        disabled: true
        id: id
        locked: true
        systemAccount: true
        pendingAccessRequestIds:
        - pendingAccessRequestIds
        - pendingAccessRequestIds
      properties:
        accountId:
          type: string
        application:
          $ref: '#/components/schemas/AccountApplication'
        attributes:
          $ref: '#/components/schemas/AccountAttributes'
        authoritative:
          type: boolean
        description:
          type: string
        disabled:
          type: boolean
        displayName:
          type: string
        features:
          items:
            type: string
          type: array
        id:
          type: string
        identity:
          $ref: '#/components/schemas/AccountIdentity'
        locked:
          type: boolean
        meta:
          $ref: '#/components/schemas/AccountMeta'
        name:
          type: string
        nativeIdentity:
          type: string
        pendingAccessRequestIds:
          items:
            type: string
          type: array
        schema:
          type: string
        supportsPasswordChange:
          type: boolean
        systemAccount:
          type: boolean
        uncorrelated:
          type: boolean
        uuid:
          type: string
      type: object
    ExceptionObject:
      properties:
        code:
          type: integer
        message:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ExceptionObject_errors_inner'
          type: array
      required:
      - code
      - message
      type: object
    DynamicSchemaEto:
      description: "Dynamic schema, with no predefined attributes."
      example:
        attribute: attribute
      properties:
        attribute:
          type: string
      type: object
    Approval:
      example:
        requesteeName: requesteeName
        requesterId: requesterId
        appName: appName
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        completed: true
        ownerId: ownerId
        accessRequestId: accessRequestId
        ownerName: ownerName
        requesterName: requesterName
        accessProfileName: accessProfileName
        appId: appId
        modified: 2000-01-23T04:56:07.000+00:00
        accessProfileDescription: accessProfileDescription
        id: id
        state: Pending
        requesteeId: requesteeId
      properties:
        id:
          type: string
        description:
          type: string
        accessProfileName:
          type: string
        accessProfileDescription:
          type: string
        appName:
          type: string
        appId:
          type: string
        accessRequestId:
          type: string
        ownerId:
          type: string
        ownerName:
          type: string
        requesterId:
          type: string
        requesterName:
          type: string
        requesteeId:
          type: string
        requesteeName:
          type: string
        state:
          enum:
          - Pending
          - Approved
          - Rejected
          type: string
        completed:
          type: boolean
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
      type: object
    CommentEto:
      example:
        comment: comment
      properties:
        comment:
          type: string
      type: object
    ForwardApprovalEto:
      example:
        newOwnerId: newOwnerId
        comment: comment
      properties:
        newOwnerId:
          maxLength: 255
          minLength: 1
          type: string
        comment:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - newOwnerId
      type: object
    IdentityV2:
      example:
        role:
        - role
        - role
        kbaAnswers: 0
        usageCertAttested: 2000-01-23T04:56:07.000+00:00
        identityFlags: "{}"
        encryptionKey: encryptionKey
        uuid: uuid
        enabled: true
        employeeNumber: employeeNumber
        uid: uid
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        altAuthViaIntegrationData: altAuthViaIntegrationData
        dateCreated: 2000-01-23T04:56:07.000+00:00
        altEmail: altEmail
        alias: alias
        id: id
        email: email
        disablePasswordReset: true
        encryptionCheck: encryptionCheck
        passwordResetSinceLastLogin: true
        supportsPasswordPush: true
        ptaSourceId: ptaSourceId
        phone: phone
        altAuthVia: altAuthVia
        name: name
        altPhone: altPhone
        attributes:
          attribute: attribute
        status: status
      properties:
        id:
          type: string
        alias:
          type: string
        uid:
          type: string
        name:
          type: string
        uuid:
          type: string
        status:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        encryptionKey:
          type: string
        encryptionCheck:
          type: string
        passwordResetSinceLastLogin:
          type: boolean
        usageCertAttested:
          format: date-time
          type: string
        identityFlags:
          properties: {}
          type: object
        enabled:
          type: boolean
        altAuthVia:
          type: string
        altAuthViaIntegrationData:
          type: string
        kbaAnswers:
          type: integer
        disablePasswordReset:
          type: boolean
        ptaSourceId:
          type: string
        supportsPasswordPush:
          type: boolean
        attributes:
          $ref: '#/components/schemas/DynamicSchemaEto'
        role:
          items:
            type: string
          type: array
        phone:
          description: Work phone.
          type: string
        email:
          description: Work email.
          type: string
        altEmail:
          type: string
        altPhone:
          type: string
        employeeNumber:
          type: string
      type: object
    IdentityEto:
      description: One or more attributes of an identity.
      example:
        altPhone: "8085551212"
        altEmail: example@sailpoint.com
        altAuthVia: SMS
        identityFlags:
          RESPONSIVE_LAUNCHPAD: "true"
      properties:
        encryptionKey:
          type: string
        encryptionCheck:
          type: string
        altAuthVia:
          description: Alternate authentication type.
          enum:
          - ASK
          - SMS_PERSONAL
          - VOICE_PERSONAL
          - SMS_WORK
          - VOICE_WORK
          - KBA
          - EMAIL_PERSONAL
          - EMAIL_WORK
          - PASSWORD
          - INTEGRATION
          type: string
        altAuthViaIntegrationData:
          type: string
        altPhone:
          description: Alternate phone.
          type: string
        altEmail:
          description: Alternate email.
          type: string
        identityFlags:
          $ref: '#/components/schemas/IdentityEto_identityFlags'
      type: object
    App:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        icon: icon
        description: description
        id: id
        accessMethods:
        - method: method
          name: name
          rel: LAUNCHER
          description: description
          href: href
          status: status
        - method: method
          name: name
          rel: LAUNCHER
          description: description
          href: href
          status: status
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        icon:
          type: string
        accessMethods:
          items:
            $ref: '#/components/schemas/App_accessMethods_inner'
          type: array
      type: object
    Launcher:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        icon: icon
        usageCertText: usageCertText
        description: description
        links:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          rel: rel
          description: description
          id: id
          href: href
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          name: name
          rel: rel
          description: description
          id: id
          href: href
        id: id
        state: state
        usageCertAttest: 2000-01-23T04:56:07.000+00:00
        account:
          name: name
          id: id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        icon:
          type: string
        state:
          type: string
        usageCertText:
          type: string
        usageCertAttest:
          format: date-time
          type: string
        account:
          $ref: '#/components/schemas/Launcher_account'
        links:
          items:
            $ref: '#/components/schemas/LauncherLink'
          type: array
      type: object
    MultiStatusObject:
      example:
        fail:
        - id: id
          message: message
        - id: id
          message: message
        success:
        - success
        - success
      properties:
        success:
          items:
            type: string
          type: array
        fail:
          items:
            $ref: '#/components/schemas/MultiStatusObject_fail_inner'
          type: array
      type: object
    LauncherEto:
      example:
        usageCertAttested: true
      properties:
        usageCertAttested:
          type: boolean
      type: object
    Org:
      example:
        maxRegisteredIdentities: 0
        approvalConfig:
          fallbackApprover: fallbackApprover
          maxReminders: 3
          daysTillEscalation: 7
          daysBetweenReminders: 9
        enableExternalPasswordChange: true
        description: description
        emailTestAddress: emailTestAddress
        styleHash: styleHash
        identityCount: 6
        kbaReqAnswers: 5
        adminStrongAuthRequired: true
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        loginUrl: loginUrl
        systemNotificationEmails:
        - systemNotificationEmails
        - systemNotificationEmails
        id: id
        redirectPatterns:
        - redirectPatterns
        - redirectPatterns
        ssoDomain: ssoDomain
        kbaReqForAuthn: 1
        emailTestMode: true
        usernameEmptyText: usernameEmptyText
        ssoPartnerSource: ssoPartnerSource
        usernameLabel: usernameLabel
        lockoutAttemptThreshold: 5
        enableAutomationGeneration: true
        enablePasswordReplay: true
        usageCertRequired: true
        enableAutomaticPasswordReplay: true
        countryCodes:
        - countryCodes
        - countryCodes
        name: name
        scriptName: scriptName
        passwordReplayState: enabled
        whiteList: true
        netmasks:
        - netmasks
        - netmasks
        systemNotificationConfig:
          recipientType: allAdmins
          notifications:
          - thresholds:
              healthy: healthy
              unhealthy: unhealthy
            byEmail: true
            type: type
          - thresholds:
              healthy: healthy
              unhealthy: unhealthy
            byEmail: true
            type: type
        lockoutTimeMinutes: 2
        status: inactive
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        scriptName:
          type: string
        ssoDomain:
          type: string
        status:
          enum:
          - inactive
          - active
          - demo
          - test
          type: string
        maxRegisteredIdentities:
          type: integer
        identityCount:
          type: integer
        kbaReqForAuthn:
          type: integer
        kbaReqAnswers:
          type: integer
        lockoutAttemptThreshold:
          type: integer
        lockoutTimeMinutes:
          type: integer
        usageCertRequired:
          type: boolean
        adminStrongAuthRequired:
          type: boolean
        enableExternalPasswordChange:
          type: boolean
        enablePasswordReplay:
          type: boolean
        enableAutomaticPasswordReplay:
          type: boolean
        netmasks:
          items:
            type: string
          type: array
        countryCodes:
          items:
            type: string
          type: array
        whiteList:
          type: boolean
        emailTestMode:
          type: boolean
        emailTestAddress:
          format: email
          type: string
        usernameEmptyText:
          type: string
        usernameLabel:
          type: string
        enableAutomationGeneration:
          type: boolean
        passwordReplayState:
          enum:
          - enabled
          - passive
          - disabled
          type: string
        systemNotificationConfig:
          $ref: '#/components/schemas/Org_systemNotificationConfig'
        systemNotificationEmails:
          items:
            format: email
            type: string
          type: array
        loginUrl:
          type: string
        redirectPatterns:
          items:
            type: string
          type: array
        styleHash:
          type: string
        approvalConfig:
          $ref: '#/components/schemas/ApprovalConfigEto'
        ssoPartnerSource:
          type: string
      type: object
    OrgEto:
      example:
        approvalConfig:
          fallbackApprover: fallbackApprover
          maxReminders: 3
          daysTillEscalation: 7
          daysBetweenReminders: 9
        kbaReqForAuthn: 6
        usernameEmptyText: usernameEmptyText
        enableExternalPasswordChange: true
        ssoPartnerSource: ssoPartnerSource
        usageCertText: usageCertText
        preferredIdentityInviteTemplate: preferredIdentityInviteTemplate
        usernameLabel: usernameLabel
        kbaReqAnswers: 0
        enableAutomationGeneration: true
        lockoutAttemptThreshold: 1
        trackAnalytics: true
        enableAutomaticPasswordReplay: true
        usageCertRequired: true
        countryCodes:
        - countryCodes
        - countryCodes
        loginUrl: loginUrl
        passwordReplayState: enabled
        systemNotificationEmails:
        - systemNotificationEmails
        - systemNotificationEmails
        whiteList: true
        redirectPatterns:
        - redirectPatterns
        - redirectPatterns
        netmasks:
        - netmasks
        - netmasks
        notifyAuthenticationSettingChange: true
        lockoutTimeMinutes: 5
      properties:
        countryCodes:
          items:
            type: string
          type: array
        enableExternalPasswordChange:
          type: boolean
        enableAutomaticPasswordReplay:
          type: boolean
        enableAutomationGeneration:
          type: boolean
        kbaReqAnswers:
          format: int32
          type: integer
        kbaReqForAuthn:
          format: int32
          type: integer
        lockoutAttemptThreshold:
          format: int32
          type: integer
        lockoutTimeMinutes:
          format: int32
          type: integer
        loginUrl:
          type: string
        netmasks:
          items:
            type: string
          type: array
        notifyAuthenticationSettingChange:
          type: boolean
        passwordReplayState:
          enum:
          - enabled
          - passive
          - disabled
          type: string
        preferredIdentityInviteTemplate:
          type: string
        redirectPatterns:
          items:
            type: string
          type: array
        ssoPartnerSource:
          type: string
        systemNotificationEmails:
          items:
            format: email
            type: string
          type: array
        trackAnalytics:
          type: boolean
        usageCertRequired:
          type: boolean
        usageCertText:
          type: string
        usernameEmptyText:
          type: string
        usernameLabel:
          type: string
        whiteList:
          type: boolean
        approvalConfig:
          $ref: '#/components/schemas/ApprovalConfigEto'
      type: object
    ProvisioningActivity:
      example:
        sourceId: sourceId
        accountName: accountName
        provisioningPlan: provisioningPlan
        warnings:
        - warnings
        - warnings
        approverName: approverName
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        ownerName: ownerName
        name: name
        id: id
        sourceName: sourceName
        operation: operation
        errors:
        - errors
        - errors
        status: Committed
      properties:
        id:
          type: string
        name:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        operation:
          type: string
        status:
          enum:
          - Committed
          - Failed
          - Finished
          - Not Verifiable
          - Pending
          - Retry
          type: string
        sourceId:
          type: string
        sourceName:
          type: string
        accountName:
          type: string
        ownerName:
          type: string
        approverName:
          type: string
        warnings:
          items:
            type: string
          type: array
        errors:
          items:
            type: string
          type: array
        provisioningPlan:
          type: string
      type: object
    SearchIdentity:
      example:
        lastName: lastName
        roleCount: 2
        access:
        - owner:
            displayName: displayName
            name: name
            id: id
          privileged: true
          displayName: displayName
          name: name
          description: description
          disabled: true
          id: id
          source:
            name: name
            id: id
          attribute: attribute
          type: type
          value: value
        - owner:
            displayName: displayName
            name: name
            id: id
          privileged: true
          displayName: displayName
          name: name
          description: description
          disabled: true
          id: id
          source:
            name: name
            id: id
          attribute: attribute
          type: type
          value: value
        displayName: displayName
        accessProfileCount: 7
        source:
          name: name
          id: id
        employeeNumber: employeeNumber
        inactive: true
        identityProfile:
          name: name
          id: id
        modified: 2000-01-23T04:56:07.000+00:00
        id: id
        email: email
        apps:
        - name: name
          id: id
          source:
            name: name
            id: id
          account:
            accountId: accountId
            id: id
        - name: name
          id: id
          source:
            name: name
            id: id
          account:
            accountId: accountId
            id: id
        appCount: 1
        accessCount: 5
        entitlementCount: 5
        synced: 2000-01-23T04:56:07.000+00:00
        accountCount: 6
        manager:
          displayName: displayName
          name: name
          id: id
        created: 2000-01-23T04:56:07.000+00:00
        firstName: firstName
        processingState: processingState
        phone: phone
        processingDetails:
          date: 2000-01-23T04:56:07.000+00:00
          stage: stage
          retryCount: 0
          stackTrace: stackTrace
          message: message
        name: name
        attributes:
          attribute: attribute
        accounts:
        - privileged: true
          passwordLastSet: 2000-01-23T04:56:07.000+00:00
          accountId: accountId
          entitlementAttributes:
            attribute: attribute
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          disabled: true
          id: id
          source:
            name: name
            id: id
            type: type
          locked: true
          manuallyCorrelated: true
        - privileged: true
          passwordLastSet: 2000-01-23T04:56:07.000+00:00
          accountId: accountId
          entitlementAttributes:
            attribute: attribute
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          disabled: true
          id: id
          source:
            name: name
            id: id
            type: type
          locked: true
          manuallyCorrelated: true
        status: status
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        name:
          type: string
        email:
          type: string
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
        synced:
          format: date-time
          type: string
        phone:
          type: string
        inactive:
          type: boolean
        status:
          type: string
        employeeNumber:
          type: string
        source:
          $ref: '#/components/schemas/Launcher_account'
        identityProfile:
          $ref: '#/components/schemas/Launcher_account'
        manager:
          $ref: '#/components/schemas/SearchIdentity_manager'
        attributes:
          $ref: '#/components/schemas/SearchIdentity_attributes'
        processingState:
          type: string
        processingDetails:
          $ref: '#/components/schemas/SearchIdentity_processingDetails'
        accountCount:
          type: integer
        accounts:
          items:
            $ref: '#/components/schemas/SearchIdentity_accounts_inner'
          type: array
        appCount:
          type: integer
        apps:
          items:
            $ref: '#/components/schemas/SearchIdentity_apps_inner'
          type: array
        accessCount:
          type: integer
        entitlementCount:
          type: integer
        roleCount:
          type: integer
        accessProfileCount:
          type: integer
        access:
          items:
            $ref: '#/components/schemas/SearchIdentity_access_inner'
          type: array
      type: object
    SearchEntitlement:
      example:
        privileged: true
        synced: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        name: name
        description: description
        modified: 2000-01-23T04:56:07.000+00:00
        id: id
        source:
          name: name
          id: id
        attribute: attribute
        value: value
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        source:
          $ref: '#/components/schemas/Launcher_account'
        privileged:
          type: boolean
        attribute:
          type: string
        value:
          type: string
        modified:
          format: date-time
          type: string
        synced:
          format: date-time
          type: string
      type: object
    SearchEvent:
      example:
        actor:
          name: name
          type: type
        stack: stack
        hostname: hostname
        synced: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        requestId: requestId
        ipAddress: ipAddress
        action: action
        attributes:
          requester:
            comments: comments
            name: name
            type: type
          newValue: newValue
          accountName: accountName
          reviewer:
            comments: comments
            name: name
            type: type
          oldValue: oldValue
          sourceName: sourceName
          error: error
          SSO:
            ipAddress: ipAddress
            contextId: contextId
        id: id
        type: type
        target:
          name: name
          type: type
      properties:
        id:
          type: string
        action:
          type: string
        type:
          type: string
        created:
          format: date-time
          type: string
        synced:
          format: date-time
          type: string
        actor:
          $ref: '#/components/schemas/SearchEvent_actor'
        target:
          $ref: '#/components/schemas/SearchEvent_actor'
        stack:
          type: string
        requestId:
          type: string
        hostname:
          type: string
        ipAddress:
          type: string
        attributes:
          $ref: '#/components/schemas/SearchEvent_attributes'
      type: object
    TaskResult:
      example:
        description: description
        completed: 2000-01-23T04:56:07.000+00:00
        type: type
        launched: 2000-01-23T04:56:07.000+00:00
        parentName: parentName
        name: name
        messages:
        - type: Info
          localizedText: localizedText
        - type: Info
          localizedText: localizedText
        progress: progress
        returns:
        - displayLabel: displayLabel
          attributeName: attributeName
        - displayLabel: displayLabel
          attributeName: attributeName
        attributes:
          attribute: attribute
        id: id
        completionStatus: Success
        launcher: launcher
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parentName:
          type: string
        launcher:
          type: string
        completed:
          format: date-time
          type: string
        launched:
          format: date-time
          type: string
        completionStatus:
          enum:
          - Success
          - Warning
          - Error
          - Terminated
          - TempError
          type: string
        messages:
          items:
            $ref: '#/components/schemas/TaskResult_messages_inner'
          type: array
        returns:
          items:
            $ref: '#/components/schemas/TaskResult_returns_inner'
          type: array
        attributes:
          $ref: '#/components/schemas/DynamicSchemaEto'
        progress:
          type: string
      type: object
    Mapping:
      example:
        mappings: "{}"
        operators: "{}"
      properties:
        mappings:
          type: object
        operators:
          type: object
      type: object
    Workgroup:
      example:
        owner:
          emailAddress: philip.ellis@sailpoint.com
          displayName: Philip Ellis
          name: philip.ellis
          id: 2c9180897d2cb80b017d39ccb26c1804
        connectionCount: 2
        created: 1641498673000
        memberCount: 2
        name: Phil Governance Group
        description: Phil Governance Group
        modified: 1641498673000
        id: b0c131fa-5133-4efb-9bb2-e22529f44cad
      properties:
        connectionCount:
          example: 2
          format: int32
          type: integer
        created:
          example: 1641498673000
          format: int64
          type: integer
        description:
          example: Phil Governance Group
          type: string
        id:
          example: b0c131fa-5133-4efb-9bb2-e22529f44cad
          type: string
        memberCount:
          example: 2
          format: int32
          type: integer
        modified:
          example: 1641498673000
          format: int64
          type: integer
        name:
          example: Phil Governance Group
          type: string
        owner:
          $ref: '#/components/schemas/Workgroup_owner'
      type: object
    WorkgroupMember:
      example:
        name: Jerry.Bennett
        alias: Jerry.Bennett
        externalId: 2c9180837dfe6949017e208e26027b23
        id: 3497959
        email: Jerry.Bennett@sailpointdemo.com
      properties:
        alias:
          example: Jerry.Bennett
          type: string
        email:
          example: Jerry.Bennett@sailpointdemo.com
          type: string
        externalId:
          example: 2c9180837dfe6949017e208e26027b23
          type: string
        id:
          example: 3497959
          format: int32
          type: integer
        name:
          example: Jerry.Bennett
          type: string
      type: object
    WorkgroupConnection:
      example:
        workgroupId: b0c131fa-5133-4efb-9bb2-e22529f44cad
        name: Test Approval Scheme
        description: description
        connectionType: AccessRequestReviewer
        objectId: 8c24b31fe23947b28e42691a4a6faaee
        objectType: AccessProfile
      properties:
        connectionType:
          example: AccessRequestReviewer
          type: string
        description:
          format: nullable
          type: string
        name:
          example: Test Approval Scheme
          type: string
        objectId:
          example: 8c24b31fe23947b28e42691a4a6faaee
          type: string
        objectType:
          example: AccessProfile
          type: string
        workgroupId:
          example: b0c131fa-5133-4efb-9bb2-e22529f44cad
          type: string
      type: object
    RequestSummary:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    AccountApplication:
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    AccountAttributes:
      example:
        passwordLastSet: 0
        mail: mail
        sAMAccountName: sAMAccountName
        displayName: displayName
        msNPAllowDialin: msNPAllowDialin
        givenName: givenName
        objectClass:
        - objectClass
        - objectClass
        distinguishedName: distinguishedName
        cn: cn
        accountFlags:
        - accountFlags
        - accountFlags
        domain: domain
        objectguid: objectguid
        primaryGroupID: primaryGroupID
        objectSid: objectSid
        memberOf:
        - memberOf
        - memberOf
        sn: sn
        msDS-PrincipalName: msDS-PrincipalName
        idNowDescription: idNowDescription
        userPrincipalName: userPrincipalName
        pwdLastSet: pwdLastSet
      properties:
        accountFlags:
          items:
            type: string
          type: array
        cn:
          type: string
        displayName:
          type: string
        distinguishedName:
          type: string
        domain:
          type: string
        givenName:
          type: string
        idNowDescription:
          type: string
        mail:
          type: string
        memberOf:
          items:
            type: string
          type: array
        msDS-PrincipalName:
          type: string
        msNPAllowDialin:
          type: string
        objectClass:
          items:
            type: string
          type: array
        objectSid:
          type: string
        objectguid:
          type: string
        passwordLastSet:
          type: integer
        primaryGroupID:
          type: string
        pwdLastSet:
          type: string
        sAMAccountName:
          type: string
        sn:
          type: string
        userPrincipalName:
          type: string
      type: object
    AccountIdentity:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    AccountMeta:
      example:
        created: created
        modified: modified
        type: type
      properties:
        created:
          type: string
        modified:
          type: string
        type:
          type: string
      type: object
    LauncherLink:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        name: name
        rel: rel
        description: description
        id: id
        href: href
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        href:
          type: string
        rel:
          type: string
      type: object
    Notification:
      example:
        thresholds:
          healthy: healthy
          unhealthy: unhealthy
        byEmail: true
        type: type
      properties:
        type:
          type: string
        byEmail:
          type: boolean
        thresholds:
          $ref: '#/components/schemas/Notification_thresholds'
      type: object
    ApprovalConfigEto:
      example:
        fallbackApprover: fallbackApprover
        maxReminders: 3
        daysTillEscalation: 7
        daysBetweenReminders: 9
      properties:
        daysTillEscalation:
          type: integer
        daysBetweenReminders:
          type: integer
        maxReminders:
          type: integer
        fallbackApprover:
          type: string
      required:
      - daysBetweenReminders
      - daysTillEscalation
      - fallbackApprover
      - maxReminders
      type: object
    runSearch_200_response:
      example:
        identity:
        - lastName: lastName
          roleCount: 2
          access:
          - owner:
              displayName: displayName
              name: name
              id: id
            privileged: true
            displayName: displayName
            name: name
            description: description
            disabled: true
            id: id
            source:
              name: name
              id: id
            attribute: attribute
            type: type
            value: value
          - owner:
              displayName: displayName
              name: name
              id: id
            privileged: true
            displayName: displayName
            name: name
            description: description
            disabled: true
            id: id
            source:
              name: name
              id: id
            attribute: attribute
            type: type
            value: value
          displayName: displayName
          accessProfileCount: 7
          source:
            name: name
            id: id
          employeeNumber: employeeNumber
          inactive: true
          identityProfile:
            name: name
            id: id
          modified: 2000-01-23T04:56:07.000+00:00
          id: id
          email: email
          apps:
          - name: name
            id: id
            source:
              name: name
              id: id
            account:
              accountId: accountId
              id: id
          - name: name
            id: id
            source:
              name: name
              id: id
            account:
              accountId: accountId
              id: id
          appCount: 1
          accessCount: 5
          entitlementCount: 5
          synced: 2000-01-23T04:56:07.000+00:00
          accountCount: 6
          manager:
            displayName: displayName
            name: name
            id: id
          created: 2000-01-23T04:56:07.000+00:00
          firstName: firstName
          processingState: processingState
          phone: phone
          processingDetails:
            date: 2000-01-23T04:56:07.000+00:00
            stage: stage
            retryCount: 0
            stackTrace: stackTrace
            message: message
          name: name
          attributes:
            attribute: attribute
          accounts:
          - privileged: true
            passwordLastSet: 2000-01-23T04:56:07.000+00:00
            accountId: accountId
            entitlementAttributes:
              attribute: attribute
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            disabled: true
            id: id
            source:
              name: name
              id: id
              type: type
            locked: true
            manuallyCorrelated: true
          - privileged: true
            passwordLastSet: 2000-01-23T04:56:07.000+00:00
            accountId: accountId
            entitlementAttributes:
              attribute: attribute
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            disabled: true
            id: id
            source:
              name: name
              id: id
              type: type
            locked: true
            manuallyCorrelated: true
          status: status
        - lastName: lastName
          roleCount: 2
          access:
          - owner:
              displayName: displayName
              name: name
              id: id
            privileged: true
            displayName: displayName
            name: name
            description: description
            disabled: true
            id: id
            source:
              name: name
              id: id
            attribute: attribute
            type: type
            value: value
          - owner:
              displayName: displayName
              name: name
              id: id
            privileged: true
            displayName: displayName
            name: name
            description: description
            disabled: true
            id: id
            source:
              name: name
              id: id
            attribute: attribute
            type: type
            value: value
          displayName: displayName
          accessProfileCount: 7
          source:
            name: name
            id: id
          employeeNumber: employeeNumber
          inactive: true
          identityProfile:
            name: name
            id: id
          modified: 2000-01-23T04:56:07.000+00:00
          id: id
          email: email
          apps:
          - name: name
            id: id
            source:
              name: name
              id: id
            account:
              accountId: accountId
              id: id
          - name: name
            id: id
            source:
              name: name
              id: id
            account:
              accountId: accountId
              id: id
          appCount: 1
          accessCount: 5
          entitlementCount: 5
          synced: 2000-01-23T04:56:07.000+00:00
          accountCount: 6
          manager:
            displayName: displayName
            name: name
            id: id
          created: 2000-01-23T04:56:07.000+00:00
          firstName: firstName
          processingState: processingState
          phone: phone
          processingDetails:
            date: 2000-01-23T04:56:07.000+00:00
            stage: stage
            retryCount: 0
            stackTrace: stackTrace
            message: message
          name: name
          attributes:
            attribute: attribute
          accounts:
          - privileged: true
            passwordLastSet: 2000-01-23T04:56:07.000+00:00
            accountId: accountId
            entitlementAttributes:
              attribute: attribute
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            disabled: true
            id: id
            source:
              name: name
              id: id
              type: type
            locked: true
            manuallyCorrelated: true
          - privileged: true
            passwordLastSet: 2000-01-23T04:56:07.000+00:00
            accountId: accountId
            entitlementAttributes:
              attribute: attribute
            created: 2000-01-23T04:56:07.000+00:00
            name: name
            disabled: true
            id: id
            source:
              name: name
              id: id
              type: type
            locked: true
            manuallyCorrelated: true
          status: status
        entitlement:
        - privileged: true
          synced: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          modified: 2000-01-23T04:56:07.000+00:00
          id: id
          source:
            name: name
            id: id
          attribute: attribute
          value: value
        - privileged: true
          synced: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          name: name
          description: description
          modified: 2000-01-23T04:56:07.000+00:00
          id: id
          source:
            name: name
            id: id
          attribute: attribute
          value: value
        event:
        - actor:
            name: name
            type: type
          stack: stack
          hostname: hostname
          synced: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          requestId: requestId
          ipAddress: ipAddress
          action: action
          attributes:
            requester:
              comments: comments
              name: name
              type: type
            newValue: newValue
            accountName: accountName
            reviewer:
              comments: comments
              name: name
              type: type
            oldValue: oldValue
            sourceName: sourceName
            error: error
            SSO:
              ipAddress: ipAddress
              contextId: contextId
          id: id
          type: type
          target:
            name: name
            type: type
        - actor:
            name: name
            type: type
          stack: stack
          hostname: hostname
          synced: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          requestId: requestId
          ipAddress: ipAddress
          action: action
          attributes:
            requester:
              comments: comments
              name: name
              type: type
            newValue: newValue
            accountName: accountName
            reviewer:
              comments: comments
              name: name
              type: type
            oldValue: oldValue
            sourceName: sourceName
            error: error
            SSO:
              ipAddress: ipAddress
              contextId: contextId
          id: id
          type: type
          target:
            name: name
            type: type
      properties:
        identity:
          items:
            $ref: '#/components/schemas/SearchIdentity'
          type: array
        entitlement:
          items:
            $ref: '#/components/schemas/SearchEntitlement'
          type: array
        event:
          items:
            $ref: '#/components/schemas/SearchEvent'
          type: array
      type: object
    exportSearchCsvPost_request_match:
      properties:
        displayName:
          type: string
      type: object
    exportSearchCsvPost_request:
      properties:
        match:
          $ref: '#/components/schemas/exportSearchCsvPost_request_match'
      type: object
    createWorkgroup_request_owner:
      properties:
        id:
          example: 2c9180867624cbd7017642d8c8c81f67
          type: string
      type: object
    createWorkgroup_request:
      properties:
        name:
          example: Test group 3
          type: string
        description:
          example: This is a test
          type: string
        owner:
          $ref: '#/components/schemas/createWorkgroup_request_owner'
      type: object
    modifyWorkgroupMembers_request:
      properties:
        add:
          items:
            example: 2c9180867624cbd7017642d8c8c81f67
            type: string
          type: array
        remove:
          items:
            example: 2c9180867624cbd7017642d8c8c81f67
            type: string
          type: array
      type: object
    bulkDeleteWorkGroups_request:
      properties:
        ids:
          items:
            example: 868edef1-222b-40e4-8787-b56cfd78b100
            type: string
          type: array
      type: object
    bulkDeleteWorkGroups_200_response:
      example:
        deleted:
        - 4518f275-e7de-40b8-9951-b67d6273421c
        - 4518f275-e7de-40b8-9951-b67d6273421c
        inUse:
        - 12538dlg-60d0-44b4-9273-d1ba578ef384
        - 12538dlg-60d0-44b4-9273-d1ba578ef384
        notFound:
        - 12538ecf-60d0-44b4-9273-d1ba578ef384
        - 12538ecf-60d0-44b4-9273-d1ba578ef384
      properties:
        deleted:
          items:
            example: 4518f275-e7de-40b8-9951-b67d6273421c
            type: string
          type: array
        inUse:
          items:
            example: 12538dlg-60d0-44b4-9273-d1ba578ef384
            type: string
          type: array
        notFound:
          items:
            example: 12538ecf-60d0-44b4-9273-d1ba578ef384
            type: string
          type: array
      type: object
    ExceptionObject_errors_inner:
      properties:
        codes:
          items:
            type: string
          type: array
        properties:
          items:
            properties: {}
            type: object
          type: array
        object:
          type: string
        message:
          type: string
        field:
          type: string
        rejectedValue:
          properties: {}
          type: object
      type: object
    IdentityEto_identityFlags:
      properties:
        RESPONSIVE_LAUNCHPAD:
          type: string
      type: object
    App_accessMethods_inner:
      example:
        method: method
        name: name
        rel: LAUNCHER
        description: description
        href: href
        status: status
      properties:
        name:
          type: string
        description:
          type: string
        href:
          type: string
        method:
          type: string
        rel:
          enum:
          - LAUNCHER
          - REQUEST
          type: string
        status:
          type: string
      type: object
    Launcher_account:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    MultiStatusObject_fail_inner:
      example:
        id: id
        message: message
      properties:
        id:
          type: string
        message:
          type: string
      type: object
    Org_systemNotificationConfig:
      example:
        recipientType: allAdmins
        notifications:
        - thresholds:
            healthy: healthy
            unhealthy: unhealthy
          byEmail: true
          type: type
        - thresholds:
            healthy: healthy
            unhealthy: unhealthy
          byEmail: true
          type: type
      properties:
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        recipientType:
          enum:
          - allAdmins
          - specificIdentities
          type: string
      type: object
    SearchIdentity_manager:
      example:
        displayName: displayName
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
      type: object
    SearchIdentity_attributes:
      description: "Dynamic schema, with no predefined attributes."
      example:
        attribute: attribute
      properties:
        attribute:
          type: string
      type: object
    SearchIdentity_processingDetails:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        stage: stage
        retryCount: 0
        stackTrace: stackTrace
        message: message
      properties:
        date:
          format: date-time
          type: string
        stage:
          type: string
        retryCount:
          type: integer
        stackTrace:
          type: string
        message:
          type: string
      type: object
    SearchIdentity_accounts_inner_source:
      description: ""
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      type: object
    SearchIdentity_accounts_inner:
      example:
        privileged: true
        passwordLastSet: 2000-01-23T04:56:07.000+00:00
        accountId: accountId
        entitlementAttributes:
          attribute: attribute
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        disabled: true
        id: id
        source:
          name: name
          id: id
          type: type
        locked: true
        manuallyCorrelated: true
      properties:
        id:
          type: string
        name:
          type: string
        accountId:
          type: string
        source:
          $ref: '#/components/schemas/SearchIdentity_accounts_inner_source'
        disabled:
          type: boolean
        locked:
          type: boolean
        manuallyCorrelated:
          type: boolean
        privileged:
          type: boolean
        passwordLastSet:
          format: date-time
          type: string
        created:
          format: date-time
          type: string
        entitlementAttributes:
          $ref: '#/components/schemas/SearchIdentity_attributes'
      type: object
    SearchIdentity_apps_inner_source:
      description: ""
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    SearchIdentity_apps_inner_account:
      example:
        accountId: accountId
        id: id
      properties:
        id:
          type: string
        accountId:
          type: string
      type: object
    SearchIdentity_apps_inner:
      example:
        name: name
        id: id
        source:
          name: name
          id: id
        account:
          accountId: accountId
          id: id
      properties:
        id:
          type: string
        name:
          type: string
        source:
          $ref: '#/components/schemas/SearchIdentity_apps_inner_source'
        account:
          $ref: '#/components/schemas/SearchIdentity_apps_inner_account'
      type: object
    SearchIdentity_access_inner_owner:
      description: ""
      example:
        displayName: displayName
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
      type: object
    SearchIdentity_access_inner:
      example:
        owner:
          displayName: displayName
          name: name
          id: id
        privileged: true
        displayName: displayName
        name: name
        description: description
        disabled: true
        id: id
        source:
          name: name
          id: id
        attribute: attribute
        type: type
        value: value
      properties:
        id:
          type: string
        type:
          type: string
        displayName:
          type: string
        name:
          type: string
        description:
          type: string
        source:
          $ref: '#/components/schemas/SearchIdentity_apps_inner_source'
        owner:
          $ref: '#/components/schemas/SearchIdentity_access_inner_owner'
        privileged:
          type: boolean
        attribute:
          type: string
        value:
          type: string
        disabled:
          type: boolean
      type: object
    SearchEvent_actor:
      example:
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
      type: object
    SearchEvent_attributes_reviewer:
      example:
        comments: comments
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        comments:
          type: string
      type: object
    SearchEvent_attributes_SSO:
      example:
        ipAddress: ipAddress
        contextId: contextId
      properties:
        contextId:
          type: string
        ipAddress:
          type: string
      type: object
    SearchEvent_attributes:
      description: Dynamic schema
      example:
        requester:
          comments: comments
          name: name
          type: type
        newValue: newValue
        accountName: accountName
        reviewer:
          comments: comments
          name: name
          type: type
        oldValue: oldValue
        sourceName: sourceName
        error: error
        SSO:
          ipAddress: ipAddress
          contextId: contextId
      properties:
        error:
          type: string
        reviewer:
          $ref: '#/components/schemas/SearchEvent_attributes_reviewer'
        requester:
          $ref: '#/components/schemas/SearchEvent_attributes_reviewer'
        oldValue:
          type: string
        newValue:
          type: string
        accountName:
          type: string
        sourceName:
          type: string
        SSO:
          $ref: '#/components/schemas/SearchEvent_attributes_SSO'
      type: object
    TaskResult_messages_inner:
      example:
        type: Info
        localizedText: localizedText
      properties:
        localizedText:
          type: string
        type:
          enum:
          - Info
          - Warn
          - Error
          type: string
      type: object
    TaskResult_returns_inner:
      example:
        displayLabel: displayLabel
        attributeName: attributeName
      properties:
        attributeName:
          type: string
        displayLabel:
          type: string
      type: object
    Workgroup_owner:
      example:
        emailAddress: philip.ellis@sailpoint.com
        displayName: Philip Ellis
        name: philip.ellis
        id: 2c9180897d2cb80b017d39ccb26c1804
      properties:
        displayName:
          example: Philip Ellis
          type: string
        emailAddress:
          example: philip.ellis@sailpoint.com
          type: string
        id:
          example: 2c9180897d2cb80b017d39ccb26c1804
          type: string
        name:
          example: philip.ellis
          type: string
      type: object
    Notification_thresholds:
      example:
        healthy: healthy
        unhealthy: unhealthy
      properties:
        healthy:
          type: string
        unhealthy:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      description: "OAuth2 Bearer token (JWT). See [https://community.sailpoint.com/t5/IdentityNow-Wiki/Best-Practices-IdentityNow-REST-API-Authentication/ta-p/79566](Best\
        \ Practices: IdentityNow REST API Authentication)"
      flows:
        authorizationCode:
          authorizationUrl: https://tenant.identitynow.com/oauth/authorize
          scopes:
            idn:task-definition:read: Task Definition read access
            idn:task-definition:write: Task Definition write access
            idn:task-management:read: Task Management read access (TaskStatus)
            idn:task-management:write: Task Management write access (TaskInvocation)
            idn:service-desk-integration:read: Service Desk integration read access
            idn:service-desk-integration:write: Service Desk integration write access
            idn:managed-cluster:read: ManagedCluster read access
            idn:managed-cluster-log-config:read: ManagedCluster log configuration
              read access
            idn:managed-cluster-log-config:write: ManagedCluster log configuration
              write access
            idn:managed-cluster:upgrade: ManagedCluster client version upgrade access
          tokenUrl: https://tenant.identitynow.com/oauth/token
      type: oauth2
