/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// AccountAttributes struct for AccountAttributes
type AccountAttributes struct {
	AccountFlags []string `json:"accountFlags,omitempty"`
	Cn *string `json:"cn,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	DistinguishedName *string `json:"distinguishedName,omitempty"`
	Domain *string `json:"domain,omitempty"`
	GivenName *string `json:"givenName,omitempty"`
	IdNowDescription *string `json:"idNowDescription,omitempty"`
	Mail *string `json:"mail,omitempty"`
	MemberOf []string `json:"memberOf,omitempty"`
	MsDSPrincipalName *string `json:"msDS-PrincipalName,omitempty"`
	MsNPAllowDialin *string `json:"msNPAllowDialin,omitempty"`
	ObjectClass []string `json:"objectClass,omitempty"`
	ObjectSid *string `json:"objectSid,omitempty"`
	Objectguid *string `json:"objectguid,omitempty"`
	PasswordLastSet *int32 `json:"passwordLastSet,omitempty"`
	PrimaryGroupID *string `json:"primaryGroupID,omitempty"`
	PwdLastSet *string `json:"pwdLastSet,omitempty"`
	SAMAccountName *string `json:"sAMAccountName,omitempty"`
	Sn *string `json:"sn,omitempty"`
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountAttributes AccountAttributes

// NewAccountAttributes instantiates a new AccountAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAttributes() *AccountAttributes {
	this := AccountAttributes{}
	return &this
}

// NewAccountAttributesWithDefaults instantiates a new AccountAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAttributesWithDefaults() *AccountAttributes {
	this := AccountAttributes{}
	return &this
}

// GetAccountFlags returns the AccountFlags field value if set, zero value otherwise.
func (o *AccountAttributes) GetAccountFlags() []string {
	if o == nil || isNil(o.AccountFlags) {
		var ret []string
		return ret
	}
	return o.AccountFlags
}

// GetAccountFlagsOk returns a tuple with the AccountFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetAccountFlagsOk() ([]string, bool) {
	if o == nil || isNil(o.AccountFlags) {
		return nil, false
	}
	return o.AccountFlags, true
}

// HasAccountFlags returns a boolean if a field has been set.
func (o *AccountAttributes) HasAccountFlags() bool {
	if o != nil && !isNil(o.AccountFlags) {
		return true
	}

	return false
}

// SetAccountFlags gets a reference to the given []string and assigns it to the AccountFlags field.
func (o *AccountAttributes) SetAccountFlags(v []string) {
	o.AccountFlags = v
}

// GetCn returns the Cn field value if set, zero value otherwise.
func (o *AccountAttributes) GetCn() string {
	if o == nil || isNil(o.Cn) {
		var ret string
		return ret
	}
	return *o.Cn
}

// GetCnOk returns a tuple with the Cn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetCnOk() (*string, bool) {
	if o == nil || isNil(o.Cn) {
		return nil, false
	}
	return o.Cn, true
}

// HasCn returns a boolean if a field has been set.
func (o *AccountAttributes) HasCn() bool {
	if o != nil && !isNil(o.Cn) {
		return true
	}

	return false
}

// SetCn gets a reference to the given string and assigns it to the Cn field.
func (o *AccountAttributes) SetCn(v string) {
	o.Cn = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AccountAttributes) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AccountAttributes) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AccountAttributes) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise.
func (o *AccountAttributes) GetDistinguishedName() string {
	if o == nil || isNil(o.DistinguishedName) {
		var ret string
		return ret
	}
	return *o.DistinguishedName
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetDistinguishedNameOk() (*string, bool) {
	if o == nil || isNil(o.DistinguishedName) {
		return nil, false
	}
	return o.DistinguishedName, true
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *AccountAttributes) HasDistinguishedName() bool {
	if o != nil && !isNil(o.DistinguishedName) {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given string and assigns it to the DistinguishedName field.
func (o *AccountAttributes) SetDistinguishedName(v string) {
	o.DistinguishedName = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *AccountAttributes) GetDomain() string {
	if o == nil || isNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetDomainOk() (*string, bool) {
	if o == nil || isNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *AccountAttributes) HasDomain() bool {
	if o != nil && !isNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *AccountAttributes) SetDomain(v string) {
	o.Domain = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *AccountAttributes) GetGivenName() string {
	if o == nil || isNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetGivenNameOk() (*string, bool) {
	if o == nil || isNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *AccountAttributes) HasGivenName() bool {
	if o != nil && !isNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *AccountAttributes) SetGivenName(v string) {
	o.GivenName = &v
}

// GetIdNowDescription returns the IdNowDescription field value if set, zero value otherwise.
func (o *AccountAttributes) GetIdNowDescription() string {
	if o == nil || isNil(o.IdNowDescription) {
		var ret string
		return ret
	}
	return *o.IdNowDescription
}

// GetIdNowDescriptionOk returns a tuple with the IdNowDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetIdNowDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.IdNowDescription) {
		return nil, false
	}
	return o.IdNowDescription, true
}

// HasIdNowDescription returns a boolean if a field has been set.
func (o *AccountAttributes) HasIdNowDescription() bool {
	if o != nil && !isNil(o.IdNowDescription) {
		return true
	}

	return false
}

// SetIdNowDescription gets a reference to the given string and assigns it to the IdNowDescription field.
func (o *AccountAttributes) SetIdNowDescription(v string) {
	o.IdNowDescription = &v
}

// GetMail returns the Mail field value if set, zero value otherwise.
func (o *AccountAttributes) GetMail() string {
	if o == nil || isNil(o.Mail) {
		var ret string
		return ret
	}
	return *o.Mail
}

// GetMailOk returns a tuple with the Mail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetMailOk() (*string, bool) {
	if o == nil || isNil(o.Mail) {
		return nil, false
	}
	return o.Mail, true
}

// HasMail returns a boolean if a field has been set.
func (o *AccountAttributes) HasMail() bool {
	if o != nil && !isNil(o.Mail) {
		return true
	}

	return false
}

// SetMail gets a reference to the given string and assigns it to the Mail field.
func (o *AccountAttributes) SetMail(v string) {
	o.Mail = &v
}

// GetMemberOf returns the MemberOf field value if set, zero value otherwise.
func (o *AccountAttributes) GetMemberOf() []string {
	if o == nil || isNil(o.MemberOf) {
		var ret []string
		return ret
	}
	return o.MemberOf
}

// GetMemberOfOk returns a tuple with the MemberOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetMemberOfOk() ([]string, bool) {
	if o == nil || isNil(o.MemberOf) {
		return nil, false
	}
	return o.MemberOf, true
}

// HasMemberOf returns a boolean if a field has been set.
func (o *AccountAttributes) HasMemberOf() bool {
	if o != nil && !isNil(o.MemberOf) {
		return true
	}

	return false
}

// SetMemberOf gets a reference to the given []string and assigns it to the MemberOf field.
func (o *AccountAttributes) SetMemberOf(v []string) {
	o.MemberOf = v
}

// GetMsDSPrincipalName returns the MsDSPrincipalName field value if set, zero value otherwise.
func (o *AccountAttributes) GetMsDSPrincipalName() string {
	if o == nil || isNil(o.MsDSPrincipalName) {
		var ret string
		return ret
	}
	return *o.MsDSPrincipalName
}

// GetMsDSPrincipalNameOk returns a tuple with the MsDSPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetMsDSPrincipalNameOk() (*string, bool) {
	if o == nil || isNil(o.MsDSPrincipalName) {
		return nil, false
	}
	return o.MsDSPrincipalName, true
}

// HasMsDSPrincipalName returns a boolean if a field has been set.
func (o *AccountAttributes) HasMsDSPrincipalName() bool {
	if o != nil && !isNil(o.MsDSPrincipalName) {
		return true
	}

	return false
}

// SetMsDSPrincipalName gets a reference to the given string and assigns it to the MsDSPrincipalName field.
func (o *AccountAttributes) SetMsDSPrincipalName(v string) {
	o.MsDSPrincipalName = &v
}

// GetMsNPAllowDialin returns the MsNPAllowDialin field value if set, zero value otherwise.
func (o *AccountAttributes) GetMsNPAllowDialin() string {
	if o == nil || isNil(o.MsNPAllowDialin) {
		var ret string
		return ret
	}
	return *o.MsNPAllowDialin
}

// GetMsNPAllowDialinOk returns a tuple with the MsNPAllowDialin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetMsNPAllowDialinOk() (*string, bool) {
	if o == nil || isNil(o.MsNPAllowDialin) {
		return nil, false
	}
	return o.MsNPAllowDialin, true
}

// HasMsNPAllowDialin returns a boolean if a field has been set.
func (o *AccountAttributes) HasMsNPAllowDialin() bool {
	if o != nil && !isNil(o.MsNPAllowDialin) {
		return true
	}

	return false
}

// SetMsNPAllowDialin gets a reference to the given string and assigns it to the MsNPAllowDialin field.
func (o *AccountAttributes) SetMsNPAllowDialin(v string) {
	o.MsNPAllowDialin = &v
}

// GetObjectClass returns the ObjectClass field value if set, zero value otherwise.
func (o *AccountAttributes) GetObjectClass() []string {
	if o == nil || isNil(o.ObjectClass) {
		var ret []string
		return ret
	}
	return o.ObjectClass
}

// GetObjectClassOk returns a tuple with the ObjectClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetObjectClassOk() ([]string, bool) {
	if o == nil || isNil(o.ObjectClass) {
		return nil, false
	}
	return o.ObjectClass, true
}

// HasObjectClass returns a boolean if a field has been set.
func (o *AccountAttributes) HasObjectClass() bool {
	if o != nil && !isNil(o.ObjectClass) {
		return true
	}

	return false
}

// SetObjectClass gets a reference to the given []string and assigns it to the ObjectClass field.
func (o *AccountAttributes) SetObjectClass(v []string) {
	o.ObjectClass = v
}

// GetObjectSid returns the ObjectSid field value if set, zero value otherwise.
func (o *AccountAttributes) GetObjectSid() string {
	if o == nil || isNil(o.ObjectSid) {
		var ret string
		return ret
	}
	return *o.ObjectSid
}

// GetObjectSidOk returns a tuple with the ObjectSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetObjectSidOk() (*string, bool) {
	if o == nil || isNil(o.ObjectSid) {
		return nil, false
	}
	return o.ObjectSid, true
}

// HasObjectSid returns a boolean if a field has been set.
func (o *AccountAttributes) HasObjectSid() bool {
	if o != nil && !isNil(o.ObjectSid) {
		return true
	}

	return false
}

// SetObjectSid gets a reference to the given string and assigns it to the ObjectSid field.
func (o *AccountAttributes) SetObjectSid(v string) {
	o.ObjectSid = &v
}

// GetObjectguid returns the Objectguid field value if set, zero value otherwise.
func (o *AccountAttributes) GetObjectguid() string {
	if o == nil || isNil(o.Objectguid) {
		var ret string
		return ret
	}
	return *o.Objectguid
}

// GetObjectguidOk returns a tuple with the Objectguid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetObjectguidOk() (*string, bool) {
	if o == nil || isNil(o.Objectguid) {
		return nil, false
	}
	return o.Objectguid, true
}

// HasObjectguid returns a boolean if a field has been set.
func (o *AccountAttributes) HasObjectguid() bool {
	if o != nil && !isNil(o.Objectguid) {
		return true
	}

	return false
}

// SetObjectguid gets a reference to the given string and assigns it to the Objectguid field.
func (o *AccountAttributes) SetObjectguid(v string) {
	o.Objectguid = &v
}

// GetPasswordLastSet returns the PasswordLastSet field value if set, zero value otherwise.
func (o *AccountAttributes) GetPasswordLastSet() int32 {
	if o == nil || isNil(o.PasswordLastSet) {
		var ret int32
		return ret
	}
	return *o.PasswordLastSet
}

// GetPasswordLastSetOk returns a tuple with the PasswordLastSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetPasswordLastSetOk() (*int32, bool) {
	if o == nil || isNil(o.PasswordLastSet) {
		return nil, false
	}
	return o.PasswordLastSet, true
}

// HasPasswordLastSet returns a boolean if a field has been set.
func (o *AccountAttributes) HasPasswordLastSet() bool {
	if o != nil && !isNil(o.PasswordLastSet) {
		return true
	}

	return false
}

// SetPasswordLastSet gets a reference to the given int32 and assigns it to the PasswordLastSet field.
func (o *AccountAttributes) SetPasswordLastSet(v int32) {
	o.PasswordLastSet = &v
}

// GetPrimaryGroupID returns the PrimaryGroupID field value if set, zero value otherwise.
func (o *AccountAttributes) GetPrimaryGroupID() string {
	if o == nil || isNil(o.PrimaryGroupID) {
		var ret string
		return ret
	}
	return *o.PrimaryGroupID
}

// GetPrimaryGroupIDOk returns a tuple with the PrimaryGroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetPrimaryGroupIDOk() (*string, bool) {
	if o == nil || isNil(o.PrimaryGroupID) {
		return nil, false
	}
	return o.PrimaryGroupID, true
}

// HasPrimaryGroupID returns a boolean if a field has been set.
func (o *AccountAttributes) HasPrimaryGroupID() bool {
	if o != nil && !isNil(o.PrimaryGroupID) {
		return true
	}

	return false
}

// SetPrimaryGroupID gets a reference to the given string and assigns it to the PrimaryGroupID field.
func (o *AccountAttributes) SetPrimaryGroupID(v string) {
	o.PrimaryGroupID = &v
}

// GetPwdLastSet returns the PwdLastSet field value if set, zero value otherwise.
func (o *AccountAttributes) GetPwdLastSet() string {
	if o == nil || isNil(o.PwdLastSet) {
		var ret string
		return ret
	}
	return *o.PwdLastSet
}

// GetPwdLastSetOk returns a tuple with the PwdLastSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetPwdLastSetOk() (*string, bool) {
	if o == nil || isNil(o.PwdLastSet) {
		return nil, false
	}
	return o.PwdLastSet, true
}

// HasPwdLastSet returns a boolean if a field has been set.
func (o *AccountAttributes) HasPwdLastSet() bool {
	if o != nil && !isNil(o.PwdLastSet) {
		return true
	}

	return false
}

// SetPwdLastSet gets a reference to the given string and assigns it to the PwdLastSet field.
func (o *AccountAttributes) SetPwdLastSet(v string) {
	o.PwdLastSet = &v
}

// GetSAMAccountName returns the SAMAccountName field value if set, zero value otherwise.
func (o *AccountAttributes) GetSAMAccountName() string {
	if o == nil || isNil(o.SAMAccountName) {
		var ret string
		return ret
	}
	return *o.SAMAccountName
}

// GetSAMAccountNameOk returns a tuple with the SAMAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetSAMAccountNameOk() (*string, bool) {
	if o == nil || isNil(o.SAMAccountName) {
		return nil, false
	}
	return o.SAMAccountName, true
}

// HasSAMAccountName returns a boolean if a field has been set.
func (o *AccountAttributes) HasSAMAccountName() bool {
	if o != nil && !isNil(o.SAMAccountName) {
		return true
	}

	return false
}

// SetSAMAccountName gets a reference to the given string and assigns it to the SAMAccountName field.
func (o *AccountAttributes) SetSAMAccountName(v string) {
	o.SAMAccountName = &v
}

// GetSn returns the Sn field value if set, zero value otherwise.
func (o *AccountAttributes) GetSn() string {
	if o == nil || isNil(o.Sn) {
		var ret string
		return ret
	}
	return *o.Sn
}

// GetSnOk returns a tuple with the Sn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetSnOk() (*string, bool) {
	if o == nil || isNil(o.Sn) {
		return nil, false
	}
	return o.Sn, true
}

// HasSn returns a boolean if a field has been set.
func (o *AccountAttributes) HasSn() bool {
	if o != nil && !isNil(o.Sn) {
		return true
	}

	return false
}

// SetSn gets a reference to the given string and assigns it to the Sn field.
func (o *AccountAttributes) SetSn(v string) {
	o.Sn = &v
}

// GetUserPrincipalName returns the UserPrincipalName field value if set, zero value otherwise.
func (o *AccountAttributes) GetUserPrincipalName() string {
	if o == nil || isNil(o.UserPrincipalName) {
		var ret string
		return ret
	}
	return *o.UserPrincipalName
}

// GetUserPrincipalNameOk returns a tuple with the UserPrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAttributes) GetUserPrincipalNameOk() (*string, bool) {
	if o == nil || isNil(o.UserPrincipalName) {
		return nil, false
	}
	return o.UserPrincipalName, true
}

// HasUserPrincipalName returns a boolean if a field has been set.
func (o *AccountAttributes) HasUserPrincipalName() bool {
	if o != nil && !isNil(o.UserPrincipalName) {
		return true
	}

	return false
}

// SetUserPrincipalName gets a reference to the given string and assigns it to the UserPrincipalName field.
func (o *AccountAttributes) SetUserPrincipalName(v string) {
	o.UserPrincipalName = &v
}

func (o AccountAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountFlags) {
		toSerialize["accountFlags"] = o.AccountFlags
	}
	if !isNil(o.Cn) {
		toSerialize["cn"] = o.Cn
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.DistinguishedName) {
		toSerialize["distinguishedName"] = o.DistinguishedName
	}
	if !isNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !isNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !isNil(o.IdNowDescription) {
		toSerialize["idNowDescription"] = o.IdNowDescription
	}
	if !isNil(o.Mail) {
		toSerialize["mail"] = o.Mail
	}
	if !isNil(o.MemberOf) {
		toSerialize["memberOf"] = o.MemberOf
	}
	if !isNil(o.MsDSPrincipalName) {
		toSerialize["msDS-PrincipalName"] = o.MsDSPrincipalName
	}
	if !isNil(o.MsNPAllowDialin) {
		toSerialize["msNPAllowDialin"] = o.MsNPAllowDialin
	}
	if !isNil(o.ObjectClass) {
		toSerialize["objectClass"] = o.ObjectClass
	}
	if !isNil(o.ObjectSid) {
		toSerialize["objectSid"] = o.ObjectSid
	}
	if !isNil(o.Objectguid) {
		toSerialize["objectguid"] = o.Objectguid
	}
	if !isNil(o.PasswordLastSet) {
		toSerialize["passwordLastSet"] = o.PasswordLastSet
	}
	if !isNil(o.PrimaryGroupID) {
		toSerialize["primaryGroupID"] = o.PrimaryGroupID
	}
	if !isNil(o.PwdLastSet) {
		toSerialize["pwdLastSet"] = o.PwdLastSet
	}
	if !isNil(o.SAMAccountName) {
		toSerialize["sAMAccountName"] = o.SAMAccountName
	}
	if !isNil(o.Sn) {
		toSerialize["sn"] = o.Sn
	}
	if !isNil(o.UserPrincipalName) {
		toSerialize["userPrincipalName"] = o.UserPrincipalName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AccountAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varAccountAttributes := _AccountAttributes{}

	if err = json.Unmarshal(bytes, &varAccountAttributes); err == nil {
		*o = AccountAttributes(varAccountAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accountFlags")
		delete(additionalProperties, "cn")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "distinguishedName")
		delete(additionalProperties, "domain")
		delete(additionalProperties, "givenName")
		delete(additionalProperties, "idNowDescription")
		delete(additionalProperties, "mail")
		delete(additionalProperties, "memberOf")
		delete(additionalProperties, "msDS-PrincipalName")
		delete(additionalProperties, "msNPAllowDialin")
		delete(additionalProperties, "objectClass")
		delete(additionalProperties, "objectSid")
		delete(additionalProperties, "objectguid")
		delete(additionalProperties, "passwordLastSet")
		delete(additionalProperties, "primaryGroupID")
		delete(additionalProperties, "pwdLastSet")
		delete(additionalProperties, "sAMAccountName")
		delete(additionalProperties, "sn")
		delete(additionalProperties, "userPrincipalName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountAttributes struct {
	value *AccountAttributes
	isSet bool
}

func (v NullableAccountAttributes) Get() *AccountAttributes {
	return v.value
}

func (v *NullableAccountAttributes) Set(val *AccountAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAttributes(val *AccountAttributes) *NullableAccountAttributes {
	return &NullableAccountAttributes{value: val, isSet: true}
}

func (v NullableAccountAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


