/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
	"time"
)

// Approval struct for Approval
type Approval struct {
	Id *string `json:"id,omitempty"`
	Description *string `json:"description,omitempty"`
	AccessProfileName *string `json:"accessProfileName,omitempty"`
	AccessProfileDescription *string `json:"accessProfileDescription,omitempty"`
	AppName *string `json:"appName,omitempty"`
	AppId *string `json:"appId,omitempty"`
	AccessRequestId *string `json:"accessRequestId,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	OwnerName *string `json:"ownerName,omitempty"`
	RequesterId *string `json:"requesterId,omitempty"`
	RequesterName *string `json:"requesterName,omitempty"`
	RequesteeId *string `json:"requesteeId,omitempty"`
	RequesteeName *string `json:"requesteeName,omitempty"`
	State *string `json:"state,omitempty"`
	Completed *bool `json:"completed,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Modified *time.Time `json:"modified,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Approval Approval

// NewApproval instantiates a new Approval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApproval() *Approval {
	this := Approval{}
	return &this
}

// NewApprovalWithDefaults instantiates a new Approval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalWithDefaults() *Approval {
	this := Approval{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Approval) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Approval) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Approval) SetId(v string) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Approval) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Approval) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Approval) SetDescription(v string) {
	o.Description = &v
}

// GetAccessProfileName returns the AccessProfileName field value if set, zero value otherwise.
func (o *Approval) GetAccessProfileName() string {
	if o == nil || isNil(o.AccessProfileName) {
		var ret string
		return ret
	}
	return *o.AccessProfileName
}

// GetAccessProfileNameOk returns a tuple with the AccessProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAccessProfileNameOk() (*string, bool) {
	if o == nil || isNil(o.AccessProfileName) {
		return nil, false
	}
	return o.AccessProfileName, true
}

// HasAccessProfileName returns a boolean if a field has been set.
func (o *Approval) HasAccessProfileName() bool {
	if o != nil && !isNil(o.AccessProfileName) {
		return true
	}

	return false
}

// SetAccessProfileName gets a reference to the given string and assigns it to the AccessProfileName field.
func (o *Approval) SetAccessProfileName(v string) {
	o.AccessProfileName = &v
}

// GetAccessProfileDescription returns the AccessProfileDescription field value if set, zero value otherwise.
func (o *Approval) GetAccessProfileDescription() string {
	if o == nil || isNil(o.AccessProfileDescription) {
		var ret string
		return ret
	}
	return *o.AccessProfileDescription
}

// GetAccessProfileDescriptionOk returns a tuple with the AccessProfileDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAccessProfileDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.AccessProfileDescription) {
		return nil, false
	}
	return o.AccessProfileDescription, true
}

// HasAccessProfileDescription returns a boolean if a field has been set.
func (o *Approval) HasAccessProfileDescription() bool {
	if o != nil && !isNil(o.AccessProfileDescription) {
		return true
	}

	return false
}

// SetAccessProfileDescription gets a reference to the given string and assigns it to the AccessProfileDescription field.
func (o *Approval) SetAccessProfileDescription(v string) {
	o.AccessProfileDescription = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *Approval) GetAppName() string {
	if o == nil || isNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAppNameOk() (*string, bool) {
	if o == nil || isNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *Approval) HasAppName() bool {
	if o != nil && !isNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *Approval) SetAppName(v string) {
	o.AppName = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Approval) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Approval) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *Approval) SetAppId(v string) {
	o.AppId = &v
}

// GetAccessRequestId returns the AccessRequestId field value if set, zero value otherwise.
func (o *Approval) GetAccessRequestId() string {
	if o == nil || isNil(o.AccessRequestId) {
		var ret string
		return ret
	}
	return *o.AccessRequestId
}

// GetAccessRequestIdOk returns a tuple with the AccessRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetAccessRequestIdOk() (*string, bool) {
	if o == nil || isNil(o.AccessRequestId) {
		return nil, false
	}
	return o.AccessRequestId, true
}

// HasAccessRequestId returns a boolean if a field has been set.
func (o *Approval) HasAccessRequestId() bool {
	if o != nil && !isNil(o.AccessRequestId) {
		return true
	}

	return false
}

// SetAccessRequestId gets a reference to the given string and assigns it to the AccessRequestId field.
func (o *Approval) SetAccessRequestId(v string) {
	o.AccessRequestId = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *Approval) GetOwnerId() string {
	if o == nil || isNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetOwnerIdOk() (*string, bool) {
	if o == nil || isNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *Approval) HasOwnerId() bool {
	if o != nil && !isNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *Approval) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *Approval) GetOwnerName() string {
	if o == nil || isNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetOwnerNameOk() (*string, bool) {
	if o == nil || isNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *Approval) HasOwnerName() bool {
	if o != nil && !isNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *Approval) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetRequesterId returns the RequesterId field value if set, zero value otherwise.
func (o *Approval) GetRequesterId() string {
	if o == nil || isNil(o.RequesterId) {
		var ret string
		return ret
	}
	return *o.RequesterId
}

// GetRequesterIdOk returns a tuple with the RequesterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetRequesterIdOk() (*string, bool) {
	if o == nil || isNil(o.RequesterId) {
		return nil, false
	}
	return o.RequesterId, true
}

// HasRequesterId returns a boolean if a field has been set.
func (o *Approval) HasRequesterId() bool {
	if o != nil && !isNil(o.RequesterId) {
		return true
	}

	return false
}

// SetRequesterId gets a reference to the given string and assigns it to the RequesterId field.
func (o *Approval) SetRequesterId(v string) {
	o.RequesterId = &v
}

// GetRequesterName returns the RequesterName field value if set, zero value otherwise.
func (o *Approval) GetRequesterName() string {
	if o == nil || isNil(o.RequesterName) {
		var ret string
		return ret
	}
	return *o.RequesterName
}

// GetRequesterNameOk returns a tuple with the RequesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetRequesterNameOk() (*string, bool) {
	if o == nil || isNil(o.RequesterName) {
		return nil, false
	}
	return o.RequesterName, true
}

// HasRequesterName returns a boolean if a field has been set.
func (o *Approval) HasRequesterName() bool {
	if o != nil && !isNil(o.RequesterName) {
		return true
	}

	return false
}

// SetRequesterName gets a reference to the given string and assigns it to the RequesterName field.
func (o *Approval) SetRequesterName(v string) {
	o.RequesterName = &v
}

// GetRequesteeId returns the RequesteeId field value if set, zero value otherwise.
func (o *Approval) GetRequesteeId() string {
	if o == nil || isNil(o.RequesteeId) {
		var ret string
		return ret
	}
	return *o.RequesteeId
}

// GetRequesteeIdOk returns a tuple with the RequesteeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetRequesteeIdOk() (*string, bool) {
	if o == nil || isNil(o.RequesteeId) {
		return nil, false
	}
	return o.RequesteeId, true
}

// HasRequesteeId returns a boolean if a field has been set.
func (o *Approval) HasRequesteeId() bool {
	if o != nil && !isNil(o.RequesteeId) {
		return true
	}

	return false
}

// SetRequesteeId gets a reference to the given string and assigns it to the RequesteeId field.
func (o *Approval) SetRequesteeId(v string) {
	o.RequesteeId = &v
}

// GetRequesteeName returns the RequesteeName field value if set, zero value otherwise.
func (o *Approval) GetRequesteeName() string {
	if o == nil || isNil(o.RequesteeName) {
		var ret string
		return ret
	}
	return *o.RequesteeName
}

// GetRequesteeNameOk returns a tuple with the RequesteeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetRequesteeNameOk() (*string, bool) {
	if o == nil || isNil(o.RequesteeName) {
		return nil, false
	}
	return o.RequesteeName, true
}

// HasRequesteeName returns a boolean if a field has been set.
func (o *Approval) HasRequesteeName() bool {
	if o != nil && !isNil(o.RequesteeName) {
		return true
	}

	return false
}

// SetRequesteeName gets a reference to the given string and assigns it to the RequesteeName field.
func (o *Approval) SetRequesteeName(v string) {
	o.RequesteeName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Approval) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Approval) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Approval) SetState(v string) {
	o.State = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *Approval) GetCompleted() bool {
	if o == nil || isNil(o.Completed) {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetCompletedOk() (*bool, bool) {
	if o == nil || isNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *Approval) HasCompleted() bool {
	if o != nil && !isNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *Approval) SetCompleted(v bool) {
	o.Completed = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Approval) GetCreated() time.Time {
	if o == nil || isNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetCreatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Approval) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Approval) SetCreated(v time.Time) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *Approval) GetModified() time.Time {
	if o == nil || isNil(o.Modified) {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approval) GetModifiedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *Approval) HasModified() bool {
	if o != nil && !isNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *Approval) SetModified(v time.Time) {
	o.Modified = &v
}

func (o Approval) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.AccessProfileName) {
		toSerialize["accessProfileName"] = o.AccessProfileName
	}
	if !isNil(o.AccessProfileDescription) {
		toSerialize["accessProfileDescription"] = o.AccessProfileDescription
	}
	if !isNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !isNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !isNil(o.AccessRequestId) {
		toSerialize["accessRequestId"] = o.AccessRequestId
	}
	if !isNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !isNil(o.OwnerName) {
		toSerialize["ownerName"] = o.OwnerName
	}
	if !isNil(o.RequesterId) {
		toSerialize["requesterId"] = o.RequesterId
	}
	if !isNil(o.RequesterName) {
		toSerialize["requesterName"] = o.RequesterName
	}
	if !isNil(o.RequesteeId) {
		toSerialize["requesteeId"] = o.RequesteeId
	}
	if !isNil(o.RequesteeName) {
		toSerialize["requesteeName"] = o.RequesteeName
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !isNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *Approval) UnmarshalJSON(bytes []byte) (err error) {
	varApproval := _Approval{}

	if err = json.Unmarshal(bytes, &varApproval); err == nil {
		*o = Approval(varApproval)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "description")
		delete(additionalProperties, "accessProfileName")
		delete(additionalProperties, "accessProfileDescription")
		delete(additionalProperties, "appName")
		delete(additionalProperties, "appId")
		delete(additionalProperties, "accessRequestId")
		delete(additionalProperties, "ownerId")
		delete(additionalProperties, "ownerName")
		delete(additionalProperties, "requesterId")
		delete(additionalProperties, "requesterName")
		delete(additionalProperties, "requesteeId")
		delete(additionalProperties, "requesteeName")
		delete(additionalProperties, "state")
		delete(additionalProperties, "completed")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApproval struct {
	value *Approval
	isSet bool
}

func (v NullableApproval) Get() *Approval {
	return v.value
}

func (v *NullableApproval) Set(val *Approval) {
	v.value = val
	v.isSet = true
}

func (v NullableApproval) IsSet() bool {
	return v.isSet
}

func (v *NullableApproval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApproval(val *Approval) *NullableApproval {
	return &NullableApproval{value: val, isSet: true}
}

func (v NullableApproval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApproval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


