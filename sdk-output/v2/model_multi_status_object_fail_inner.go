/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// MultiStatusObjectFailInner struct for MultiStatusObjectFailInner
type MultiStatusObjectFailInner struct {
	Id *string `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MultiStatusObjectFailInner MultiStatusObjectFailInner

// NewMultiStatusObjectFailInner instantiates a new MultiStatusObjectFailInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiStatusObjectFailInner() *MultiStatusObjectFailInner {
	this := MultiStatusObjectFailInner{}
	return &this
}

// NewMultiStatusObjectFailInnerWithDefaults instantiates a new MultiStatusObjectFailInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiStatusObjectFailInnerWithDefaults() *MultiStatusObjectFailInner {
	this := MultiStatusObjectFailInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MultiStatusObjectFailInner) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiStatusObjectFailInner) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MultiStatusObjectFailInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MultiStatusObjectFailInner) SetId(v string) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MultiStatusObjectFailInner) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiStatusObjectFailInner) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *MultiStatusObjectFailInner) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MultiStatusObjectFailInner) SetMessage(v string) {
	o.Message = &v
}

func (o MultiStatusObjectFailInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *MultiStatusObjectFailInner) UnmarshalJSON(bytes []byte) (err error) {
	varMultiStatusObjectFailInner := _MultiStatusObjectFailInner{}

	if err = json.Unmarshal(bytes, &varMultiStatusObjectFailInner); err == nil {
		*o = MultiStatusObjectFailInner(varMultiStatusObjectFailInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMultiStatusObjectFailInner struct {
	value *MultiStatusObjectFailInner
	isSet bool
}

func (v NullableMultiStatusObjectFailInner) Get() *MultiStatusObjectFailInner {
	return v.value
}

func (v *NullableMultiStatusObjectFailInner) Set(val *MultiStatusObjectFailInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiStatusObjectFailInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiStatusObjectFailInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiStatusObjectFailInner(val *MultiStatusObjectFailInner) *NullableMultiStatusObjectFailInner {
	return &NullableMultiStatusObjectFailInner{value: val, isSet: true}
}

func (v NullableMultiStatusObjectFailInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiStatusObjectFailInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


