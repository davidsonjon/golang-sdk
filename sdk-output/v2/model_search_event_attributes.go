/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointv2sdk

import (
	"encoding/json"
)

// SearchEventAttributes Dynamic schema
type SearchEventAttributes struct {
	Error *string `json:"error,omitempty"`
	Reviewer *SearchEventAttributesReviewer `json:"reviewer,omitempty"`
	Requester *SearchEventAttributesReviewer `json:"requester,omitempty"`
	OldValue *string `json:"oldValue,omitempty"`
	NewValue *string `json:"newValue,omitempty"`
	AccountName *string `json:"accountName,omitempty"`
	SourceName *string `json:"sourceName,omitempty"`
	SSO *SearchEventAttributesSSO `json:"SSO,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SearchEventAttributes SearchEventAttributes

// NewSearchEventAttributes instantiates a new SearchEventAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchEventAttributes() *SearchEventAttributes {
	this := SearchEventAttributes{}
	return &this
}

// NewSearchEventAttributesWithDefaults instantiates a new SearchEventAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchEventAttributesWithDefaults() *SearchEventAttributes {
	this := SearchEventAttributes{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetError() string {
	if o == nil || isNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetErrorOk() (*string, bool) {
	if o == nil || isNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *SearchEventAttributes) SetError(v string) {
	o.Error = &v
}

// GetReviewer returns the Reviewer field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetReviewer() SearchEventAttributesReviewer {
	if o == nil || isNil(o.Reviewer) {
		var ret SearchEventAttributesReviewer
		return ret
	}
	return *o.Reviewer
}

// GetReviewerOk returns a tuple with the Reviewer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetReviewerOk() (*SearchEventAttributesReviewer, bool) {
	if o == nil || isNil(o.Reviewer) {
		return nil, false
	}
	return o.Reviewer, true
}

// HasReviewer returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasReviewer() bool {
	if o != nil && !isNil(o.Reviewer) {
		return true
	}

	return false
}

// SetReviewer gets a reference to the given SearchEventAttributesReviewer and assigns it to the Reviewer field.
func (o *SearchEventAttributes) SetReviewer(v SearchEventAttributesReviewer) {
	o.Reviewer = &v
}

// GetRequester returns the Requester field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetRequester() SearchEventAttributesReviewer {
	if o == nil || isNil(o.Requester) {
		var ret SearchEventAttributesReviewer
		return ret
	}
	return *o.Requester
}

// GetRequesterOk returns a tuple with the Requester field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetRequesterOk() (*SearchEventAttributesReviewer, bool) {
	if o == nil || isNil(o.Requester) {
		return nil, false
	}
	return o.Requester, true
}

// HasRequester returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasRequester() bool {
	if o != nil && !isNil(o.Requester) {
		return true
	}

	return false
}

// SetRequester gets a reference to the given SearchEventAttributesReviewer and assigns it to the Requester field.
func (o *SearchEventAttributes) SetRequester(v SearchEventAttributesReviewer) {
	o.Requester = &v
}

// GetOldValue returns the OldValue field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetOldValue() string {
	if o == nil || isNil(o.OldValue) {
		var ret string
		return ret
	}
	return *o.OldValue
}

// GetOldValueOk returns a tuple with the OldValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetOldValueOk() (*string, bool) {
	if o == nil || isNil(o.OldValue) {
		return nil, false
	}
	return o.OldValue, true
}

// HasOldValue returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasOldValue() bool {
	if o != nil && !isNil(o.OldValue) {
		return true
	}

	return false
}

// SetOldValue gets a reference to the given string and assigns it to the OldValue field.
func (o *SearchEventAttributes) SetOldValue(v string) {
	o.OldValue = &v
}

// GetNewValue returns the NewValue field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetNewValue() string {
	if o == nil || isNil(o.NewValue) {
		var ret string
		return ret
	}
	return *o.NewValue
}

// GetNewValueOk returns a tuple with the NewValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetNewValueOk() (*string, bool) {
	if o == nil || isNil(o.NewValue) {
		return nil, false
	}
	return o.NewValue, true
}

// HasNewValue returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasNewValue() bool {
	if o != nil && !isNil(o.NewValue) {
		return true
	}

	return false
}

// SetNewValue gets a reference to the given string and assigns it to the NewValue field.
func (o *SearchEventAttributes) SetNewValue(v string) {
	o.NewValue = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetAccountName() string {
	if o == nil || isNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetAccountNameOk() (*string, bool) {
	if o == nil || isNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasAccountName() bool {
	if o != nil && !isNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *SearchEventAttributes) SetAccountName(v string) {
	o.AccountName = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetSourceName() string {
	if o == nil || isNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetSourceNameOk() (*string, bool) {
	if o == nil || isNil(o.SourceName) {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasSourceName() bool {
	if o != nil && !isNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *SearchEventAttributes) SetSourceName(v string) {
	o.SourceName = &v
}

// GetSSO returns the SSO field value if set, zero value otherwise.
func (o *SearchEventAttributes) GetSSO() SearchEventAttributesSSO {
	if o == nil || isNil(o.SSO) {
		var ret SearchEventAttributesSSO
		return ret
	}
	return *o.SSO
}

// GetSSOOk returns a tuple with the SSO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchEventAttributes) GetSSOOk() (*SearchEventAttributesSSO, bool) {
	if o == nil || isNil(o.SSO) {
		return nil, false
	}
	return o.SSO, true
}

// HasSSO returns a boolean if a field has been set.
func (o *SearchEventAttributes) HasSSO() bool {
	if o != nil && !isNil(o.SSO) {
		return true
	}

	return false
}

// SetSSO gets a reference to the given SearchEventAttributesSSO and assigns it to the SSO field.
func (o *SearchEventAttributes) SetSSO(v SearchEventAttributesSSO) {
	o.SSO = &v
}

func (o SearchEventAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !isNil(o.Reviewer) {
		toSerialize["reviewer"] = o.Reviewer
	}
	if !isNil(o.Requester) {
		toSerialize["requester"] = o.Requester
	}
	if !isNil(o.OldValue) {
		toSerialize["oldValue"] = o.OldValue
	}
	if !isNil(o.NewValue) {
		toSerialize["newValue"] = o.NewValue
	}
	if !isNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !isNil(o.SourceName) {
		toSerialize["sourceName"] = o.SourceName
	}
	if !isNil(o.SSO) {
		toSerialize["SSO"] = o.SSO
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SearchEventAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varSearchEventAttributes := _SearchEventAttributes{}

	if err = json.Unmarshal(bytes, &varSearchEventAttributes); err == nil {
		*o = SearchEventAttributes(varSearchEventAttributes)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "error")
		delete(additionalProperties, "reviewer")
		delete(additionalProperties, "requester")
		delete(additionalProperties, "oldValue")
		delete(additionalProperties, "newValue")
		delete(additionalProperties, "accountName")
		delete(additionalProperties, "sourceName")
		delete(additionalProperties, "SSO")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchEventAttributes struct {
	value *SearchEventAttributes
	isSet bool
}

func (v NullableSearchEventAttributes) Get() *SearchEventAttributes {
	return v.value
}

func (v *NullableSearchEventAttributes) Set(val *SearchEventAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchEventAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchEventAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchEventAttributes(val *SearchEventAttributes) *NullableSearchEventAttributes {
	return &NullableSearchEventAttributes{value: val, isSet: true}
}

func (v NullableSearchEventAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchEventAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


