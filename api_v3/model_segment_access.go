/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
)

// checks if the Segment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SegmentAccess{}

// Segment struct for Segment
type SegmentAccess struct {
	// The segment's ID.
	Assignments *[]SegmentAccessItem `json:"assignments"`
	// The segment's business name.
	Removals *[]SegmentAccessItem `json:"removals"`
}

type SegmentAccessItem struct {
	// The segment's ID.
	Id *string `json:"id"`
	// The segment's business name.
	Type *string `json:"type"`
}

type _SegmentAccess SegmentAccess

func (o SegmentAccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SegmentAccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Assignments) {
		toSerialize["assignments"] = o.Assignments
	}
	if !isNil(o.Removals) {
		toSerialize["removals"] = o.Removals
	}

	return toSerialize, nil
}

func (o *SegmentAccess) UnmarshalJSON(bytes []byte) (err error) {
	varSegment := _SegmentAccess{}

	if err = json.Unmarshal(bytes, &varSegment); err == nil {
		*o = SegmentAccess(varSegment)
	}

	return err
}
