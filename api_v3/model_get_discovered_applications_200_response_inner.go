/*
Identity Security Cloud V3 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"fmt"
)

// GetDiscoveredApplications200ResponseInner - struct for GetDiscoveredApplications200ResponseInner
type GetDiscoveredApplications200ResponseInner struct {
	ArrayOfFullDiscoveredApplicationsInner *[]FullDiscoveredApplicationsInner
	ArrayOfSlimDiscoveredApplicationsInner *[]SlimDiscoveredApplicationsInner
}

// []FullDiscoveredApplicationsInnerAsGetDiscoveredApplications200ResponseInner is a convenience function that returns []FullDiscoveredApplicationsInner wrapped in GetDiscoveredApplications200ResponseInner
func ArrayOfFullDiscoveredApplicationsInnerAsGetDiscoveredApplications200ResponseInner(v *[]FullDiscoveredApplicationsInner) GetDiscoveredApplications200ResponseInner {
	return GetDiscoveredApplications200ResponseInner{
		ArrayOfFullDiscoveredApplicationsInner: v,
	}
}

// []SlimDiscoveredApplicationsInnerAsGetDiscoveredApplications200ResponseInner is a convenience function that returns []SlimDiscoveredApplicationsInner wrapped in GetDiscoveredApplications200ResponseInner
func ArrayOfSlimDiscoveredApplicationsInnerAsGetDiscoveredApplications200ResponseInner(v *[]SlimDiscoveredApplicationsInner) GetDiscoveredApplications200ResponseInner {
	return GetDiscoveredApplications200ResponseInner{
		ArrayOfSlimDiscoveredApplicationsInner: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetDiscoveredApplications200ResponseInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ArrayOfFullDiscoveredApplicationsInner
	err = newStrictDecoder(data).Decode(&dst.ArrayOfFullDiscoveredApplicationsInner)
	if err == nil {
		jsonArrayOfFullDiscoveredApplicationsInner, _ := json.Marshal(dst.ArrayOfFullDiscoveredApplicationsInner)
		if string(jsonArrayOfFullDiscoveredApplicationsInner) == "{}" { // empty struct
			dst.ArrayOfFullDiscoveredApplicationsInner = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfFullDiscoveredApplicationsInner = nil
	}

	// try to unmarshal data into ArrayOfSlimDiscoveredApplicationsInner
	err = newStrictDecoder(data).Decode(&dst.ArrayOfSlimDiscoveredApplicationsInner)
	if err == nil {
		jsonArrayOfSlimDiscoveredApplicationsInner, _ := json.Marshal(dst.ArrayOfSlimDiscoveredApplicationsInner)
		if string(jsonArrayOfSlimDiscoveredApplicationsInner) == "{}" { // empty struct
			dst.ArrayOfSlimDiscoveredApplicationsInner = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfSlimDiscoveredApplicationsInner = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ArrayOfFullDiscoveredApplicationsInner = nil
		dst.ArrayOfSlimDiscoveredApplicationsInner = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetDiscoveredApplications200ResponseInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetDiscoveredApplications200ResponseInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetDiscoveredApplications200ResponseInner) MarshalJSON() ([]byte, error) {
	if src.ArrayOfFullDiscoveredApplicationsInner != nil {
		return json.Marshal(&src.ArrayOfFullDiscoveredApplicationsInner)
	}

	if src.ArrayOfSlimDiscoveredApplicationsInner != nil {
		return json.Marshal(&src.ArrayOfSlimDiscoveredApplicationsInner)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetDiscoveredApplications200ResponseInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ArrayOfFullDiscoveredApplicationsInner != nil {
		return obj.ArrayOfFullDiscoveredApplicationsInner
	}

	if obj.ArrayOfSlimDiscoveredApplicationsInner != nil {
		return obj.ArrayOfSlimDiscoveredApplicationsInner
	}

	// all schemas are nil
	return nil
}

type NullableGetDiscoveredApplications200ResponseInner struct {
	value *GetDiscoveredApplications200ResponseInner
	isSet bool
}

func (v NullableGetDiscoveredApplications200ResponseInner) Get() *GetDiscoveredApplications200ResponseInner {
	return v.value
}

func (v *NullableGetDiscoveredApplications200ResponseInner) Set(val *GetDiscoveredApplications200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDiscoveredApplications200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDiscoveredApplications200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDiscoveredApplications200ResponseInner(val *GetDiscoveredApplications200ResponseInner) *NullableGetDiscoveredApplications200ResponseInner {
	return &NullableGetDiscoveredApplications200ResponseInner{value: val, isSet: true}
}

func (v NullableGetDiscoveredApplications200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDiscoveredApplications200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


