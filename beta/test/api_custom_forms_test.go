/*
IdentityNow Beta API

Testing CustomFormsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package beta

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/sailpoint-oss/golang-sdk"
)

func Test_beta_CustomFormsApiService(t *testing.T) {

	configuration := openapiclient.NewDefaultConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CustomFormsApiService CreateFormDefinition", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.CreateFormDefinition(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService CreateFormDefinitionDynamicSchema", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.CreateFormDefinitionDynamicSchema(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService CreateFormInstance", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.CreateFormInstance(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService DeleteFormDefinition", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formDefinitionID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.DeleteFormDefinition(context.Background(), formDefinitionID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService ExportFormDefinitionsByTenant", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.ExportFormDefinitionsByTenant(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService GetFormDefinitionByKey", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formDefinitionID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.GetFormDefinitionByKey(context.Background(), formDefinitionID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService GetFormInstanceByKey", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formInstanceID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.GetFormInstanceByKey(context.Background(), formInstanceID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService ImportFormDefinitions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.ImportFormDefinitions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService PatchFormDefinition", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formDefinitionID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.PatchFormDefinition(context.Background(), formDefinitionID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService PatchFormInstance", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formInstanceID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.PatchFormInstance(context.Background(), formInstanceID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService SearchFormDefinitionsByTenant", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.SearchFormDefinitionsByTenant(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService SearchFormElementDataByElementID", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formInstanceID string
		var formElementID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.SearchFormElementDataByElementID(context.Background(), formInstanceID, formElementID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService SearchFormInstancesByTenant", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.SearchFormInstancesByTenant(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService SearchPreDefinedSelectOptions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.SearchPreDefinedSelectOptions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomFormsApiService ShowPreviewDataSource", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var formDefinitionID string

		resp, httpRes, err := apiClient.BETA.CustomFormsApi.ShowPreviewDataSource(context.Background(), formDefinitionID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
