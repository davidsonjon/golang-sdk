/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package beta

import (
	"encoding/json"
)

// checks if the TransformUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransformUpdate{}

// TransformUpdate The representation of an internally- or customer-defined transform.
type TransformUpdate struct {
	Attributes TransformUpdateAttributes `json:"attributes"`
	AdditionalProperties map[string]interface{}
}

type _TransformUpdate TransformUpdate

// NewTransformUpdate instantiates a new TransformUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransformUpdate(attributes TransformUpdateAttributes) *TransformUpdate {
	this := TransformUpdate{}
	this.Attributes = attributes
	return &this
}

// NewTransformUpdateWithDefaults instantiates a new TransformUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransformUpdateWithDefaults() *TransformUpdate {
	this := TransformUpdate{}
	return &this
}

// GetAttributes returns the Attributes field value
func (o *TransformUpdate) GetAttributes() TransformUpdateAttributes {
	if o == nil {
		var ret TransformUpdateAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *TransformUpdate) GetAttributesOk() (*TransformUpdateAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *TransformUpdate) SetAttributes(v TransformUpdateAttributes) {
	o.Attributes = v
}

func (o TransformUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransformUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributes"] = o.Attributes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TransformUpdate) UnmarshalJSON(bytes []byte) (err error) {
	varTransformUpdate := _TransformUpdate{}

	if err = json.Unmarshal(bytes, &varTransformUpdate); err == nil {
		*o = TransformUpdate(varTransformUpdate)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransformUpdate struct {
	value *TransformUpdate
	isSet bool
}

func (v NullableTransformUpdate) Get() *TransformUpdate {
	return v.value
}

func (v *NullableTransformUpdate) Set(val *TransformUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformUpdate(val *TransformUpdate) *NullableTransformUpdate {
	return &NullableTransformUpdate{value: val, isSet: true}
}

func (v NullableTransformUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


