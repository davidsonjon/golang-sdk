/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package beta

import (
	"encoding/json"
)

// checks if the TransformReadAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransformReadAllOf{}

// TransformReadAllOf struct for TransformReadAllOf
type TransformReadAllOf struct {
	// Unique ID of this transform
	Id string `json:"id"`
	// Indicates whether this is an internal SailPoint-created transform or a customer-created transform
	Internal *bool `json:"internal,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransformReadAllOf TransformReadAllOf

// NewTransformReadAllOf instantiates a new TransformReadAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransformReadAllOf(id string) *TransformReadAllOf {
	this := TransformReadAllOf{}
	this.Id = id
	var internal bool = false
	this.Internal = &internal
	return &this
}

// NewTransformReadAllOfWithDefaults instantiates a new TransformReadAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransformReadAllOfWithDefaults() *TransformReadAllOf {
	this := TransformReadAllOf{}
	var internal bool = false
	this.Internal = &internal
	return &this
}

// GetId returns the Id field value
func (o *TransformReadAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TransformReadAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TransformReadAllOf) SetId(v string) {
	o.Id = v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *TransformReadAllOf) GetInternal() bool {
	if o == nil || isNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformReadAllOf) GetInternalOk() (*bool, bool) {
	if o == nil || isNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *TransformReadAllOf) HasInternal() bool {
	if o != nil && !isNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *TransformReadAllOf) SetInternal(v bool) {
	o.Internal = &v
}

func (o TransformReadAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransformReadAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !isNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TransformReadAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varTransformReadAllOf := _TransformReadAllOf{}

	if err = json.Unmarshal(bytes, &varTransformReadAllOf); err == nil {
		*o = TransformReadAllOf(varTransformReadAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "internal")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransformReadAllOf struct {
	value *TransformReadAllOf
	isSet bool
}

func (v NullableTransformReadAllOf) Get() *TransformReadAllOf {
	return v.value
}

func (v *NullableTransformReadAllOf) Set(val *TransformReadAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformReadAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformReadAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformReadAllOf(val *TransformReadAllOf) *NullableTransformReadAllOf {
	return &NullableTransformReadAllOf{value: val, isSet: true}
}

func (v NullableTransformReadAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformReadAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


