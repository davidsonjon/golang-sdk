/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the ProvisioningConfig1PlanInitializerScript type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningConfig1PlanInitializerScript{}

// ProvisioningConfig1PlanInitializerScript This is a reference to a plan initializer script.
type ProvisioningConfig1PlanInitializerScript struct {
	// This is a Rule that allows provisioning instruction changes.
	Source *string `json:"source,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningConfig1PlanInitializerScript ProvisioningConfig1PlanInitializerScript

// NewProvisioningConfig1PlanInitializerScript instantiates a new ProvisioningConfig1PlanInitializerScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningConfig1PlanInitializerScript() *ProvisioningConfig1PlanInitializerScript {
	this := ProvisioningConfig1PlanInitializerScript{}
	return &this
}

// NewProvisioningConfig1PlanInitializerScriptWithDefaults instantiates a new ProvisioningConfig1PlanInitializerScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningConfig1PlanInitializerScriptWithDefaults() *ProvisioningConfig1PlanInitializerScript {
	this := ProvisioningConfig1PlanInitializerScript{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ProvisioningConfig1PlanInitializerScript) GetSource() string {
	if o == nil || isNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningConfig1PlanInitializerScript) GetSourceOk() (*string, bool) {
	if o == nil || isNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ProvisioningConfig1PlanInitializerScript) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *ProvisioningConfig1PlanInitializerScript) SetSource(v string) {
	o.Source = &v
}

func (o ProvisioningConfig1PlanInitializerScript) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningConfig1PlanInitializerScript) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningConfig1PlanInitializerScript) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningConfig1PlanInitializerScript := _ProvisioningConfig1PlanInitializerScript{}

	if err = json.Unmarshal(bytes, &varProvisioningConfig1PlanInitializerScript); err == nil {
	*o = ProvisioningConfig1PlanInitializerScript(varProvisioningConfig1PlanInitializerScript)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningConfig1PlanInitializerScript struct {
	value *ProvisioningConfig1PlanInitializerScript
	isSet bool
}

func (v NullableProvisioningConfig1PlanInitializerScript) Get() *ProvisioningConfig1PlanInitializerScript {
	return v.value
}

func (v *NullableProvisioningConfig1PlanInitializerScript) Set(val *ProvisioningConfig1PlanInitializerScript) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningConfig1PlanInitializerScript) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningConfig1PlanInitializerScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningConfig1PlanInitializerScript(val *ProvisioningConfig1PlanInitializerScript) *NullableProvisioningConfig1PlanInitializerScript {
	return &NullableProvisioningConfig1PlanInitializerScript{value: val, isSet: true}
}

func (v NullableProvisioningConfig1PlanInitializerScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningConfig1PlanInitializerScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


