/*
Identity Security Cloud V2024 API

Testing IAIOutliersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api_v2024

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/sailpoint-oss/golang-sdk/v2"
)

func Test_api_v2024_IAIOutliersAPIService(t *testing.T) {

	configuration := openapiclient.NewDefaultConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test IAIOutliersAPIService ExportOutliersZip", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.ExportOutliersZip(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService GetIdentityOutlierSnapshots", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.GetIdentityOutlierSnapshots(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService GetIdentityOutliers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.GetIdentityOutliers(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService GetLatestIdentityOutlierSnapshots", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.GetLatestIdentityOutlierSnapshots(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService GetOutlierContributingFeatureSummary", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var outlierFeatureId string

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.GetOutlierContributingFeatureSummary(context.Background(), outlierFeatureId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService GetPeerGroupOutliersContributingFeatures", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var outlierId string

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.GetPeerGroupOutliersContributingFeatures(context.Background(), outlierId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService IgnoreIdentityOutliers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.API_V2024.IAIOutliersAPI.IgnoreIdentityOutliers(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService ListOutliersContributingFeatureAccessItems", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var outlierId string
		var contributingFeatureName string

		resp, httpRes, err := apiClient.API_V2024.IAIOutliersAPI.ListOutliersContributingFeatureAccessItems(context.Background(), outlierId, contributingFeatureName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IAIOutliersAPIService UnIgnoreIdentityOutliers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.API_V2024.IAIOutliersAPI.UnIgnoreIdentityOutliers(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
