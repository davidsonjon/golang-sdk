/*
IdentityNow cc (private) APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cc

import (
	"encoding/json"
)

// checks if the UpdateClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateClusterRequest{}

// UpdateClusterRequest struct for UpdateClusterRequest
type UpdateClusterRequest struct {
	// The ID of the cluster to update
	Id *string `json:"id,omitempty"`
	// The GMT offset for the timezone the cluster operates with
	GmtOffset *string `json:"gmtOffset,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateClusterRequest UpdateClusterRequest

// NewUpdateClusterRequest instantiates a new UpdateClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClusterRequest() *UpdateClusterRequest {
	this := UpdateClusterRequest{}
	return &this
}

// NewUpdateClusterRequestWithDefaults instantiates a new UpdateClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClusterRequestWithDefaults() *UpdateClusterRequest {
	this := UpdateClusterRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateClusterRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateClusterRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateClusterRequest) SetId(v string) {
	o.Id = &v
}

// GetGmtOffset returns the GmtOffset field value if set, zero value otherwise.
func (o *UpdateClusterRequest) GetGmtOffset() string {
	if o == nil || isNil(o.GmtOffset) {
		var ret string
		return ret
	}
	return *o.GmtOffset
}

// GetGmtOffsetOk returns a tuple with the GmtOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterRequest) GetGmtOffsetOk() (*string, bool) {
	if o == nil || isNil(o.GmtOffset) {
		return nil, false
	}
	return o.GmtOffset, true
}

// HasGmtOffset returns a boolean if a field has been set.
func (o *UpdateClusterRequest) HasGmtOffset() bool {
	if o != nil && !isNil(o.GmtOffset) {
		return true
	}

	return false
}

// SetGmtOffset gets a reference to the given string and assigns it to the GmtOffset field.
func (o *UpdateClusterRequest) SetGmtOffset(v string) {
	o.GmtOffset = &v
}

func (o UpdateClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.GmtOffset) {
		toSerialize["gmtOffset"] = o.GmtOffset
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateClusterRequest) UnmarshalJSON(bytes []byte) (err error) {
	varUpdateClusterRequest := _UpdateClusterRequest{}

	if err = json.Unmarshal(bytes, &varUpdateClusterRequest); err == nil {
		*o = UpdateClusterRequest(varUpdateClusterRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "gmtOffset")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateClusterRequest struct {
	value *UpdateClusterRequest
	isSet bool
}

func (v NullableUpdateClusterRequest) Get() *UpdateClusterRequest {
	return v.value
}

func (v *NullableUpdateClusterRequest) Set(val *UpdateClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClusterRequest(val *UpdateClusterRequest) *NullableUpdateClusterRequest {
	return &NullableUpdateClusterRequest{value: val, isSet: true}
}

func (v NullableUpdateClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


