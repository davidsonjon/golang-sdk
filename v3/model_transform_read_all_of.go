/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the TransformReadAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransformReadAllOf{}

// TransformReadAllOf struct for TransformReadAllOf
type TransformReadAllOf struct {
	// Unique ID of this transform
	Id *string `json:"id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransformReadAllOf TransformReadAllOf

// NewTransformReadAllOf instantiates a new TransformReadAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransformReadAllOf() *TransformReadAllOf {
	this := TransformReadAllOf{}
	return &this
}

// NewTransformReadAllOfWithDefaults instantiates a new TransformReadAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransformReadAllOfWithDefaults() *TransformReadAllOf {
	this := TransformReadAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransformReadAllOf) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformReadAllOf) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransformReadAllOf) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TransformReadAllOf) SetId(v string) {
	o.Id = &v
}

func (o TransformReadAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransformReadAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TransformReadAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varTransformReadAllOf := _TransformReadAllOf{}

	if err = json.Unmarshal(bytes, &varTransformReadAllOf); err == nil {
		*o = TransformReadAllOf(varTransformReadAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransformReadAllOf struct {
	value *TransformReadAllOf
	isSet bool
}

func (v NullableTransformReadAllOf) Get() *TransformReadAllOf {
	return v.value
}

func (v *NullableTransformReadAllOf) Set(val *TransformReadAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformReadAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformReadAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformReadAllOf(val *TransformReadAllOf) *NullableTransformReadAllOf {
	return &NullableTransformReadAllOf{value: val, isSet: true}
}

func (v NullableTransformReadAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformReadAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


