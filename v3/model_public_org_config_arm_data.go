/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// checks if the PublicOrgConfigArmData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicOrgConfigArmData{}

// PublicOrgConfigArmData Arm Data for the org configuration.
type PublicOrgConfigArmData struct {
	// ARM Customer ID
	ArmCustomerId NullableString `json:"armCustomerId,omitempty"`
	// ARM SSO URL
	ArmSsoUrl NullableString `json:"armSsoUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PublicOrgConfigArmData PublicOrgConfigArmData

// NewPublicOrgConfigArmData instantiates a new PublicOrgConfigArmData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicOrgConfigArmData() *PublicOrgConfigArmData {
	this := PublicOrgConfigArmData{}
	return &this
}

// NewPublicOrgConfigArmDataWithDefaults instantiates a new PublicOrgConfigArmData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicOrgConfigArmDataWithDefaults() *PublicOrgConfigArmData {
	this := PublicOrgConfigArmData{}
	return &this
}

// GetArmCustomerId returns the ArmCustomerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicOrgConfigArmData) GetArmCustomerId() string {
	if o == nil || isNil(o.ArmCustomerId.Get()) {
		var ret string
		return ret
	}
	return *o.ArmCustomerId.Get()
}

// GetArmCustomerIdOk returns a tuple with the ArmCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicOrgConfigArmData) GetArmCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArmCustomerId.Get(), o.ArmCustomerId.IsSet()
}

// HasArmCustomerId returns a boolean if a field has been set.
func (o *PublicOrgConfigArmData) HasArmCustomerId() bool {
	if o != nil && o.ArmCustomerId.IsSet() {
		return true
	}

	return false
}

// SetArmCustomerId gets a reference to the given NullableString and assigns it to the ArmCustomerId field.
func (o *PublicOrgConfigArmData) SetArmCustomerId(v string) {
	o.ArmCustomerId.Set(&v)
}
// SetArmCustomerIdNil sets the value for ArmCustomerId to be an explicit nil
func (o *PublicOrgConfigArmData) SetArmCustomerIdNil() {
	o.ArmCustomerId.Set(nil)
}

// UnsetArmCustomerId ensures that no value is present for ArmCustomerId, not even an explicit nil
func (o *PublicOrgConfigArmData) UnsetArmCustomerId() {
	o.ArmCustomerId.Unset()
}

// GetArmSsoUrl returns the ArmSsoUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicOrgConfigArmData) GetArmSsoUrl() string {
	if o == nil || isNil(o.ArmSsoUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ArmSsoUrl.Get()
}

// GetArmSsoUrlOk returns a tuple with the ArmSsoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicOrgConfigArmData) GetArmSsoUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArmSsoUrl.Get(), o.ArmSsoUrl.IsSet()
}

// HasArmSsoUrl returns a boolean if a field has been set.
func (o *PublicOrgConfigArmData) HasArmSsoUrl() bool {
	if o != nil && o.ArmSsoUrl.IsSet() {
		return true
	}

	return false
}

// SetArmSsoUrl gets a reference to the given NullableString and assigns it to the ArmSsoUrl field.
func (o *PublicOrgConfigArmData) SetArmSsoUrl(v string) {
	o.ArmSsoUrl.Set(&v)
}
// SetArmSsoUrlNil sets the value for ArmSsoUrl to be an explicit nil
func (o *PublicOrgConfigArmData) SetArmSsoUrlNil() {
	o.ArmSsoUrl.Set(nil)
}

// UnsetArmSsoUrl ensures that no value is present for ArmSsoUrl, not even an explicit nil
func (o *PublicOrgConfigArmData) UnsetArmSsoUrl() {
	o.ArmSsoUrl.Unset()
}

func (o PublicOrgConfigArmData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicOrgConfigArmData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ArmCustomerId.IsSet() {
		toSerialize["armCustomerId"] = o.ArmCustomerId.Get()
	}
	if o.ArmSsoUrl.IsSet() {
		toSerialize["armSsoUrl"] = o.ArmSsoUrl.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PublicOrgConfigArmData) UnmarshalJSON(bytes []byte) (err error) {
	varPublicOrgConfigArmData := _PublicOrgConfigArmData{}

	if err = json.Unmarshal(bytes, &varPublicOrgConfigArmData); err == nil {
		*o = PublicOrgConfigArmData(varPublicOrgConfigArmData)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "armCustomerId")
		delete(additionalProperties, "armSsoUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePublicOrgConfigArmData struct {
	value *PublicOrgConfigArmData
	isSet bool
}

func (v NullablePublicOrgConfigArmData) Get() *PublicOrgConfigArmData {
	return v.value
}

func (v *NullablePublicOrgConfigArmData) Set(val *PublicOrgConfigArmData) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicOrgConfigArmData) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicOrgConfigArmData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicOrgConfigArmData(val *PublicOrgConfigArmData) *NullablePublicOrgConfigArmData {
	return &NullablePublicOrgConfigArmData{value: val, isSet: true}
}

func (v NullablePublicOrgConfigArmData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicOrgConfigArmData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


