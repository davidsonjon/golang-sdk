/*
IdentityNow V3 API

Testing CertificationCampaignFiltersApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package v3

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/davidsonjon/golang-sdk"
)

func Test_v3_CertificationCampaignFiltersApiService(t *testing.T) {

	configuration := openapiclient.NewDefaultConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CertificationCampaignFiltersApiService CreateCampaignFilter", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.V3.CertificationCampaignFiltersApi.CreateCampaignFilter(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CertificationCampaignFiltersApiService DeleteCampaignFilters", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.V3.CertificationCampaignFiltersApi.DeleteCampaignFilters(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CertificationCampaignFiltersApiService GetCampaignFilterById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var filterId string

		resp, httpRes, err := apiClient.V3.CertificationCampaignFiltersApi.GetCampaignFilterById(context.Background(), filterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CertificationCampaignFiltersApiService ListCampaignFilters", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.V3.CertificationCampaignFiltersApi.ListCampaignFilters(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CertificationCampaignFiltersApiService UpdateCampaignFilter", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var filterId string

		resp, httpRes, err := apiClient.V3.CertificationCampaignFiltersApi.UpdateCampaignFilter(context.Background(), filterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
